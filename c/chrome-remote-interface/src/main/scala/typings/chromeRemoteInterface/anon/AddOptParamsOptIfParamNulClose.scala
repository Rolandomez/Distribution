package typings.chromeRemoteInterface.anon

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/* Inlined chrome-remote-interface.chrome-remote-interface.AddOptParams<chrome-remote-interface.chrome-remote-interface.OptIfParamNullable<devtools-protocol.devtools-protocol/types/protocol-proxy-api.default.IOApi>> */
trait AddOptParamsOptIfParamNulClose extends StObject {
  
  var close: /* import warning: importer.ImportType#apply Failed type conversion: 'close' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> */ js.Any
  
  var read: /* import warning: importer.ImportType#apply Failed type conversion: 'read' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> */ js.Any
  
  var resolveBlob: /* import warning: importer.ImportType#apply Failed type conversion: 'resolveBlob' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> */ js.Any
}
object AddOptParamsOptIfParamNulClose {
  
  inline def apply(
    close: /* import warning: importer.ImportType#apply Failed type conversion: 'close' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> */ js.Any,
    read: /* import warning: importer.ImportType#apply Failed type conversion: 'read' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> */ js.Any,
    resolveBlob: /* import warning: importer.ImportType#apply Failed type conversion: 'resolveBlob' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> */ js.Any
  ): AddOptParamsOptIfParamNulClose = {
    val __obj = js.Dynamic.literal(close = close.asInstanceOf[js.Any], read = read.asInstanceOf[js.Any], resolveBlob = resolveBlob.asInstanceOf[js.Any])
    __obj.asInstanceOf[AddOptParamsOptIfParamNulClose]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: AddOptParamsOptIfParamNulClose] (val x: Self) extends AnyVal {
    
    inline def setClose(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'close' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.IO.CloseRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "close", value.asInstanceOf[js.Any])
    
    inline def setRead(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'read' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ReadRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ReadResponse> */ js.Any
    ): Self = StObject.set(x, "read", value.asInstanceOf[js.Any])
    
    inline def setResolveBlob(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'resolveBlob' extends 'on' ? (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (args : infer P): infer R ? (args : [curArgs: ...P, sessionId: string | undefined]): R : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> : (params : devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.IO.ResolveBlobResponse> */ js.Any
    ): Self = StObject.set(x, "resolveBlob", value.asInstanceOf[js.Any])
  }
}
