package typings.chromeRemoteInterface.anon

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/* Inlined chrome-remote-interface.chrome-remote-interface.OptIfParamNullable<devtools-protocol.devtools-protocol/types/protocol-proxy-api.default.TargetApi> */
trait OptIfParamNullableTargetA extends StObject {
  
  var activateTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> */ js.Any
  
  var attachToBrowserTarget: /* import warning: importer.ImportType#apply Failed type conversion: (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>>[0]> extends true ? (params : std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>>[0] | undefined): std.ReturnType<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> */ js.Any
  
  var attachToTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> */ js.Any
  
  var autoAttachRelated: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> */ js.Any
  
  var closeTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> */ js.Any
  
  var createBrowserContext: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> */ js.Any
  
  var createTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> */ js.Any
  
  var detachFromTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> */ js.Any
  
  var disposeBrowserContext: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> */ js.Any
  
  var exposeDevToolsProtocol: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> */ js.Any
  
  var getBrowserContexts: /* import warning: importer.ImportType#apply Failed type conversion: (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>>[0]> extends true ? (params : std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>>[0] | undefined): std.ReturnType<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> */ js.Any
  
  var getTargetInfo: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> */ js.Any
  
  var getTargets: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> */ js.Any
  
  var on: /* import warning: importer.ImportType#apply Failed type conversion: (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void>[0]> extends true ? (params : std.Parameters<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void>[0] | undefined): std.ReturnType<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void> : (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void : (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void */ js.Any
  
  var sendMessageToTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> */ js.Any
  
  var setAutoAttach: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> */ js.Any
  
  var setDiscoverTargets: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> */ js.Any
  
  var setRemoteLocations: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> */ js.Any
}
object OptIfParamNullableTargetA {
  
  inline def apply(
    activateTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> */ js.Any,
    attachToBrowserTarget: /* import warning: importer.ImportType#apply Failed type conversion: (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>>[0]> extends true ? (params : std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>>[0] | undefined): std.ReturnType<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> */ js.Any,
    attachToTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> */ js.Any,
    autoAttachRelated: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> */ js.Any,
    closeTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> */ js.Any,
    createBrowserContext: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> */ js.Any,
    createTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> */ js.Any,
    detachFromTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> */ js.Any,
    disposeBrowserContext: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> */ js.Any,
    exposeDevToolsProtocol: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> */ js.Any,
    getBrowserContexts: /* import warning: importer.ImportType#apply Failed type conversion: (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>>[0]> extends true ? (params : std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>>[0] | undefined): std.ReturnType<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> */ js.Any,
    getTargetInfo: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> */ js.Any,
    getTargets: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> */ js.Any,
    on: /* import warning: importer.ImportType#apply Failed type conversion: (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void>[0]> extends true ? (params : std.Parameters<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void>[0] | undefined): std.ReturnType<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void> : (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void : (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void */ js.Any,
    sendMessageToTarget: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> */ js.Any,
    setAutoAttach: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> */ js.Any,
    setDiscoverTargets: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> */ js.Any,
    setRemoteLocations: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> */ js.Any
  ): OptIfParamNullableTargetA = {
    val __obj = js.Dynamic.literal(activateTarget = activateTarget.asInstanceOf[js.Any], attachToBrowserTarget = attachToBrowserTarget.asInstanceOf[js.Any], attachToTarget = attachToTarget.asInstanceOf[js.Any], autoAttachRelated = autoAttachRelated.asInstanceOf[js.Any], closeTarget = closeTarget.asInstanceOf[js.Any], createBrowserContext = createBrowserContext.asInstanceOf[js.Any], createTarget = createTarget.asInstanceOf[js.Any], detachFromTarget = detachFromTarget.asInstanceOf[js.Any], disposeBrowserContext = disposeBrowserContext.asInstanceOf[js.Any], exposeDevToolsProtocol = exposeDevToolsProtocol.asInstanceOf[js.Any], getBrowserContexts = getBrowserContexts.asInstanceOf[js.Any], getTargetInfo = getTargetInfo.asInstanceOf[js.Any], getTargets = getTargets.asInstanceOf[js.Any], on = on.asInstanceOf[js.Any], sendMessageToTarget = sendMessageToTarget.asInstanceOf[js.Any], setAutoAttach = setAutoAttach.asInstanceOf[js.Any], setDiscoverTargets = setDiscoverTargets.asInstanceOf[js.Any], setRemoteLocations = setRemoteLocations.asInstanceOf[js.Any])
    __obj.asInstanceOf[OptIfParamNullableTargetA]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: OptIfParamNullableTargetA] (val x: Self) extends AnyVal {
    
    inline def setActivateTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ActivateTargetRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "activateTarget", value.asInstanceOf[js.Any])
    
    inline def setAttachToBrowserTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>>[0]> extends true ? (params : std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>>[0] | undefined): std.ReturnType<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse>> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToBrowserTargetResponse> */ js.Any
    ): Self = StObject.set(x, "attachToBrowserTarget", value.asInstanceOf[js.Any])
    
    inline def setAttachToTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.AttachToTargetResponse> */ js.Any
    ): Self = StObject.set(x, "attachToTarget", value.asInstanceOf[js.Any])
    
    inline def setAutoAttachRelated(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.AutoAttachRelatedRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "autoAttachRelated", value.asInstanceOf[js.Any])
    
    inline def setCloseTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CloseTargetResponse> */ js.Any
    ): Self = StObject.set(x, "closeTarget", value.asInstanceOf[js.Any])
    
    inline def setCreateBrowserContext(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateBrowserContextResponse> */ js.Any
    ): Self = StObject.set(x, "createBrowserContext", value.asInstanceOf[js.Any])
    
    inline def setCreateTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.CreateTargetResponse> */ js.Any
    ): Self = StObject.set(x, "createTarget", value.asInstanceOf[js.Any])
    
    inline def setDetachFromTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DetachFromTargetRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "detachFromTarget", value.asInstanceOf[js.Any])
    
    inline def setDisposeBrowserContext(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.DisposeBrowserContextRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "disposeBrowserContext", value.asInstanceOf[js.Any])
    
    inline def setExposeDevToolsProtocol(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.ExposeDevToolsProtocolRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "exposeDevToolsProtocol", value.asInstanceOf[js.Any])
    
    inline def setGetBrowserContexts(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>>[0]> extends true ? (params : std.Parameters<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>>[0] | undefined): std.ReturnType<(): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse>> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> : (): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetBrowserContextsResponse> */ js.Any
    ): Self = StObject.set(x, "getBrowserContexts", value.asInstanceOf[js.Any])
    
    inline def setGetTargetInfo(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetInfoResponse> */ js.Any
    ): Self = StObject.set(x, "getTargetInfo", value.asInstanceOf[js.Any])
    
    inline def setGetTargets(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> : (params : devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsRequest): std.Promise<devtools-protocol.devtools-protocol.Protocol.Target.GetTargetsResponse> */ js.Any
    ): Self = StObject.set(x, "getTargets", value.asInstanceOf[js.Any])
    
    inline def setOn(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void>[0]> extends true ? (params : std.Parameters<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void>[0] | undefined): std.ReturnType<(event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void> : (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void : (event : 'attachedToTarget', listener : (params : devtools-protocol.devtools-protocol.Protocol.Target.AttachedToTargetEvent): void): void */ js.Any
    ): Self = StObject.set(x, "on", value.asInstanceOf[js.Any])
    
    inline def setSendMessageToTarget(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SendMessageToTargetRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "sendMessageToTarget", value.asInstanceOf[js.Any])
    
    inline def setSetAutoAttach(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetAutoAttachRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "setAutoAttach", value.asInstanceOf[js.Any])
    
    inline def setSetDiscoverTargets(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetDiscoverTargetsRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "setDiscoverTargets", value.asInstanceOf[js.Any])
    
    inline def setSetRemoteLocations(
      value: /* import warning: importer.ImportType#apply Failed type conversion: (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> extends (params : any): any ? chrome-remote-interface.chrome-remote-interface.IsNullableObj<std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>>[0]> extends true ? (params : std.Parameters<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>>[0] | undefined): std.ReturnType<(params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void>> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> : (params : devtools-protocol.devtools-protocol.Protocol.Target.SetRemoteLocationsRequest): std.Promise<void> */ js.Any
    ): Self = StObject.set(x, "setRemoteLocations", value.asInstanceOf[js.Any])
  }
}
