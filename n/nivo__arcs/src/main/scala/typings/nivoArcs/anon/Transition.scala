package typings.nivoArcs.anon

import typings.nivoArcs.distTypesTypesMod.ArcGenerator
import typings.nivoArcs.distTypesTypesMod.DatumWithArc
import typings.react.mod.global.JSX.Element
import typings.reactSpringCore.mod.Interpolation
import typings.reactSpringCore.mod.SpringValue
import typings.reactSpringCore.mod.TransitionFn
import typings.reactSpringCore.mod.TransitionRenderFn
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait Transition[Datum /* <: DatumWithArc */, ExtraProps] extends StObject {
  
  def interpolate(
    startAngleValue: SpringValue[Double],
    endAngleValue: SpringValue[Double],
    innerRadiusValue: SpringValue[Double],
    outerRadiusValue: SpringValue[Double],
    arcGenerator: ArcGenerator
  ): Interpolation[String | Null, Any]
  
  var transition: TransitionFn[
    Datum, 
    /* import warning: importer.ImportType#apply Failed type conversion: [{  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps] extends [@react-spring/types.@react-spring/types.Any] ? @react-spring/types.@react-spring/types.Lookup<any> : [object] extends [{  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps] ? @react-spring/types.@react-spring/types.Lookup<any> : {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2 ? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps ? T_2 extends {  from :infer From} ? From extends (): any ? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never ? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k : T_8): void : never : never : never extends (k : infer I): void ? I : never extends infer T_5 ? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4 ? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3 ? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_10 ? T_10 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2 ? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps ? T_2 extends {  from :infer From} ? From extends (): any ? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never ? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k : T_8): void : never : never : never extends (k : infer I): void ? I : never extends infer T_5 ? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4 ? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3 ? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never ? T_10 extends any ? (k : T_10): void : never : never : never extends (k : infer I): void ? I : never extends infer T_1 ? {[ P_1 in keyof T_1 ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_9? T_9 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_9 extends infer U? P_1 extends keyof U? U[P_1] : never : never : never : never} : never extends infer T ? {[ P in keyof T ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_10? T_10 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_10 extends any? (k : T_10): void : never : never : never extends (k : infer I): void? I : never extends infer T_1? {[ P_1 in keyof T_1 ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_9? T_9 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_9 extends infer U? P_1 extends keyof U? U[P_1] : never : never : never : never} : never[P]} : never */ js.Any
  ]
}
object Transition {
  
  inline def apply[Datum /* <: DatumWithArc */, ExtraProps](
    interpolate: (SpringValue[Double], SpringValue[Double], SpringValue[Double], SpringValue[Double], ArcGenerator) => Interpolation[String | Null, Any],
    transition: /* render */ TransitionRenderFn[
      Datum, 
      /* import warning: importer.ImportType#apply Failed type conversion: [{  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps] extends [@react-spring/types.@react-spring/types.Any] ? @react-spring/types.@react-spring/types.Lookup<any> : [object] extends [{  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps] ? @react-spring/types.@react-spring/types.Lookup<any> : {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2 ? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps ? T_2 extends {  from :infer From} ? From extends (): any ? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never ? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k : T_8): void : never : never : never extends (k : infer I): void ? I : never extends infer T_5 ? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4 ? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3 ? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_10 ? T_10 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2 ? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps ? T_2 extends {  from :infer From} ? From extends (): any ? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never ? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k : T_8): void : never : never : never extends (k : infer I): void ? I : never extends infer T_5 ? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4 ? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3 ? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never ? T_10 extends any ? (k : T_10): void : never : never : never extends (k : infer I): void ? I : never extends infer T_1 ? {[ P_1 in keyof T_1 ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_9? T_9 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_9 extends infer U? P_1 extends keyof U? U[P_1] : never : never : never : never} : never extends infer T ? {[ P in keyof T ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_10? T_10 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_10 extends any? (k : T_10): void : never : never : never extends (k : infer I): void? I : never extends infer T_1? {[ P_1 in keyof T_1 ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_9? T_9 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_9 extends infer U? P_1 extends keyof U? U[P_1] : never : never : never : never} : never[P]} : never */ js.Any
    ] => Element
  ): Transition[Datum, ExtraProps] = {
    val __obj = js.Dynamic.literal(interpolate = js.Any.fromFunction5(interpolate), transition = js.Any.fromFunction1(transition))
    __obj.asInstanceOf[Transition[Datum, ExtraProps]]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: Transition[?, ?], Datum /* <: DatumWithArc */, ExtraProps] (val x: Self & (Transition[Datum, ExtraProps])) extends AnyVal {
    
    inline def setInterpolate(
      value: (SpringValue[Double], SpringValue[Double], SpringValue[Double], SpringValue[Double], ArcGenerator) => Interpolation[String | Null, Any]
    ): Self = StObject.set(x, "interpolate", js.Any.fromFunction5(value))
    
    inline def setTransition(
      value: /* render */ TransitionRenderFn[
          Datum, 
          /* import warning: importer.ImportType#apply Failed type conversion: [{  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps] extends [@react-spring/types.@react-spring/types.Any] ? @react-spring/types.@react-spring/types.Lookup<any> : [object] extends [{  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps] ? @react-spring/types.@react-spring/types.Lookup<any> : {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2 ? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps ? T_2 extends {  from :infer From} ? From extends (): any ? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never ? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k : T_8): void : never : never : never extends (k : infer I): void ? I : never extends infer T_5 ? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4 ? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3 ? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_10 ? T_10 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2 ? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps ? T_2 extends {  from :infer From} ? From extends (): any ? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never ? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends std.Array<infer Element_1> ? Element_1 : T_6 extends (args : ...any): infer Return ? Return extends std.Array<infer ReturnElement> ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k : T_8): void : never : never : never extends (k : infer I): void ? I : never extends infer T_5 ? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4 ? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3 ? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never ? T_10 extends any ? (k : T_10): void : never : never : never extends (k : infer I): void ? I : never extends infer T_1 ? {[ P_1 in keyof T_1 ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_9? T_9 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_9 extends infer U? P_1 extends keyof U? U[P_1] : never : never : never : never} : never extends infer T ? {[ P in keyof T ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_10? T_10 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_10 extends any? (k : T_10): void : never : never : never extends (k : infer I): void? I : never extends infer T_1? {[ P_1 in keyof T_1 ]: {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never extends infer T_9? T_9 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps extends infer T_2? T_2 extends {  progress :number,   startAngle :number,   endAngle :number,   innerRadius :number,   outerRadius :number} & ExtraProps? T_2 extends {  from :infer From}? From extends (): any? std.ReturnType<From> : @react-spring/types.@react-spring/types.ObjectType<From> : @react-spring/core.@react-spring/core.TransitionKey & keyof T_2 extends never? @react-spring/core.@react-spring/core.ToValues<T_2, true> : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'> extends infer T_3? {[ P_2 in keyof T_3 ]: std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2] extends @react-spring/shared.@react-spring/shared.FluidValue<infer U_1, any>? U_1 : std.Omit<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never extends infer T_4? {[ P_3 in keyof T_4 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_8? T_8 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_8 extends any? (k : T_8): void : never : never : never extends (k : infer I): void? I : never extends infer T_5? {[ P_4 in keyof T_5 ]: @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}> extends infer T_7? T_7 extends @react-spring/types.@react-spring/types.Constrain<@react-spring/types.@react-spring/types.ObjectType<T_2[@react-spring/core.@react-spring/core.TransitionKey & keyof T_2] extends infer T_6? T_6 extends std.Array<infer Element_1>? Element_1 : T_6 extends (args : ...any): infer Return? Return extends std.Array<infer ReturnElement>? ReturnElement : Return : T_6 : never>, {}>? T_7 extends infer U? P_4 extends keyof U? U[P_4] : never : never : never : never} : never[P_3]} : never, {}>, 'config' | 'from' | 'to' | 'ref' | 'loop' | 'pause' | 'reset' | 'cancel' | 'reverse' | 'immediate' | 'default' | 'delay' | 'items' | 'trail' | 'sort' | 'expires' | 'initial' | 'enter' | 'update' | 'leave' | 'children' | 'keys' | 'callId' | 'parentId'>[P_2]} : never : never : never? T_9 extends infer U? P_1 extends keyof U? U[P_1] : never : never : never : never} : never[P]} : never */ js.Any
        ] => Element
    ): Self = StObject.set(x, "transition", js.Any.fromFunction1(value))
  }
}
