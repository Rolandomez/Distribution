package typings.sparkpost.mod

import typings.request.mod.Options
import typings.sparkpost.anon.Create
import typings.sparkpost.anon.Delete
import typings.sparkpost.anon.Get
import typings.sparkpost.anon.GetBatchStatus
import typings.sparkpost.anon.Preview
import typings.sparkpost.anon.Search
import typings.sparkpost.anon.Send
import typings.sparkpost.anon.Update
import typings.sparkpost.anon.Upsert
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait SparkPost extends StObject {
  
  def delete(options: Options): js.Promise[Response[Any]] = js.native
  def delete(options: Options, callback: Callback[Any]): Unit = js.native
  
  def get(options: Options): js.Promise[Response[Any]] = js.native
  def get(options: Options, callback: Callback[Any]): Unit = js.native
  
  /** Specifying an inbound domain enables you to customize the address to which inbound messages are sent. */
  var inboundDomains: Create = js.native
  
  /** The Message Events API provides the means to search the raw events generated by SparkPost. */
  var messageEvents: Search = js.native
  
  def post(options: Options): js.Promise[Response[Any]] = js.native
  def post(options: Options, callback: Callback[Any]): Unit = js.native
  
  def put(options: Options): js.Promise[Response[Any]] = js.native
  def put(options: Options, callback: Callback[Any]): Unit = js.native
  
  /** A recipient list is a collection of recipients that can be used in a transmission. */
  var recipientLists: Delete = js.native
  
  /** Relay Webhooks are a way to instruct SparkPost to accept inbound email on your behalf and forward it to you over HTTP for your own consumption. */
  var relayWebhooks: Get = js.native
  
  def request(options: Options): js.Promise[Response[Any]] = js.native
  def request(options: Options, callback: Callback[Any]): Unit = js.native
  
  var sendingDomains: typings.sparkpost.anon.List = js.native
  
  var subaccounts: Update = js.native
  
  var suppressionList: Upsert = js.native
  
  var templates: Preview = js.native
  
  var transmissions: Send = js.native
  
  var webhooks: GetBatchStatus = js.native
}
