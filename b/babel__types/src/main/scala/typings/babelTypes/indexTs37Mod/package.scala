package typings.babelTypes.indexTs37Mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}


inline def addComment[T /* <: typings.babelTypes.indexTs37Mod.Node */](node: T, `type`: typings.babelTypes.indexTs37Mod.CommentTypeShorthand, content: java.lang.String): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("addComment")(node.asInstanceOf[js.Any], `type`.asInstanceOf[js.Any], content.asInstanceOf[js.Any])).asInstanceOf[T]
inline def addComment[T /* <: typings.babelTypes.indexTs37Mod.Node */](
  node: T,
  `type`: typings.babelTypes.indexTs37Mod.CommentTypeShorthand,
  content: java.lang.String,
  line: scala.Boolean
): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("addComment")(node.asInstanceOf[js.Any], `type`.asInstanceOf[js.Any], content.asInstanceOf[js.Any], line.asInstanceOf[js.Any])).asInstanceOf[T]

inline def addComments[T /* <: typings.babelTypes.indexTs37Mod.Node */](
  node: T,
  `type`: typings.babelTypes.indexTs37Mod.CommentTypeShorthand,
  comments: js.Array[typings.babelTypes.indexTs37Mod.Comment]
): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("addComments")(node.asInstanceOf[js.Any], `type`.asInstanceOf[js.Any], comments.asInstanceOf[js.Any])).asInstanceOf[T]

inline def anyTypeAnnotation(): typings.babelTypes.indexTs37Mod.AnyTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("anyTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.AnyTypeAnnotation_]

inline def appendToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typings.babelTypes.indexTs37Mod.Expression): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any])).asInstanceOf[T]
inline def appendToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typings.babelTypes.indexTs37Mod.Expression, computed: scala.Boolean): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[T]
inline def appendToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typings.babelTypes.indexTs37Mod.Identifier_): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any])).asInstanceOf[T]
inline def appendToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typings.babelTypes.indexTs37Mod.Identifier_, computed: scala.Boolean): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[T]
inline def appendToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typings.babelTypes.indexTs37Mod.PrivateName_): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any])).asInstanceOf[T]
inline def appendToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typings.babelTypes.indexTs37Mod.PrivateName_, computed: scala.Boolean): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[T]

inline def argumentPlaceholder(): typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("argumentPlaceholder")().asInstanceOf[typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_]

inline def arrayExpression(): typings.babelTypes.indexTs37Mod.ArrayExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayExpression")().asInstanceOf[typings.babelTypes.indexTs37Mod.ArrayExpression_]
inline def arrayExpression(
  elements: js.Array[
  scala.Null | typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_
]
): typings.babelTypes.indexTs37Mod.ArrayExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayExpression")(elements.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrayExpression_]

inline def arrayPattern(elements: js.Array[scala.Null | typings.babelTypes.indexTs37Mod.PatternLike]): typings.babelTypes.indexTs37Mod.ArrayPattern_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayPattern")(elements.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrayPattern_]

inline def arrayTypeAnnotation(elementType: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.ArrayTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayTypeAnnotation")(elementType.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrayTypeAnnotation_]

inline def arrowFunctionExpression(
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
inline def arrowFunctionExpression(
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
inline def arrowFunctionExpression(
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
inline def arrowFunctionExpression(
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.Expression,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_]

inline def assertAnyTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertAnyTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertAnyTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertAnyTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertAnyTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertArgumentPlaceholder(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
inline def assertArgumentPlaceholder(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
inline def assertArgumentPlaceholder(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
inline def assertArgumentPlaceholder(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
inline def assertArgumentPlaceholder(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]

inline def assertArrayExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
inline def assertArrayExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
inline def assertArrayExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
inline def assertArrayExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
inline def assertArrayExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]

inline def assertArrayPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
inline def assertArrayPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
inline def assertArrayPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
inline def assertArrayPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
inline def assertArrayPattern(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]

inline def assertArrayTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertArrayTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertArrayTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertArrayTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertArrayTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertArrowFunctionExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
inline def assertArrowFunctionExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
inline def assertArrowFunctionExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
inline def assertArrowFunctionExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
inline def assertArrowFunctionExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]

inline def assertAssignmentExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
inline def assertAssignmentExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
inline def assertAssignmentExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
inline def assertAssignmentExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
inline def assertAssignmentExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]

inline def assertAssignmentPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
inline def assertAssignmentPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
inline def assertAssignmentPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
inline def assertAssignmentPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
inline def assertAssignmentPattern(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]

inline def assertAwaitExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
inline def assertAwaitExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
inline def assertAwaitExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
inline def assertAwaitExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
inline def assertAwaitExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]

inline def assertBigIntLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
inline def assertBigIntLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
inline def assertBigIntLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
inline def assertBigIntLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
inline def assertBigIntLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]

inline def assertBinary(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
inline def assertBinary(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
inline def assertBinary(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
inline def assertBinary(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
inline def assertBinary(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]

inline def assertBinaryExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
inline def assertBinaryExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
inline def assertBinaryExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
inline def assertBinaryExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
inline def assertBinaryExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]

inline def assertBindExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
inline def assertBindExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
inline def assertBindExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
inline def assertBindExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
inline def assertBindExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]

inline def assertBlock(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
inline def assertBlock(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
inline def assertBlock(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
inline def assertBlock(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
inline def assertBlock(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]

inline def assertBlockParent(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
inline def assertBlockParent(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
inline def assertBlockParent(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
inline def assertBlockParent(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
inline def assertBlockParent(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]

inline def assertBlockStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
inline def assertBlockStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
inline def assertBlockStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
inline def assertBlockStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
inline def assertBlockStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]

inline def assertBooleanLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]

inline def assertBooleanLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertBooleanTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertBooleanTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertBreakStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
inline def assertBreakStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
inline def assertBreakStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
inline def assertBreakStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
inline def assertBreakStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]

inline def assertCallExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
inline def assertCallExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
inline def assertCallExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
inline def assertCallExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
inline def assertCallExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]

inline def assertCatchClause(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
inline def assertCatchClause(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
inline def assertCatchClause(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
inline def assertCatchClause(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
inline def assertCatchClause(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]

inline def assertClass(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
inline def assertClass(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
inline def assertClass(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
inline def assertClass(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
inline def assertClass(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]

inline def assertClassBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
inline def assertClassBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
inline def assertClassBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
inline def assertClassBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
inline def assertClassBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]

inline def assertClassDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
inline def assertClassDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
inline def assertClassDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
inline def assertClassDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
inline def assertClassDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]

inline def assertClassExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
inline def assertClassExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
inline def assertClassExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
inline def assertClassExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
inline def assertClassExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]

inline def assertClassImplements(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
inline def assertClassImplements(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
inline def assertClassImplements(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
inline def assertClassImplements(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
inline def assertClassImplements(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]

inline def assertClassMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
inline def assertClassMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
inline def assertClassMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
inline def assertClassMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
inline def assertClassMethod(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]

inline def assertClassPrivateMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
inline def assertClassPrivateMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
inline def assertClassPrivateMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
inline def assertClassPrivateMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
inline def assertClassPrivateMethod(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]

inline def assertClassPrivateProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
inline def assertClassPrivateProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
inline def assertClassPrivateProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
inline def assertClassPrivateProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
inline def assertClassPrivateProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]

inline def assertClassProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
inline def assertClassProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
inline def assertClassProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
inline def assertClassProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
inline def assertClassProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]

inline def assertCompletionStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
inline def assertCompletionStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
inline def assertCompletionStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
inline def assertCompletionStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
inline def assertCompletionStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]

inline def assertConditional(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
inline def assertConditional(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
inline def assertConditional(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
inline def assertConditional(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
inline def assertConditional(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]

inline def assertConditionalExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
inline def assertConditionalExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
inline def assertConditionalExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
inline def assertConditionalExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
inline def assertConditionalExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]

inline def assertContinueStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
inline def assertContinueStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
inline def assertContinueStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
inline def assertContinueStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
inline def assertContinueStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]

inline def assertDebuggerStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
inline def assertDebuggerStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
inline def assertDebuggerStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
inline def assertDebuggerStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
inline def assertDebuggerStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]

inline def assertDecimalLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
inline def assertDecimalLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
inline def assertDecimalLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
inline def assertDecimalLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
inline def assertDecimalLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]

inline def assertDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
inline def assertDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
inline def assertDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
inline def assertDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
inline def assertDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]

inline def assertDeclareClass(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
inline def assertDeclareClass(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
inline def assertDeclareClass(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
inline def assertDeclareClass(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
inline def assertDeclareClass(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]

inline def assertDeclareExportAllDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportAllDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportAllDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportAllDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportAllDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]

inline def assertDeclareExportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertDeclareExportDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]

inline def assertDeclareFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
inline def assertDeclareFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
inline def assertDeclareFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
inline def assertDeclareFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
inline def assertDeclareFunction(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]

inline def assertDeclareInterface(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
inline def assertDeclareInterface(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
inline def assertDeclareInterface(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
inline def assertDeclareInterface(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
inline def assertDeclareInterface(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]

inline def assertDeclareModule(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
inline def assertDeclareModule(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
inline def assertDeclareModule(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
inline def assertDeclareModule(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
inline def assertDeclareModule(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]

inline def assertDeclareModuleExports(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
inline def assertDeclareModuleExports(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
inline def assertDeclareModuleExports(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
inline def assertDeclareModuleExports(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
inline def assertDeclareModuleExports(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]

inline def assertDeclareOpaqueType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
inline def assertDeclareOpaqueType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
inline def assertDeclareOpaqueType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
inline def assertDeclareOpaqueType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
inline def assertDeclareOpaqueType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]

inline def assertDeclareTypeAlias(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
inline def assertDeclareTypeAlias(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
inline def assertDeclareTypeAlias(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
inline def assertDeclareTypeAlias(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
inline def assertDeclareTypeAlias(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]

inline def assertDeclareVariable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
inline def assertDeclareVariable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
inline def assertDeclareVariable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
inline def assertDeclareVariable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
inline def assertDeclareVariable(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]

inline def assertDeclaredPredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
inline def assertDeclaredPredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
inline def assertDeclaredPredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
inline def assertDeclaredPredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
inline def assertDeclaredPredicate(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]

inline def assertDecorator(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
inline def assertDecorator(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
inline def assertDecorator(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
inline def assertDecorator(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
inline def assertDecorator(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]

inline def assertDirective(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
inline def assertDirective(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
inline def assertDirective(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
inline def assertDirective(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
inline def assertDirective(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]

inline def assertDirectiveLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
inline def assertDirectiveLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
inline def assertDirectiveLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
inline def assertDirectiveLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
inline def assertDirectiveLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]

inline def assertDoExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
inline def assertDoExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
inline def assertDoExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
inline def assertDoExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
inline def assertDoExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]

inline def assertDoWhileStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
inline def assertDoWhileStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
inline def assertDoWhileStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
inline def assertDoWhileStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
inline def assertDoWhileStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]

inline def assertEmptyStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
inline def assertEmptyStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
inline def assertEmptyStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
inline def assertEmptyStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
inline def assertEmptyStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]

inline def assertEmptyTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertEmptyTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertEmptyTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertEmptyTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertEmptyTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertEnumBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
inline def assertEnumBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
inline def assertEnumBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
inline def assertEnumBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
inline def assertEnumBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]

inline def assertEnumBooleanBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]

inline def assertEnumBooleanMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
inline def assertEnumBooleanMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]

inline def assertEnumDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertEnumDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertEnumDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertEnumDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertEnumDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]

inline def assertEnumDefaultedMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
inline def assertEnumDefaultedMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
inline def assertEnumDefaultedMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
inline def assertEnumDefaultedMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
inline def assertEnumDefaultedMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]

inline def assertEnumMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
inline def assertEnumMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
inline def assertEnumMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
inline def assertEnumMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
inline def assertEnumMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]

inline def assertEnumNumberBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
inline def assertEnumNumberBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
inline def assertEnumNumberBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
inline def assertEnumNumberBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
inline def assertEnumNumberBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]

inline def assertEnumNumberMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
inline def assertEnumNumberMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
inline def assertEnumNumberMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
inline def assertEnumNumberMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
inline def assertEnumNumberMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]

inline def assertEnumStringBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
inline def assertEnumStringBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
inline def assertEnumStringBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
inline def assertEnumStringBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
inline def assertEnumStringBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]

inline def assertEnumStringMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
inline def assertEnumStringMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
inline def assertEnumStringMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
inline def assertEnumStringMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
inline def assertEnumStringMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]

inline def assertEnumSymbolBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
inline def assertEnumSymbolBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
inline def assertEnumSymbolBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
inline def assertEnumSymbolBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
inline def assertEnumSymbolBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]

inline def assertExistsTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertExistsTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertExistsTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertExistsTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertExistsTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertExportAllDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportAllDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportAllDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportAllDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportAllDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]

inline def assertExportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]

inline def assertExportDefaultDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDefaultDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDefaultDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDefaultDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportDefaultDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]

inline def assertExportDefaultSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportDefaultSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportDefaultSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportDefaultSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportDefaultSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]

inline def assertExportNamedDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportNamedDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportNamedDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportNamedDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
inline def assertExportNamedDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]

inline def assertExportNamespaceSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportNamespaceSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportNamespaceSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportNamespaceSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]

inline def assertExportSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
inline def assertExportSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]

inline def assertExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
inline def assertExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
inline def assertExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
inline def assertExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
inline def assertExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]

inline def assertExpressionStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
inline def assertExpressionStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
inline def assertExpressionStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
inline def assertExpressionStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
inline def assertExpressionStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]

inline def assertExpressionWrapper(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
inline def assertExpressionWrapper(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
inline def assertExpressionWrapper(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
inline def assertExpressionWrapper(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
inline def assertExpressionWrapper(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]

inline def assertFile(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
inline def assertFile(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
inline def assertFile(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
inline def assertFile(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
inline def assertFile(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]

inline def assertFlow(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
inline def assertFlow(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
inline def assertFlow(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
inline def assertFlow(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
inline def assertFlow(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]

inline def assertFlowBaseAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
inline def assertFlowBaseAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
inline def assertFlowBaseAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
inline def assertFlowBaseAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
inline def assertFlowBaseAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]

inline def assertFlowDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
inline def assertFlowDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
inline def assertFlowDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
inline def assertFlowDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
inline def assertFlowDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]

inline def assertFlowPredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
inline def assertFlowPredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
inline def assertFlowPredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
inline def assertFlowPredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
inline def assertFlowPredicate(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]

inline def assertFlowType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
inline def assertFlowType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
inline def assertFlowType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
inline def assertFlowType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
inline def assertFlowType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]

inline def assertFor(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
inline def assertFor(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
inline def assertFor(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
inline def assertFor(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
inline def assertFor(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]

inline def assertForInStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
inline def assertForInStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
inline def assertForInStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
inline def assertForInStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
inline def assertForInStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]

inline def assertForOfStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
inline def assertForOfStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
inline def assertForOfStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
inline def assertForOfStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
inline def assertForOfStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]

inline def assertForStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
inline def assertForStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
inline def assertForStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
inline def assertForStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
inline def assertForStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]

inline def assertForXStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
inline def assertForXStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
inline def assertForXStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
inline def assertForXStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
inline def assertForXStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]

inline def assertFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
inline def assertFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
inline def assertFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
inline def assertFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
inline def assertFunction(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]

inline def assertFunctionDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
inline def assertFunctionDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
inline def assertFunctionDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
inline def assertFunctionDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
inline def assertFunctionDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]

inline def assertFunctionExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
inline def assertFunctionExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
inline def assertFunctionExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
inline def assertFunctionExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
inline def assertFunctionExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]

inline def assertFunctionParent(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
inline def assertFunctionParent(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
inline def assertFunctionParent(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
inline def assertFunctionParent(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
inline def assertFunctionParent(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]

inline def assertFunctionTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertFunctionTypeParam(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeParam(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeParam(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeParam(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
inline def assertFunctionTypeParam(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]

inline def assertGenericTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertGenericTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertGenericTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertGenericTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertGenericTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
inline def assertIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
inline def assertIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
inline def assertIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
inline def assertIdentifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]

inline def assertIfStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
inline def assertIfStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
inline def assertIfStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
inline def assertIfStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
inline def assertIfStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]

inline def assertImmutable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
inline def assertImmutable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
inline def assertImmutable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
inline def assertImmutable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
inline def assertImmutable(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]

inline def assertImport(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
inline def assertImport(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
inline def assertImport(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
inline def assertImport(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
inline def assertImport(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]

inline def assertImportAttribute(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
inline def assertImportAttribute(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
inline def assertImportAttribute(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
inline def assertImportAttribute(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
inline def assertImportAttribute(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]

inline def assertImportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
inline def assertImportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
inline def assertImportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
inline def assertImportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
inline def assertImportDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]

inline def assertImportDefaultSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportDefaultSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportDefaultSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportDefaultSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportDefaultSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]

inline def assertImportNamespaceSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportNamespaceSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportNamespaceSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportNamespaceSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]

inline def assertImportSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
inline def assertImportSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]

inline def assertInferredPredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
inline def assertInferredPredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
inline def assertInferredPredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
inline def assertInferredPredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
inline def assertInferredPredicate(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]

inline def assertInterfaceDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertInterfaceDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertInterfaceDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertInterfaceDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertInterfaceDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]

inline def assertInterfaceExtends(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
inline def assertInterfaceExtends(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
inline def assertInterfaceExtends(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
inline def assertInterfaceExtends(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
inline def assertInterfaceExtends(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]

inline def assertInterfaceTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertInterfaceTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertInterfaceTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertInterfaceTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertInterfaceTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertInterpreterDirective(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
inline def assertInterpreterDirective(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
inline def assertInterpreterDirective(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
inline def assertInterpreterDirective(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
inline def assertInterpreterDirective(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]

inline def assertIntersectionTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertIntersectionTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertIntersectionTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertIntersectionTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertIntersectionTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertJSX(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
inline def assertJSX(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
inline def assertJSX(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
inline def assertJSX(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
inline def assertJSX(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]

inline def assertJSXAttribute(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXAttribute(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXAttribute(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXAttribute(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXAttribute(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]

inline def assertJSXClosingElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
inline def assertJSXClosingElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
inline def assertJSXClosingElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
inline def assertJSXClosingElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
inline def assertJSXClosingElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]

inline def assertJSXClosingFragment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
inline def assertJSXClosingFragment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
inline def assertJSXClosingFragment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
inline def assertJSXClosingFragment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
inline def assertJSXClosingFragment(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]

inline def assertJSXElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
inline def assertJSXElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
inline def assertJSXElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
inline def assertJSXElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
inline def assertJSXElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]

inline def assertJSXEmptyExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
inline def assertJSXEmptyExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
inline def assertJSXEmptyExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
inline def assertJSXEmptyExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
inline def assertJSXEmptyExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]

inline def assertJSXExpressionContainer(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
inline def assertJSXExpressionContainer(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
inline def assertJSXExpressionContainer(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
inline def assertJSXExpressionContainer(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
inline def assertJSXExpressionContainer(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]

inline def assertJSXFragment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
inline def assertJSXFragment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
inline def assertJSXFragment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
inline def assertJSXFragment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
inline def assertJSXFragment(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]

inline def assertJSXIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
inline def assertJSXIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
inline def assertJSXIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
inline def assertJSXIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
inline def assertJSXIdentifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]

inline def assertJSXMemberExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
inline def assertJSXMemberExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
inline def assertJSXMemberExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
inline def assertJSXMemberExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
inline def assertJSXMemberExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]

inline def assertJSXNamespacedName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
inline def assertJSXNamespacedName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
inline def assertJSXNamespacedName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
inline def assertJSXNamespacedName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
inline def assertJSXNamespacedName(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]

inline def assertJSXOpeningElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]

inline def assertJSXOpeningFragment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningFragment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningFragment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningFragment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
inline def assertJSXOpeningFragment(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]

inline def assertJSXSpreadAttribute(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadAttribute(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadAttribute(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadAttribute(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadAttribute(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]

inline def assertJSXSpreadChild(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadChild(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadChild(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadChild(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
inline def assertJSXSpreadChild(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]

inline def assertJSXText(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
inline def assertJSXText(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
inline def assertJSXText(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
inline def assertJSXText(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
inline def assertJSXText(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]

inline def assertLVal(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
inline def assertLVal(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
inline def assertLVal(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
inline def assertLVal(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
inline def assertLVal(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]

inline def assertLabeledStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
inline def assertLabeledStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
inline def assertLabeledStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
inline def assertLabeledStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
inline def assertLabeledStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]

inline def assertLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
inline def assertLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
inline def assertLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
inline def assertLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
inline def assertLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]

inline def assertLogicalExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
inline def assertLogicalExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
inline def assertLogicalExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
inline def assertLogicalExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
inline def assertLogicalExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]

inline def assertLoop(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
inline def assertLoop(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
inline def assertLoop(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
inline def assertLoop(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
inline def assertLoop(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]

inline def assertMemberExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
inline def assertMemberExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
inline def assertMemberExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
inline def assertMemberExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
inline def assertMemberExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]

inline def assertMetaProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
inline def assertMetaProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
inline def assertMetaProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
inline def assertMetaProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
inline def assertMetaProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]

inline def assertMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
inline def assertMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
inline def assertMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
inline def assertMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
inline def assertMethod(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]

inline def assertMixedTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertMixedTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertMixedTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertMixedTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertMixedTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertModuleDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertModuleDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertModuleDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertModuleDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertModuleDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]

inline def assertModuleSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
inline def assertModuleSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
inline def assertModuleSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
inline def assertModuleSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
inline def assertModuleSpecifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]

inline def assertNewExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
inline def assertNewExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
inline def assertNewExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
inline def assertNewExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
inline def assertNewExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]

inline def assertNode(obj: js.Any): /* asserts obj is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Node))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNode")(obj.asInstanceOf[js.Any]).asInstanceOf[/* asserts obj is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Node))),IArray())*/ scala.Boolean]

inline def assertNoop(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
inline def assertNoop(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
inline def assertNoop(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
inline def assertNoop(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
inline def assertNoop(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]

inline def assertNullLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
inline def assertNullLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
inline def assertNullLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
inline def assertNullLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
inline def assertNullLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]

inline def assertNullLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertNullableTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullableTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullableTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullableTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNullableTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertNumberLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumberLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumberLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumberLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumberLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]

inline def assertNumberLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertNumberTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertNumberTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertNumericLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumericLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumericLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumericLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
inline def assertNumericLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]

inline def assertObjectExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
inline def assertObjectExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
inline def assertObjectExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
inline def assertObjectExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
inline def assertObjectExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]

inline def assertObjectMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
inline def assertObjectMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
inline def assertObjectMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
inline def assertObjectMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
inline def assertObjectMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]

inline def assertObjectMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
inline def assertObjectMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
inline def assertObjectMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
inline def assertObjectMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
inline def assertObjectMethod(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]

inline def assertObjectPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
inline def assertObjectPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
inline def assertObjectPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
inline def assertObjectPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
inline def assertObjectPattern(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]

inline def assertObjectProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
inline def assertObjectProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
inline def assertObjectProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
inline def assertObjectProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
inline def assertObjectProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]

inline def assertObjectTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertObjectTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertObjectTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertObjectTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertObjectTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertObjectTypeCallProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeCallProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeCallProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeCallProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeCallProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]

inline def assertObjectTypeIndexer(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
inline def assertObjectTypeIndexer(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
inline def assertObjectTypeIndexer(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
inline def assertObjectTypeIndexer(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
inline def assertObjectTypeIndexer(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]

inline def assertObjectTypeInternalSlot(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
inline def assertObjectTypeInternalSlot(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
inline def assertObjectTypeInternalSlot(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
inline def assertObjectTypeInternalSlot(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
inline def assertObjectTypeInternalSlot(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]

inline def assertObjectTypeProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]

inline def assertObjectTypeSpreadProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeSpreadProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeSpreadProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeSpreadProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
inline def assertObjectTypeSpreadProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]

inline def assertOpaqueType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
inline def assertOpaqueType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
inline def assertOpaqueType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
inline def assertOpaqueType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
inline def assertOpaqueType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]

inline def assertOptionalCallExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalCallExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalCallExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalCallExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalCallExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]

inline def assertOptionalMemberExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalMemberExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalMemberExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalMemberExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
inline def assertOptionalMemberExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]

inline def assertParenthesizedExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
inline def assertParenthesizedExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
inline def assertParenthesizedExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
inline def assertParenthesizedExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
inline def assertParenthesizedExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]

inline def assertPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
inline def assertPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
inline def assertPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
inline def assertPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
inline def assertPattern(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]

inline def assertPatternLike(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
inline def assertPatternLike(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
inline def assertPatternLike(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
inline def assertPatternLike(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
inline def assertPatternLike(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]

inline def assertPipelineBareFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
inline def assertPipelineBareFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
inline def assertPipelineBareFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
inline def assertPipelineBareFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
inline def assertPipelineBareFunction(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]

inline def assertPipelinePrimaryTopicReference(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
inline def assertPipelinePrimaryTopicReference(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
inline def assertPipelinePrimaryTopicReference(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
inline def assertPipelinePrimaryTopicReference(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
inline def assertPipelinePrimaryTopicReference(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]

inline def assertPipelineTopicExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
inline def assertPipelineTopicExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
inline def assertPipelineTopicExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
inline def assertPipelineTopicExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
inline def assertPipelineTopicExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]

inline def assertPlaceholder(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
inline def assertPlaceholder(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
inline def assertPlaceholder(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
inline def assertPlaceholder(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
inline def assertPlaceholder(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]

inline def assertPrivate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
inline def assertPrivate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
inline def assertPrivate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
inline def assertPrivate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
inline def assertPrivate(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]

inline def assertPrivateName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
inline def assertPrivateName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
inline def assertPrivateName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
inline def assertPrivateName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
inline def assertPrivateName(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]

inline def assertProgram(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
inline def assertProgram(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
inline def assertProgram(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
inline def assertProgram(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
inline def assertProgram(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]

inline def assertProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
inline def assertProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
inline def assertProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
inline def assertProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
inline def assertProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]

inline def assertPureish(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
inline def assertPureish(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
inline def assertPureish(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
inline def assertPureish(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
inline def assertPureish(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]

inline def assertQualifiedTypeIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
inline def assertQualifiedTypeIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
inline def assertQualifiedTypeIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
inline def assertQualifiedTypeIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
inline def assertQualifiedTypeIdentifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]

inline def assertRecordExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
inline def assertRecordExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
inline def assertRecordExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
inline def assertRecordExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
inline def assertRecordExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]

inline def assertRegExpLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegExpLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegExpLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegExpLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegExpLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]

inline def assertRegexLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegexLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegexLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegexLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
inline def assertRegexLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]

inline def assertRestElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]

inline def assertRestProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
inline def assertRestProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]

inline def assertReturnStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
inline def assertReturnStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
inline def assertReturnStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
inline def assertReturnStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
inline def assertReturnStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]

inline def assertScopable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
inline def assertScopable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
inline def assertScopable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
inline def assertScopable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
inline def assertScopable(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]

inline def assertSequenceExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
inline def assertSequenceExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
inline def assertSequenceExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
inline def assertSequenceExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
inline def assertSequenceExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]

inline def assertSpreadElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]

inline def assertSpreadProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
inline def assertSpreadProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]

inline def assertStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
inline def assertStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
inline def assertStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
inline def assertStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
inline def assertStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]

inline def assertStaticBlock(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
inline def assertStaticBlock(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
inline def assertStaticBlock(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
inline def assertStaticBlock(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
inline def assertStaticBlock(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]

inline def assertStringLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
inline def assertStringLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
inline def assertStringLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
inline def assertStringLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
inline def assertStringLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]

inline def assertStringLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertStringTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertStringTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertSuper(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
inline def assertSuper(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
inline def assertSuper(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
inline def assertSuper(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
inline def assertSuper(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]

inline def assertSwitchCase(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
inline def assertSwitchCase(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
inline def assertSwitchCase(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
inline def assertSwitchCase(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
inline def assertSwitchCase(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]

inline def assertSwitchStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
inline def assertSwitchStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
inline def assertSwitchStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
inline def assertSwitchStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
inline def assertSwitchStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]

inline def assertSymbolTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertSymbolTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertSymbolTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertSymbolTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertSymbolTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertTSAnyKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
inline def assertTSAnyKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
inline def assertTSAnyKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
inline def assertTSAnyKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
inline def assertTSAnyKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]

inline def assertTSArrayType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
inline def assertTSArrayType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
inline def assertTSArrayType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
inline def assertTSArrayType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
inline def assertTSArrayType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]

inline def assertTSAsExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
inline def assertTSAsExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
inline def assertTSAsExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
inline def assertTSAsExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
inline def assertTSAsExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]

inline def assertTSBaseType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
inline def assertTSBaseType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
inline def assertTSBaseType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
inline def assertTSBaseType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
inline def assertTSBaseType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]

inline def assertTSBigIntKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBigIntKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBigIntKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBigIntKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBigIntKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]

inline def assertTSBooleanKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBooleanKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBooleanKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBooleanKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
inline def assertTSBooleanKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]

inline def assertTSCallSignatureDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSCallSignatureDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSCallSignatureDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSCallSignatureDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSCallSignatureDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSConditionalType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
inline def assertTSConditionalType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
inline def assertTSConditionalType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
inline def assertTSConditionalType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
inline def assertTSConditionalType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]

inline def assertTSConstructSignatureDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSConstructSignatureDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSConstructSignatureDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSConstructSignatureDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSConstructSignatureDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSConstructorType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
inline def assertTSConstructorType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
inline def assertTSConstructorType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
inline def assertTSConstructorType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
inline def assertTSConstructorType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]

inline def assertTSDeclareFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
inline def assertTSDeclareFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
inline def assertTSDeclareFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
inline def assertTSDeclareFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
inline def assertTSDeclareFunction(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]

inline def assertTSDeclareMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
inline def assertTSDeclareMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
inline def assertTSDeclareMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
inline def assertTSDeclareMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
inline def assertTSDeclareMethod(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]

inline def assertTSEntityName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
inline def assertTSEntityName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
inline def assertTSEntityName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
inline def assertTSEntityName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
inline def assertTSEntityName(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]

inline def assertTSEnumDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSEnumDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSEnumDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSEnumDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSEnumDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSEnumMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
inline def assertTSEnumMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
inline def assertTSEnumMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
inline def assertTSEnumMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
inline def assertTSEnumMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]

inline def assertTSExportAssignment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
inline def assertTSExportAssignment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
inline def assertTSExportAssignment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
inline def assertTSExportAssignment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
inline def assertTSExportAssignment(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]

inline def assertTSExpressionWithTypeArguments(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
inline def assertTSExpressionWithTypeArguments(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
inline def assertTSExpressionWithTypeArguments(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
inline def assertTSExpressionWithTypeArguments(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
inline def assertTSExpressionWithTypeArguments(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]

inline def assertTSExternalModuleReference(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
inline def assertTSExternalModuleReference(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
inline def assertTSExternalModuleReference(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
inline def assertTSExternalModuleReference(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
inline def assertTSExternalModuleReference(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]

inline def assertTSFunctionType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
inline def assertTSFunctionType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
inline def assertTSFunctionType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
inline def assertTSFunctionType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
inline def assertTSFunctionType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]

inline def assertTSImportEqualsDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSImportEqualsDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSImportEqualsDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSImportEqualsDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSImportEqualsDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSImportType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
inline def assertTSImportType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
inline def assertTSImportType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
inline def assertTSImportType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
inline def assertTSImportType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]

inline def assertTSIndexSignature(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
inline def assertTSIndexSignature(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
inline def assertTSIndexSignature(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
inline def assertTSIndexSignature(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
inline def assertTSIndexSignature(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]

inline def assertTSIndexedAccessType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
inline def assertTSIndexedAccessType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
inline def assertTSIndexedAccessType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
inline def assertTSIndexedAccessType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
inline def assertTSIndexedAccessType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]

inline def assertTSInferType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
inline def assertTSInferType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
inline def assertTSInferType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
inline def assertTSInferType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
inline def assertTSInferType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]

inline def assertTSInterfaceBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceBody(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]

inline def assertTSInterfaceDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSInterfaceDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSIntersectionType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
inline def assertTSIntersectionType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
inline def assertTSIntersectionType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
inline def assertTSIntersectionType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
inline def assertTSIntersectionType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]

inline def assertTSIntrinsicKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
inline def assertTSIntrinsicKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
inline def assertTSIntrinsicKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
inline def assertTSIntrinsicKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
inline def assertTSIntrinsicKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]

inline def assertTSLiteralType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
inline def assertTSLiteralType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
inline def assertTSLiteralType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
inline def assertTSLiteralType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
inline def assertTSLiteralType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]

inline def assertTSMappedType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
inline def assertTSMappedType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
inline def assertTSMappedType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
inline def assertTSMappedType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
inline def assertTSMappedType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]

inline def assertTSMethodSignature(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
inline def assertTSMethodSignature(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
inline def assertTSMethodSignature(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
inline def assertTSMethodSignature(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
inline def assertTSMethodSignature(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]

inline def assertTSModuleBlock(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
inline def assertTSModuleBlock(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
inline def assertTSModuleBlock(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
inline def assertTSModuleBlock(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
inline def assertTSModuleBlock(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]

inline def assertTSModuleDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSModuleDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSModuleDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSModuleDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSModuleDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSNamedTupleMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
inline def assertTSNamedTupleMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
inline def assertTSNamedTupleMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
inline def assertTSNamedTupleMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
inline def assertTSNamedTupleMember(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]

inline def assertTSNamespaceExportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSNamespaceExportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSNamespaceExportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSNamespaceExportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSNamespaceExportDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSNeverKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNeverKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNeverKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNeverKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNeverKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]

inline def assertTSNonNullExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
inline def assertTSNonNullExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
inline def assertTSNonNullExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
inline def assertTSNonNullExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
inline def assertTSNonNullExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]

inline def assertTSNullKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNullKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNullKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNullKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNullKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]

inline def assertTSNumberKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNumberKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNumberKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNumberKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
inline def assertTSNumberKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]

inline def assertTSObjectKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
inline def assertTSObjectKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
inline def assertTSObjectKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
inline def assertTSObjectKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
inline def assertTSObjectKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]

inline def assertTSOptionalType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
inline def assertTSOptionalType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
inline def assertTSOptionalType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
inline def assertTSOptionalType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
inline def assertTSOptionalType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]

inline def assertTSParameterProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
inline def assertTSParameterProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
inline def assertTSParameterProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
inline def assertTSParameterProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
inline def assertTSParameterProperty(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]

inline def assertTSParenthesizedType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
inline def assertTSParenthesizedType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
inline def assertTSParenthesizedType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
inline def assertTSParenthesizedType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
inline def assertTSParenthesizedType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]

inline def assertTSPropertySignature(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
inline def assertTSPropertySignature(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
inline def assertTSPropertySignature(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
inline def assertTSPropertySignature(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
inline def assertTSPropertySignature(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]

inline def assertTSQualifiedName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
inline def assertTSQualifiedName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
inline def assertTSQualifiedName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
inline def assertTSQualifiedName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
inline def assertTSQualifiedName(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]

inline def assertTSRestType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
inline def assertTSRestType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
inline def assertTSRestType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
inline def assertTSRestType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
inline def assertTSRestType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]

inline def assertTSStringKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
inline def assertTSStringKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
inline def assertTSStringKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
inline def assertTSStringKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
inline def assertTSStringKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]

inline def assertTSSymbolKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
inline def assertTSSymbolKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
inline def assertTSSymbolKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
inline def assertTSSymbolKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
inline def assertTSSymbolKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]

inline def assertTSThisType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
inline def assertTSThisType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
inline def assertTSThisType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
inline def assertTSThisType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
inline def assertTSThisType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]

inline def assertTSTupleType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
inline def assertTSTupleType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
inline def assertTSTupleType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
inline def assertTSTupleType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
inline def assertTSTupleType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]

inline def assertTSType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
inline def assertTSType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
inline def assertTSType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
inline def assertTSType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
inline def assertTSType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]

inline def assertTSTypeAliasDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeAliasDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeAliasDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeAliasDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeAliasDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTSTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTSTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTSTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTSTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertTSTypeAssertion(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
inline def assertTSTypeAssertion(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
inline def assertTSTypeAssertion(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
inline def assertTSTypeAssertion(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
inline def assertTSTypeAssertion(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]

inline def assertTSTypeElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
inline def assertTSTypeElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
inline def assertTSTypeElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
inline def assertTSTypeElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
inline def assertTSTypeElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]

inline def assertTSTypeLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
inline def assertTSTypeLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
inline def assertTSTypeLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
inline def assertTSTypeLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
inline def assertTSTypeLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]

inline def assertTSTypeOperator(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
inline def assertTSTypeOperator(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
inline def assertTSTypeOperator(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
inline def assertTSTypeOperator(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
inline def assertTSTypeOperator(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]

inline def assertTSTypeParameter(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameter(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameter(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameter(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameter(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]

inline def assertTSTypeParameterDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]

inline def assertTSTypeParameterInstantiation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterInstantiation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterInstantiation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTSTypeParameterInstantiation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]

inline def assertTSTypePredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
inline def assertTSTypePredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
inline def assertTSTypePredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
inline def assertTSTypePredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
inline def assertTSTypePredicate(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]

inline def assertTSTypeQuery(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
inline def assertTSTypeQuery(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
inline def assertTSTypeQuery(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
inline def assertTSTypeQuery(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
inline def assertTSTypeQuery(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]

inline def assertTSTypeReference(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
inline def assertTSTypeReference(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
inline def assertTSTypeReference(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
inline def assertTSTypeReference(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
inline def assertTSTypeReference(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]

inline def assertTSUndefinedKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUndefinedKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUndefinedKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUndefinedKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUndefinedKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]

inline def assertTSUnionType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
inline def assertTSUnionType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
inline def assertTSUnionType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
inline def assertTSUnionType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
inline def assertTSUnionType(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]

inline def assertTSUnknownKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUnknownKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUnknownKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUnknownKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
inline def assertTSUnknownKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]

inline def assertTSVoidKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
inline def assertTSVoidKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
inline def assertTSVoidKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
inline def assertTSVoidKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
inline def assertTSVoidKeyword(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]

inline def assertTaggedTemplateExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
inline def assertTaggedTemplateExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
inline def assertTaggedTemplateExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
inline def assertTaggedTemplateExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
inline def assertTaggedTemplateExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]

inline def assertTemplateElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
inline def assertTemplateElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
inline def assertTemplateElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
inline def assertTemplateElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
inline def assertTemplateElement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]

inline def assertTemplateLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
inline def assertTemplateLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
inline def assertTemplateLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
inline def assertTemplateLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
inline def assertTemplateLiteral(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]

inline def assertTerminatorless(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
inline def assertTerminatorless(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
inline def assertTerminatorless(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
inline def assertTerminatorless(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
inline def assertTerminatorless(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]

inline def assertThisExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
inline def assertThisExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
inline def assertThisExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
inline def assertThisExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
inline def assertThisExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]

inline def assertThisTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertThisTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertThisTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertThisTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertThisTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertThrowStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
inline def assertThrowStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
inline def assertThrowStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
inline def assertThrowStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
inline def assertThrowStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]

inline def assertTryStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
inline def assertTryStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
inline def assertTryStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
inline def assertTryStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
inline def assertTryStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]

inline def assertTupleExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
inline def assertTupleExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
inline def assertTupleExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
inline def assertTupleExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
inline def assertTupleExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]

inline def assertTupleTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTupleTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTupleTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTupleTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTupleTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertTypeAlias(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
inline def assertTypeAlias(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
inline def assertTypeAlias(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
inline def assertTypeAlias(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
inline def assertTypeAlias(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]

inline def assertTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertTypeCastExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
inline def assertTypeCastExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
inline def assertTypeCastExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
inline def assertTypeCastExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
inline def assertTypeCastExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]

inline def assertTypeParameter(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
inline def assertTypeParameter(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
inline def assertTypeParameter(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
inline def assertTypeParameter(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
inline def assertTypeParameter(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]

inline def assertTypeParameterDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTypeParameterDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTypeParameterDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
inline def assertTypeParameterDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]

inline def assertTypeParameterInstantiation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTypeParameterInstantiation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTypeParameterInstantiation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
inline def assertTypeParameterInstantiation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]

inline def assertTypeofTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeofTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeofTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeofTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertTypeofTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertUnaryExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
inline def assertUnaryExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
inline def assertUnaryExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
inline def assertUnaryExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
inline def assertUnaryExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]

inline def assertUnaryLike(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
inline def assertUnaryLike(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
inline def assertUnaryLike(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
inline def assertUnaryLike(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
inline def assertUnaryLike(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]

inline def assertUnionTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertUnionTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertUnionTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertUnionTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertUnionTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertUpdateExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
inline def assertUpdateExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
inline def assertUpdateExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
inline def assertUpdateExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
inline def assertUpdateExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]

inline def assertUserWhitespacable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
inline def assertUserWhitespacable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
inline def assertUserWhitespacable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
inline def assertUserWhitespacable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
inline def assertUserWhitespacable(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]

inline def assertV8IntrinsicIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
inline def assertV8IntrinsicIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
inline def assertV8IntrinsicIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
inline def assertV8IntrinsicIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
inline def assertV8IntrinsicIdentifier(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]

inline def assertVariableDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
inline def assertVariableDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
inline def assertVariableDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
inline def assertVariableDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
inline def assertVariableDeclaration(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]

inline def assertVariableDeclarator(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
inline def assertVariableDeclarator(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
inline def assertVariableDeclarator(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
inline def assertVariableDeclarator(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
inline def assertVariableDeclarator(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]

inline def assertVariance(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
inline def assertVariance(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
inline def assertVariance(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
inline def assertVariance(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
inline def assertVariance(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]

inline def assertVoidTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertVoidTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertVoidTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertVoidTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
inline def assertVoidTypeAnnotation(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]

inline def assertWhile(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
inline def assertWhile(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
inline def assertWhile(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
inline def assertWhile(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
inline def assertWhile(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]

inline def assertWhileStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
inline def assertWhileStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
inline def assertWhileStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
inline def assertWhileStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
inline def assertWhileStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]

inline def assertWithStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
inline def assertWithStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
inline def assertWithStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
inline def assertWithStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
inline def assertWithStatement(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]

inline def assertYieldExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
inline def assertYieldExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
inline def assertYieldExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
inline def assertYieldExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
inline def assertYieldExpression(node: scala.Unit, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]

inline def assignmentExpression(
  operator: java.lang.String,
  left: typings.babelTypes.indexTs37Mod.LVal,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.AssignmentExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.AssignmentExpression_]

inline def assignmentPattern(
  left: typings.babelTypes.indexTs37Mod.ArrayPattern_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.AssignmentPattern_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.AssignmentPattern_]
inline def assignmentPattern(
  left: typings.babelTypes.indexTs37Mod.Identifier_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.AssignmentPattern_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.AssignmentPattern_]
inline def assignmentPattern(
  left: typings.babelTypes.indexTs37Mod.MemberExpression_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.AssignmentPattern_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.AssignmentPattern_]
inline def assignmentPattern(
  left: typings.babelTypes.indexTs37Mod.ObjectPattern_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.AssignmentPattern_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.AssignmentPattern_]

inline def awaitExpression(argument: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.AwaitExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("awaitExpression")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.AwaitExpression_]

inline def bigIntLiteral(value: java.lang.String): typings.babelTypes.indexTs37Mod.BigIntLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("bigIntLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BigIntLiteral_]

inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Ampersand,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Ampersand,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.AsteriskAsterisk,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.AsteriskAsterisk,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Asterisk,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Asterisk,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.EqualssignEqualssignEqualssign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.EqualssignEqualssignEqualssign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.EqualssignEqualssign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.EqualssignEqualssign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.ExclamationmarkEqualssignEqualssign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.ExclamationmarkEqualssignEqualssign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.ExclamationmarkEqualssign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.ExclamationmarkEqualssign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.GreaterthansignEqualssign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.GreaterthansignEqualssign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.GreaterthansignGreaterthansignGreaterthansign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.GreaterthansignGreaterthansignGreaterthansign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.GreaterthansignGreaterthansign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.GreaterthansignGreaterthansign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Greaterthansign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Greaterthansign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.LessthansignEqualssign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.LessthansignEqualssign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.LessthansignLessthansign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.LessthansignLessthansign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Lessthansign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Lessthansign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Percentsign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Percentsign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Plussign,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Plussign,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Slash,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Slash,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Verticalline,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Verticalline,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.^,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.^,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.`-_`,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression(
  operator: typings.babelTypes.babelTypesStrings.`-_`,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]

inline def binaryExpression_in(
  operator: typings.babelTypes.babelTypesStrings.in,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression_in(
  operator: typings.babelTypes.babelTypesStrings.in,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]

inline def binaryExpression_instanceof(
  operator: typings.babelTypes.babelTypesStrings.instanceof,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]
inline def binaryExpression_instanceof(
  operator: typings.babelTypes.babelTypesStrings.instanceof,
  left: typings.babelTypes.indexTs37Mod.PrivateName_,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BinaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BinaryExpression_]

inline def bindExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  callee: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.BindExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("bindExpression")(`object`.asInstanceOf[js.Any], callee.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BindExpression_]

inline def blockStatement(body: js.Array[typings.babelTypes.indexTs37Mod.Statement]): typings.babelTypes.indexTs37Mod.BlockStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("blockStatement")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]
inline def blockStatement(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_]
): typings.babelTypes.indexTs37Mod.BlockStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("blockStatement")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]

inline def booleanLiteral(value: scala.Boolean): typings.babelTypes.indexTs37Mod.BooleanLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("booleanLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BooleanLiteral_]

inline def booleanLiteralTypeAnnotation(value: scala.Boolean): typings.babelTypes.indexTs37Mod.BooleanLiteralTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("booleanLiteralTypeAnnotation")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BooleanLiteralTypeAnnotation_]

inline def booleanTypeAnnotation(): typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("booleanTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_]

inline def breakStatement(): typings.babelTypes.indexTs37Mod.BreakStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("breakStatement")().asInstanceOf[typings.babelTypes.indexTs37Mod.BreakStatement_]
inline def breakStatement(label: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.BreakStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("breakStatement")(label.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BreakStatement_]

inline def buildChildren(node: typings.babelTypes.anon.Children): js.Array[
typings.babelTypes.indexTs37Mod.JSXText_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXFragment_] = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("buildChildren")(node.asInstanceOf[js.Any]).asInstanceOf[js.Array[
typings.babelTypes.indexTs37Mod.JSXText_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXFragment_]]

inline def buildMatchMemberExpression(`match`: java.lang.String): js.Function1[
/* node */ js.UndefOr[typings.babelTypes.indexTs37Mod.Node | scala.Null], 
/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean] = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("buildMatchMemberExpression")(`match`.asInstanceOf[js.Any]).asInstanceOf[js.Function1[
/* node */ js.UndefOr[typings.babelTypes.indexTs37Mod.Node | scala.Null], 
/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]]
inline def buildMatchMemberExpression(`match`: java.lang.String, allowPartial: scala.Boolean): js.Function1[
/* node */ js.UndefOr[typings.babelTypes.indexTs37Mod.Node | scala.Null], 
/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("buildMatchMemberExpression")(`match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[js.Function1[
/* node */ js.UndefOr[typings.babelTypes.indexTs37Mod.Node | scala.Null], 
/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]]

inline def callExpression(
  callee: typings.babelTypes.indexTs37Mod.Expression,
  _arguments: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_ | typings.babelTypes.indexTs37Mod.JSXNamespacedName_ | typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_
]
): typings.babelTypes.indexTs37Mod.CallExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("callExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CallExpression_]
inline def callExpression(
  callee: typings.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_,
  _arguments: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_ | typings.babelTypes.indexTs37Mod.JSXNamespacedName_ | typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_
]
): typings.babelTypes.indexTs37Mod.CallExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("callExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CallExpression_]

inline def catchClause(param: scala.Null, body: typings.babelTypes.indexTs37Mod.BlockStatement_): typings.babelTypes.indexTs37Mod.CatchClause_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CatchClause_]
inline def catchClause(param: scala.Unit, body: typings.babelTypes.indexTs37Mod.BlockStatement_): typings.babelTypes.indexTs37Mod.CatchClause_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CatchClause_]
inline def catchClause(
  param: typings.babelTypes.indexTs37Mod.ArrayPattern_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.CatchClause_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CatchClause_]
inline def catchClause(
  param: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.CatchClause_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CatchClause_]
inline def catchClause(
  param: typings.babelTypes.indexTs37Mod.ObjectPattern_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.CatchClause_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.CatchClause_]

inline def classBody(
  body: js.Array[
  typings.babelTypes.indexTs37Mod.ClassMethod_ | typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ | typings.babelTypes.indexTs37Mod.ClassProperty_ | typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ | typings.babelTypes.indexTs37Mod.TSDeclareMethod_ | typings.babelTypes.indexTs37Mod.TSIndexSignature_
]
): typings.babelTypes.indexTs37Mod.ClassBody_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classBody")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassBody_]

inline def classDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]
inline def classDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]
inline def classDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]
inline def classDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]
inline def classDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]
inline def classDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]

inline def classExpression(id: scala.Null, superClass: scala.Null, body: typings.babelTypes.indexTs37Mod.ClassBody_): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Null,
  superClass: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(id: scala.Null, superClass: scala.Unit, body: typings.babelTypes.indexTs37Mod.ClassBody_): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Null,
  superClass: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Null,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Null,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(id: scala.Unit, superClass: scala.Null, body: typings.babelTypes.indexTs37Mod.ClassBody_): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Unit,
  superClass: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(id: scala.Unit, superClass: scala.Unit, body: typings.babelTypes.indexTs37Mod.ClassBody_): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Unit,
  superClass: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Unit,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: scala.Unit,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]
inline def classExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  superClass: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.ClassBody_,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_]
): typings.babelTypes.indexTs37Mod.ClassExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]

inline def classImplements(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.ClassImplements_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classImplements")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassImplements_]
inline def classImplements(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.ClassImplements_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classImplements")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassImplements_]

inline def classMethod(
  kind: js.UndefOr[
  typings.babelTypes.babelTypesStrings.get | typings.babelTypes.babelTypesStrings.set | typings.babelTypes.babelTypesStrings.method | typings.babelTypes.babelTypesStrings.constructor
],
  key: typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.StringLiteral_ | typings.babelTypes.indexTs37Mod.NumericLiteral_ | typings.babelTypes.indexTs37Mod.Expression,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  computed: js.UndefOr[scala.Boolean],
  _static: js.UndefOr[scala.Boolean],
  generator: js.UndefOr[scala.Boolean],
  async: js.UndefOr[scala.Boolean]
): typings.babelTypes.indexTs37Mod.ClassMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], _static.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassMethod_]

inline def classPrivateMethod(
  kind: scala.Unit,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]
inline def classPrivateMethod(
  kind: scala.Unit,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  _static: scala.Boolean
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]

inline def classPrivateMethod_constructor(
  kind: typings.babelTypes.babelTypesStrings.constructor,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]
inline def classPrivateMethod_constructor(
  kind: typings.babelTypes.babelTypesStrings.constructor,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  _static: scala.Boolean
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]

inline def classPrivateMethod_get(
  kind: typings.babelTypes.babelTypesStrings.get,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]
inline def classPrivateMethod_get(
  kind: typings.babelTypes.babelTypesStrings.get,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  _static: scala.Boolean
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]

inline def classPrivateMethod_method(
  kind: typings.babelTypes.babelTypesStrings.method,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]
inline def classPrivateMethod_method(
  kind: typings.babelTypes.babelTypesStrings.method,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  _static: scala.Boolean
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]

inline def classPrivateMethod_set(
  kind: typings.babelTypes.babelTypesStrings.set,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]
inline def classPrivateMethod_set(
  kind: typings.babelTypes.babelTypesStrings.set,
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  _static: scala.Boolean
): typings.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateMethod_]

inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: scala.Null,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_],
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: scala.Null,
  decorators: scala.Null,
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: scala.Null,
  decorators: scala.Unit,
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: scala.Unit,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_],
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: scala.Unit,
  decorators: scala.Null,
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: scala.Unit,
  decorators: scala.Unit,
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: typings.babelTypes.indexTs37Mod.Expression,
  decorators: js.Array[typings.babelTypes.indexTs37Mod.Decorator_],
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: typings.babelTypes.indexTs37Mod.Expression,
  decorators: scala.Null,
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]
inline def classPrivateProperty(
  key: typings.babelTypes.indexTs37Mod.PrivateName_,
  value: typings.babelTypes.indexTs37Mod.Expression,
  decorators: scala.Unit,
  _static: js.Any
): typings.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassPrivateProperty_]

inline def classProperty(
  key: typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.StringLiteral_ | typings.babelTypes.indexTs37Mod.NumericLiteral_ | typings.babelTypes.indexTs37Mod.Expression,
  value: js.UndefOr[typings.babelTypes.indexTs37Mod.Expression | scala.Null],
  typeAnnotation: js.UndefOr[
  typings.babelTypes.indexTs37Mod.TypeAnnotation_ | typings.babelTypes.indexTs37Mod.TSTypeAnnotation_ | typings.babelTypes.indexTs37Mod.Noop_ | scala.Null
],
  decorators: js.UndefOr[js.Array[typings.babelTypes.indexTs37Mod.Decorator_] | scala.Null],
  computed: js.UndefOr[scala.Boolean],
  _static: js.UndefOr[scala.Boolean]
): typings.babelTypes.indexTs37Mod.ClassProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassProperty_]

inline def cloneDeep[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneDeep")(n.asInstanceOf[js.Any]).asInstanceOf[T]

inline def cloneDeepWithoutLoc[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneDeepWithoutLoc")(n.asInstanceOf[js.Any]).asInstanceOf[T]

inline def cloneNode[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any]).asInstanceOf[T]
inline def cloneNode[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T, deep: scala.Boolean): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any], deep.asInstanceOf[js.Any])).asInstanceOf[T]
inline def cloneNode[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T, deep: scala.Boolean, withoutLoc: scala.Boolean): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any], deep.asInstanceOf[js.Any], withoutLoc.asInstanceOf[js.Any])).asInstanceOf[T]
inline def cloneNode[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T, deep: scala.Unit, withoutLoc: scala.Boolean): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any], deep.asInstanceOf[js.Any], withoutLoc.asInstanceOf[js.Any])).asInstanceOf[T]

inline def cloneWithoutLoc[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneWithoutLoc")(n.asInstanceOf[js.Any]).asInstanceOf[T]

inline def clone_[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("clone")(n.asInstanceOf[js.Any]).asInstanceOf[T]

inline def conditionalExpression(
  test: typings.babelTypes.indexTs37Mod.Expression,
  consequent: typings.babelTypes.indexTs37Mod.Expression,
  alternate: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.ConditionalExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("conditionalExpression")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any], alternate.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ConditionalExpression_]

inline def continueStatement(): typings.babelTypes.indexTs37Mod.ContinueStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("continueStatement")().asInstanceOf[typings.babelTypes.indexTs37Mod.ContinueStatement_]
inline def continueStatement(label: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.ContinueStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("continueStatement")(label.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ContinueStatement_]

inline def createFlowUnionType(types: js.Array[typings.babelTypes.indexTs37Mod.FlowType]): typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createFlowUnionType")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_]

inline def createFlowUnionType_T_FlowType_T[T /* <: typings.babelTypes.indexTs37Mod.FlowType */](types: js.Array[T]): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createFlowUnionType")(types.asInstanceOf[js.Any]).asInstanceOf[T]

inline def createTypeAnnotationBasedOnTypeof_boolean(`type`: typings.babelTypes.babelTypesStrings.boolean): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createTypeAnnotationBasedOnTypeof_function(`type`: typings.babelTypes.babelTypesStrings.function): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createTypeAnnotationBasedOnTypeof_number(`type`: typings.babelTypes.babelTypesStrings.number): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createTypeAnnotationBasedOnTypeof_object(`type`: typings.babelTypes.babelTypesStrings.`object`): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createTypeAnnotationBasedOnTypeof_string(`type`: typings.babelTypes.babelTypesStrings.string): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createTypeAnnotationBasedOnTypeof_symbol(`type`: typings.babelTypes.babelTypesStrings.symbol): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createTypeAnnotationBasedOnTypeof_undefined(`type`: typings.babelTypes.babelTypesStrings.undefined): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def createUnionTypeAnnotation(types: js.Array[typings.babelTypes.indexTs37Mod.FlowType]): typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createUnionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_]

inline def createUnionTypeAnnotation_T_FlowType_T[T /* <: typings.babelTypes.indexTs37Mod.FlowType */](types: js.Array[T]): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createUnionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[T]

inline def debuggerStatement(): typings.babelTypes.indexTs37Mod.DebuggerStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("debuggerStatement")().asInstanceOf[typings.babelTypes.indexTs37Mod.DebuggerStatement_]

inline def decimalLiteral(value: java.lang.String): typings.babelTypes.indexTs37Mod.DecimalLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("decimalLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DecimalLiteral_]

inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]
inline def declareClass(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareClass_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareClass_]

inline def declareExportAllDeclaration(source: typings.babelTypes.indexTs37Mod.StringLiteral_): typings.babelTypes.indexTs37Mod.DeclareExportAllDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportAllDeclaration")(source.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportAllDeclaration_]

inline def declareExportDeclaration(): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")().asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Null,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typings.babelTypes.indexTs37Mod.ExportSpecifier_
]
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Null,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Null,
  specifiers: scala.Null,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Null,
  specifiers: scala.Unit,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Unit,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typings.babelTypes.indexTs37Mod.ExportSpecifier_
]
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Unit,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Unit,
  specifiers: scala.Null,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: scala.Unit,
  specifiers: scala.Unit,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(declaration: typings.babelTypes.indexTs37Mod.Flow): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Flow,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typings.babelTypes.indexTs37Mod.ExportSpecifier_
]
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Flow,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Flow,
  specifiers: scala.Null,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
inline def declareExportDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Flow,
  specifiers: scala.Unit,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_]

inline def declareFunction(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.DeclareFunction_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareFunction")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareFunction_]

inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]
inline def declareInterface(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.DeclareInterface_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareInterface_]

inline def declareModule(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.DeclareModule_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModule_]
inline def declareModule(
  id: typings.babelTypes.indexTs37Mod.StringLiteral_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.DeclareModule_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModule_]

inline def declareModuleExports(typeAnnotation: typings.babelTypes.indexTs37Mod.TypeAnnotation_): typings.babelTypes.indexTs37Mod.DeclareModuleExports_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModuleExports")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModuleExports_]

inline def declareModule_CommonJS(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  kind: typings.babelTypes.babelTypesStrings.CommonJS
): typings.babelTypes.indexTs37Mod.DeclareModule_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModule_]
inline def declareModule_CommonJS(
  id: typings.babelTypes.indexTs37Mod.StringLiteral_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  kind: typings.babelTypes.babelTypesStrings.CommonJS
): typings.babelTypes.indexTs37Mod.DeclareModule_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModule_]

inline def declareModule_ES(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  kind: typings.babelTypes.babelTypesStrings.ES
): typings.babelTypes.indexTs37Mod.DeclareModule_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModule_]
inline def declareModule_ES(
  id: typings.babelTypes.indexTs37Mod.StringLiteral_,
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  kind: typings.babelTypes.babelTypesStrings.ES
): typings.babelTypes.indexTs37Mod.DeclareModule_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareModule_]

inline def declareOpaqueType(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.DeclareOpaqueType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareOpaqueType_]
inline def declareOpaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  supertype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareOpaqueType_]
inline def declareOpaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  supertype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareOpaqueType_]
inline def declareOpaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_
): typings.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareOpaqueType_]
inline def declareOpaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  supertype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareOpaqueType_]

inline def declareTypeAlias(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  right: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.DeclareTypeAlias_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareTypeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareTypeAlias_]
inline def declareTypeAlias(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  right: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.DeclareTypeAlias_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareTypeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareTypeAlias_]
inline def declareTypeAlias(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  right: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.DeclareTypeAlias_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareTypeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareTypeAlias_]

inline def declareVariable(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.DeclareVariable_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareVariable")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclareVariable_]

inline def declaredPredicate(value: typings.babelTypes.indexTs37Mod.Flow): typings.babelTypes.indexTs37Mod.DeclaredPredicate_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declaredPredicate")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DeclaredPredicate_]

inline def decorator(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.Decorator_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("decorator")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Decorator_]

inline def directive(value: typings.babelTypes.indexTs37Mod.DirectiveLiteral_): typings.babelTypes.indexTs37Mod.Directive_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("directive")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Directive_]

inline def directiveLiteral(value: java.lang.String): typings.babelTypes.indexTs37Mod.DirectiveLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("directiveLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DirectiveLiteral_]

inline def doExpression(body: typings.babelTypes.indexTs37Mod.BlockStatement_): typings.babelTypes.indexTs37Mod.DoExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("doExpression")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.DoExpression_]

inline def doWhileStatement(test: typings.babelTypes.indexTs37Mod.Expression, body: typings.babelTypes.indexTs37Mod.Statement): typings.babelTypes.indexTs37Mod.DoWhileStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("doWhileStatement")(test.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.DoWhileStatement_]

inline def emptyStatement(): typings.babelTypes.indexTs37Mod.EmptyStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("emptyStatement")().asInstanceOf[typings.babelTypes.indexTs37Mod.EmptyStatement_]

inline def emptyTypeAnnotation(): typings.babelTypes.indexTs37Mod.EmptyTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("emptyTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.EmptyTypeAnnotation_]

inline def ensureBlock(node: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Body]): typings.babelTypes.indexTs37Mod.BlockStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ensureBlock")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]
inline def ensureBlock[K /* <: /* keyof std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Body> */ java.lang.String */](
  node: typings.std.Extract[
  typings.babelTypes.indexTs37Mod.Node, 
  typings.std.Record[
    K, 
    typings.babelTypes.indexTs37Mod.BlockStatement_ | typings.babelTypes.indexTs37Mod.Statement | typings.babelTypes.indexTs37Mod.Expression
  ]
],
  key: K
): typings.babelTypes.indexTs37Mod.BlockStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ensureBlock")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]

inline def enumBooleanBody(members: js.Array[typings.babelTypes.indexTs37Mod.EnumBooleanMember_]): typings.babelTypes.indexTs37Mod.EnumBooleanBody_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumBooleanBody")(members.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumBooleanBody_]

inline def enumBooleanMember(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.EnumBooleanMember_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumBooleanMember")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumBooleanMember_]

inline def enumDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.EnumBooleanBody_
): typings.babelTypes.indexTs37Mod.EnumDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumDeclaration_]
inline def enumDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.EnumNumberBody_
): typings.babelTypes.indexTs37Mod.EnumDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumDeclaration_]
inline def enumDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.EnumStringBody_
): typings.babelTypes.indexTs37Mod.EnumDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumDeclaration_]
inline def enumDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.EnumSymbolBody_
): typings.babelTypes.indexTs37Mod.EnumDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumDeclaration_]

inline def enumDefaultedMember(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.EnumDefaultedMember_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDefaultedMember")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumDefaultedMember_]

inline def enumNumberBody(members: js.Array[typings.babelTypes.indexTs37Mod.EnumNumberMember_]): typings.babelTypes.indexTs37Mod.EnumNumberBody_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumNumberBody")(members.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumNumberBody_]

inline def enumNumberMember(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  init: typings.babelTypes.indexTs37Mod.NumericLiteral_
): typings.babelTypes.indexTs37Mod.EnumNumberMember_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumNumberMember")(id.asInstanceOf[js.Any], init.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumNumberMember_]

inline def enumStringBody(
  members: js.Array[
  typings.babelTypes.indexTs37Mod.EnumStringMember_ | typings.babelTypes.indexTs37Mod.EnumDefaultedMember_
]
): typings.babelTypes.indexTs37Mod.EnumStringBody_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumStringBody")(members.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumStringBody_]

inline def enumStringMember(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  init: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.EnumStringMember_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumStringMember")(id.asInstanceOf[js.Any], init.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumStringMember_]

inline def enumSymbolBody(members: js.Array[typings.babelTypes.indexTs37Mod.EnumDefaultedMember_]): typings.babelTypes.indexTs37Mod.EnumSymbolBody_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumSymbolBody")(members.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.EnumSymbolBody_]

inline def existsTypeAnnotation(): typings.babelTypes.indexTs37Mod.ExistsTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("existsTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.ExistsTypeAnnotation_]

inline def exportAllDeclaration(source: typings.babelTypes.indexTs37Mod.StringLiteral_): typings.babelTypes.indexTs37Mod.ExportAllDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportAllDeclaration")(source.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportAllDeclaration_]

inline def exportDefaultDeclaration(declaration: typings.babelTypes.indexTs37Mod.ClassDeclaration_): typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
inline def exportDefaultDeclaration(declaration: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
inline def exportDefaultDeclaration(declaration: typings.babelTypes.indexTs37Mod.FunctionDeclaration_): typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
inline def exportDefaultDeclaration(declaration: typings.babelTypes.indexTs37Mod.TSDeclareFunction_): typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]

inline def exportDefaultSpecifier(exported: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultSpecifier")(exported.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_]

inline def exportNamedDeclaration(): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")().asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: scala.Null,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typings.babelTypes.indexTs37Mod.ExportSpecifier_
]
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: scala.Null,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportSpecifier_ | typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: scala.Null,
  specifiers: scala.Unit,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: scala.Unit,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typings.babelTypes.indexTs37Mod.ExportSpecifier_
]
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: scala.Unit,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportSpecifier_ | typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: scala.Unit,
  specifiers: scala.Unit,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(declaration: typings.babelTypes.indexTs37Mod.Declaration): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Declaration,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typings.babelTypes.indexTs37Mod.ExportSpecifier_
]
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Declaration,
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ExportSpecifier_ | typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
inline def exportNamedDeclaration(
  declaration: typings.babelTypes.indexTs37Mod.Declaration,
  specifiers: scala.Unit,
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_]

inline def exportNamespaceSpecifier(exported: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamespaceSpecifier")(exported.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_]

inline def exportSpecifier(
  local: typings.babelTypes.indexTs37Mod.Identifier_,
  exported: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.ExportSpecifier_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportSpecifier")(local.asInstanceOf[js.Any], exported.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportSpecifier_]
inline def exportSpecifier(
  local: typings.babelTypes.indexTs37Mod.Identifier_,
  exported: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ExportSpecifier_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportSpecifier")(local.asInstanceOf[js.Any], exported.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExportSpecifier_]

inline def expressionStatement(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.ExpressionStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("expressionStatement")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExpressionStatement_]

inline def file(program: typings.babelTypes.indexTs37Mod.Program_): typings.babelTypes.indexTs37Mod.File_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.File_]
inline def file(
  program: typings.babelTypes.indexTs37Mod.Program_,
  comments: js.Array[
  typings.babelTypes.indexTs37Mod.CommentBlock | typings.babelTypes.indexTs37Mod.CommentLine
]
): typings.babelTypes.indexTs37Mod.File_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.File_]
inline def file(
  program: typings.babelTypes.indexTs37Mod.Program_,
  comments: js.Array[
  typings.babelTypes.indexTs37Mod.CommentBlock | typings.babelTypes.indexTs37Mod.CommentLine
],
  tokens: js.Array[js.Any]
): typings.babelTypes.indexTs37Mod.File_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any], tokens.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.File_]
inline def file(program: typings.babelTypes.indexTs37Mod.Program_, comments: scala.Null, tokens: js.Array[js.Any]): typings.babelTypes.indexTs37Mod.File_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any], tokens.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.File_]
inline def file(program: typings.babelTypes.indexTs37Mod.Program_, comments: scala.Unit, tokens: js.Array[js.Any]): typings.babelTypes.indexTs37Mod.File_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any], tokens.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.File_]

inline def forInStatement(
  left: typings.babelTypes.indexTs37Mod.LVal,
  right: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForInStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forInStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForInStatement_]
inline def forInStatement(
  left: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  right: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForInStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forInStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForInStatement_]

inline def forOfStatement(
  left: typings.babelTypes.indexTs37Mod.LVal,
  right: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForOfStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForOfStatement_]
inline def forOfStatement(
  left: typings.babelTypes.indexTs37Mod.LVal,
  right: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement,
  _await: scala.Boolean
): typings.babelTypes.indexTs37Mod.ForOfStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _await.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForOfStatement_]
inline def forOfStatement(
  left: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  right: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForOfStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForOfStatement_]
inline def forOfStatement(
  left: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  right: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement,
  _await: scala.Boolean
): typings.babelTypes.indexTs37Mod.ForOfStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _await.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForOfStatement_]

inline def forStatement(
  init: scala.Null,
  test: scala.Null,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: scala.Null,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: scala.Null,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: scala.Unit,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: scala.Unit,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: scala.Unit,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Null,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: scala.Null,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: scala.Null,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: scala.Null,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: scala.Unit,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: scala.Unit,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: scala.Unit,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: scala.Unit,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: scala.Null,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: scala.Null,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: scala.Null,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: scala.Unit,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: scala.Unit,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: scala.Unit,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.Expression,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: scala.Null,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: scala.Null,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: scala.Null,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: scala.Unit,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: scala.Unit,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: scala.Unit,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Null,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]
inline def forStatement(
  init: typings.babelTypes.indexTs37Mod.VariableDeclaration_,
  test: typings.babelTypes.indexTs37Mod.Expression,
  update: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.ForStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ForStatement_]

inline def functionDeclaration(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Unit,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Unit,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def functionDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Unit,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]

inline def functionExpression(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Unit,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Unit,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Boolean,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]
inline def functionExpression(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  generator: scala.Unit,
  async: scala.Boolean
): typings.babelTypes.indexTs37Mod.FunctionExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]

inline def functionTypeAnnotation(
  typeParameters: scala.Null,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: scala.Null,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: scala.Null,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: scala.Unit,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: scala.Null,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: typings.babelTypes.indexTs37Mod.FunctionTypeParam_,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: scala.Unit,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: scala.Null,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: scala.Unit,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: scala.Unit,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: scala.Unit,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: typings.babelTypes.indexTs37Mod.FunctionTypeParam_,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: scala.Null,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: scala.Unit,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
inline def functionTypeAnnotation(
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  params: js.Array[typings.babelTypes.indexTs37Mod.FunctionTypeParam_],
  rest: typings.babelTypes.indexTs37Mod.FunctionTypeParam_,
  returnType: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]

inline def functionTypeParam(name: scala.Null, typeAnnotation: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.FunctionTypeParam_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeParam")(name.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeParam_]
inline def functionTypeParam(name: scala.Unit, typeAnnotation: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.FunctionTypeParam_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeParam")(name.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeParam_]
inline def functionTypeParam(
  name: typings.babelTypes.indexTs37Mod.Identifier_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.FunctionTypeParam_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeParam")(name.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionTypeParam_]

inline def genericTypeAnnotation(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
inline def genericTypeAnnotation(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
inline def genericTypeAnnotation(id: typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_): typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
inline def genericTypeAnnotation(
  id: typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_]

inline def getBindingIdentifiers(node: typings.babelTypes.indexTs37Mod.Node): typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_] = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any]).asInstanceOf[typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_]]
inline def getBindingIdentifiers(node: typings.babelTypes.indexTs37Mod.Node, duplicates: scala.Boolean): typings.std.Record[
java.lang.String, 
typings.babelTypes.indexTs37Mod.Identifier_ | js.Array[typings.babelTypes.indexTs37Mod.Identifier_]] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[
java.lang.String, 
typings.babelTypes.indexTs37Mod.Identifier_ | js.Array[typings.babelTypes.indexTs37Mod.Identifier_]]]
inline def getBindingIdentifiers(node: typings.babelTypes.indexTs37Mod.Node, duplicates: scala.Boolean, outerOnly: scala.Boolean): typings.std.Record[
java.lang.String, 
typings.babelTypes.indexTs37Mod.Identifier_ | js.Array[typings.babelTypes.indexTs37Mod.Identifier_]] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[
java.lang.String, 
typings.babelTypes.indexTs37Mod.Identifier_ | js.Array[typings.babelTypes.indexTs37Mod.Identifier_]]]
inline def getBindingIdentifiers(node: typings.babelTypes.indexTs37Mod.Node, duplicates: scala.Unit, outerOnly: scala.Boolean): typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_]]

inline def getBindingIdentifiers_false(
  node: typings.babelTypes.indexTs37Mod.Node,
  duplicates: typings.babelTypes.babelTypesBooleans.`false`
): typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_]]
inline def getBindingIdentifiers_false(
  node: typings.babelTypes.indexTs37Mod.Node,
  duplicates: typings.babelTypes.babelTypesBooleans.`false`,
  outerOnly: scala.Boolean
): typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_]]

inline def getBindingIdentifiers_true(
  node: typings.babelTypes.indexTs37Mod.Node,
  duplicates: typings.babelTypes.babelTypesBooleans.`true`
): typings.std.Record[java.lang.String, js.Array[typings.babelTypes.indexTs37Mod.Identifier_]] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, js.Array[typings.babelTypes.indexTs37Mod.Identifier_]]]
inline def getBindingIdentifiers_true(
  node: typings.babelTypes.indexTs37Mod.Node,
  duplicates: typings.babelTypes.babelTypesBooleans.`true`,
  outerOnly: scala.Boolean
): typings.std.Record[java.lang.String, js.Array[typings.babelTypes.indexTs37Mod.Identifier_]] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, js.Array[typings.babelTypes.indexTs37Mod.Identifier_]]]

inline def getOuterBindingIdentifiers(node: typings.babelTypes.indexTs37Mod.Node): typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_] = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any]).asInstanceOf[typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_]]
inline def getOuterBindingIdentifiers(node: typings.babelTypes.indexTs37Mod.Node, duplicates: scala.Boolean): typings.std.Record[
java.lang.String, 
typings.babelTypes.indexTs37Mod.Identifier_ | js.Array[typings.babelTypes.indexTs37Mod.Identifier_]] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[
java.lang.String, 
typings.babelTypes.indexTs37Mod.Identifier_ | js.Array[typings.babelTypes.indexTs37Mod.Identifier_]]]

inline def getOuterBindingIdentifiers_false(
  node: typings.babelTypes.indexTs37Mod.Node,
  duplicates: typings.babelTypes.babelTypesBooleans.`false`
): typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, typings.babelTypes.indexTs37Mod.Identifier_]]

inline def getOuterBindingIdentifiers_true(
  node: typings.babelTypes.indexTs37Mod.Node,
  duplicates: typings.babelTypes.babelTypesBooleans.`true`
): typings.std.Record[java.lang.String, js.Array[typings.babelTypes.indexTs37Mod.Identifier_]] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typings.std.Record[java.lang.String, js.Array[typings.babelTypes.indexTs37Mod.Identifier_]]]

inline def identifier(name: java.lang.String): typings.babelTypes.indexTs37Mod.Identifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("identifier")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Identifier_]

inline def ifStatement(
  test: typings.babelTypes.indexTs37Mod.Expression,
  consequent: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.IfStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ifStatement")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.IfStatement_]
inline def ifStatement(
  test: typings.babelTypes.indexTs37Mod.Expression,
  consequent: typings.babelTypes.indexTs37Mod.Statement,
  alternate: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.IfStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ifStatement")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any], alternate.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.IfStatement_]

inline def `import`(): typings.babelTypes.indexTs37Mod.Import_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("import")().asInstanceOf[typings.babelTypes.indexTs37Mod.Import_]

inline def importAttribute(
  key: typings.babelTypes.indexTs37Mod.Identifier_,
  value: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ImportAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importAttribute")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportAttribute_]
inline def importAttribute(
  key: typings.babelTypes.indexTs37Mod.StringLiteral_,
  value: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ImportAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importAttribute")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportAttribute_]

inline def importDeclaration(
  specifiers: js.Array[
  typings.babelTypes.indexTs37Mod.ImportSpecifier_ | typings.babelTypes.indexTs37Mod.ImportDefaultSpecifier_ | typings.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_
],
  source: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ImportDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importDeclaration")(specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportDeclaration_]

inline def importDefaultSpecifier(local: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.ImportDefaultSpecifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importDefaultSpecifier")(local.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportDefaultSpecifier_]

inline def importNamespaceSpecifier(local: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importNamespaceSpecifier")(local.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_]

inline def importSpecifier(
  local: typings.babelTypes.indexTs37Mod.Identifier_,
  imported: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.ImportSpecifier_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importSpecifier")(local.asInstanceOf[js.Any], imported.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportSpecifier_]
inline def importSpecifier(
  local: typings.babelTypes.indexTs37Mod.Identifier_,
  imported: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.ImportSpecifier_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importSpecifier")(local.asInstanceOf[js.Any], imported.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ImportSpecifier_]

inline def inferredPredicate(): typings.babelTypes.indexTs37Mod.InferredPredicate_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inferredPredicate")().asInstanceOf[typings.babelTypes.indexTs37Mod.InferredPredicate_]

inline def inheritInnerComments(node: typings.babelTypes.indexTs37Mod.Node, parent: typings.babelTypes.indexTs37Mod.Node): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritInnerComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def inheritLeadingComments(node: typings.babelTypes.indexTs37Mod.Node, parent: typings.babelTypes.indexTs37Mod.Node): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritLeadingComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def inheritTrailingComments(node: typings.babelTypes.indexTs37Mod.Node, parent: typings.babelTypes.indexTs37Mod.Node): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritTrailingComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def inherits[T /* <: js.UndefOr[typings.babelTypes.indexTs37Mod.Node | scala.Null] */](child: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inherits")(child.asInstanceOf[js.Any]).asInstanceOf[T]
inline def inherits[T /* <: js.UndefOr[typings.babelTypes.indexTs37Mod.Node | scala.Null] */](child: T, parent: typings.babelTypes.indexTs37Mod.Node): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inherits")(child.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[T]

inline def inheritsComments[T /* <: typings.babelTypes.indexTs37Mod.Node */](node: T, parent: typings.babelTypes.indexTs37Mod.Node): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritsComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]
inline def interfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceDeclaration_]

inline def interfaceExtends(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.InterfaceExtends_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceExtends_]
inline def interfaceExtends(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.InterfaceExtends_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceExtends_]
inline def interfaceExtends(id: typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_): typings.babelTypes.indexTs37Mod.InterfaceExtends_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceExtends_]
inline def interfaceExtends(
  id: typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.InterfaceExtends_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceExtends_]

inline def interfaceTypeAnnotation(
  _extends: js.Array[typings.babelTypes.indexTs37Mod.InterfaceExtends_],
  body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
): typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceTypeAnnotation")(_extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_]
inline def interfaceTypeAnnotation(_extends: scala.Null, body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_): typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceTypeAnnotation")(_extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_]
inline def interfaceTypeAnnotation(_extends: scala.Unit, body: typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_): typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceTypeAnnotation")(_extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_]

inline def interpreterDirective(value: java.lang.String): typings.babelTypes.indexTs37Mod.InterpreterDirective_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interpreterDirective")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.InterpreterDirective_]

inline def intersectionTypeAnnotation(types: js.Array[typings.babelTypes.indexTs37Mod.FlowType]): typings.babelTypes.indexTs37Mod.IntersectionTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("intersectionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.IntersectionTypeAnnotation_]

inline def is(`type`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
inline def is(
  `type`: java.lang.String,
  n: scala.Null,
  required: typings.std.Partial[typings.babelTypes.indexTs37Mod.Node]
): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
inline def is(
  `type`: java.lang.String,
  n: scala.Unit,
  required: typings.std.Partial[typings.babelTypes.indexTs37Mod.Node]
): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
inline def is(`type`: java.lang.String, n: typings.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
inline def is(
  `type`: java.lang.String,
  n: typings.babelTypes.indexTs37Mod.Node,
  required: typings.std.Partial[typings.babelTypes.indexTs37Mod.Node]
): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
inline def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */](`type`: T): /* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any]).asInstanceOf[/* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean]
inline def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */](`type`: T, n: typings.babelTypes.indexTs37Mod.Node): /* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any])).asInstanceOf[/* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean]
inline def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */, P /* <: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Type[T]] */](`type`: T, n: scala.Null, required: typings.std.Partial[P]): /* is P */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
inline def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */, P /* <: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Type[T]] */](`type`: T, n: scala.Unit, required: typings.std.Partial[P]): /* is P */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
inline def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */, P /* <: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Type[T]] */](`type`: T, n: typings.babelTypes.indexTs37Mod.Node, required: typings.std.Partial[P]): /* is P */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]

inline def isAnyTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
inline def isAnyTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
inline def isAnyTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
inline def isAnyTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
inline def isAnyTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]

inline def isArgumentPlaceholder(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
inline def isArgumentPlaceholder(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
inline def isArgumentPlaceholder(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
inline def isArgumentPlaceholder(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
inline def isArgumentPlaceholder(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]

inline def isArrayExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
inline def isArrayExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
inline def isArrayExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
inline def isArrayExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
inline def isArrayExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]

inline def isArrayPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
inline def isArrayPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
inline def isArrayPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
inline def isArrayPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
inline def isArrayPattern(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]

inline def isArrayTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
inline def isArrayTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
inline def isArrayTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
inline def isArrayTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
inline def isArrayTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]

inline def isArrowFunctionExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
inline def isArrowFunctionExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
inline def isArrowFunctionExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
inline def isArrowFunctionExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
inline def isArrowFunctionExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]

inline def isAssignmentExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
inline def isAssignmentExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
inline def isAssignmentExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
inline def isAssignmentExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
inline def isAssignmentExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]

inline def isAssignmentPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
inline def isAssignmentPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
inline def isAssignmentPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
inline def isAssignmentPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
inline def isAssignmentPattern(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]

inline def isAwaitExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
inline def isAwaitExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
inline def isAwaitExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
inline def isAwaitExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
inline def isAwaitExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]

inline def isBigIntLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
inline def isBigIntLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
inline def isBigIntLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
inline def isBigIntLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
inline def isBigIntLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]

inline def isBinary(): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
inline def isBinary(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
inline def isBinary(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
inline def isBinary(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
inline def isBinary(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]

inline def isBinaryExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
inline def isBinaryExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
inline def isBinaryExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
inline def isBinaryExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
inline def isBinaryExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]

inline def isBindExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
inline def isBindExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
inline def isBindExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
inline def isBindExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
inline def isBindExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]

inline def isBinding(node: typings.babelTypes.indexTs37Mod.Node, parent: typings.babelTypes.indexTs37Mod.Node): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinding")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
inline def isBinding(
  node: typings.babelTypes.indexTs37Mod.Node,
  parent: typings.babelTypes.indexTs37Mod.Node,
  grandparent: typings.babelTypes.indexTs37Mod.Node
): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinding")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any], grandparent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]

inline def isBlock(): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
inline def isBlock(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
inline def isBlock(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
inline def isBlock(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
inline def isBlock(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]

inline def isBlockParent(): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
inline def isBlockParent(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
inline def isBlockParent(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
inline def isBlockParent(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
inline def isBlockParent(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]

inline def isBlockScoped(node: typings.babelTypes.indexTs37Mod.Node): scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockScoped")(node.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]

inline def isBlockStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
inline def isBlockStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
inline def isBlockStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
inline def isBlockStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
inline def isBlockStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]

inline def isBooleanLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
inline def isBooleanLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
inline def isBooleanLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
inline def isBooleanLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
inline def isBooleanLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]

inline def isBooleanLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
inline def isBooleanLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
inline def isBooleanLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
inline def isBooleanLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
inline def isBooleanLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]

inline def isBooleanTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
inline def isBooleanTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
inline def isBooleanTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
inline def isBooleanTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
inline def isBooleanTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]

inline def isBreakStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
inline def isBreakStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
inline def isBreakStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
inline def isBreakStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
inline def isBreakStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]

inline def isCallExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
inline def isCallExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
inline def isCallExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
inline def isCallExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
inline def isCallExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]

inline def isCatchClause(): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
inline def isCatchClause(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
inline def isCatchClause(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
inline def isCatchClause(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
inline def isCatchClause(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]

inline def isClass(): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
inline def isClass(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
inline def isClass(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
inline def isClass(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
inline def isClass(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]

inline def isClassBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
inline def isClassBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
inline def isClassBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
inline def isClassBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
inline def isClassBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]

inline def isClassDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
inline def isClassDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
inline def isClassDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
inline def isClassDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
inline def isClassDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]

inline def isClassExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
inline def isClassExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
inline def isClassExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
inline def isClassExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
inline def isClassExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]

inline def isClassImplements(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
inline def isClassImplements(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
inline def isClassImplements(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
inline def isClassImplements(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
inline def isClassImplements(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]

inline def isClassMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
inline def isClassMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
inline def isClassMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
inline def isClassMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
inline def isClassMethod(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]

inline def isClassPrivateMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
inline def isClassPrivateMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
inline def isClassPrivateMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
inline def isClassPrivateMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
inline def isClassPrivateMethod(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]

inline def isClassPrivateProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
inline def isClassPrivateProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
inline def isClassPrivateProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
inline def isClassPrivateProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
inline def isClassPrivateProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]

inline def isClassProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
inline def isClassProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
inline def isClassProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
inline def isClassProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
inline def isClassProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]

inline def isCompletionStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
inline def isCompletionStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
inline def isCompletionStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
inline def isCompletionStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
inline def isCompletionStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]

inline def isConditional(): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
inline def isConditional(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
inline def isConditional(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
inline def isConditional(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
inline def isConditional(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]

inline def isConditionalExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
inline def isConditionalExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
inline def isConditionalExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
inline def isConditionalExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
inline def isConditionalExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]

inline def isContinueStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
inline def isContinueStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
inline def isContinueStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
inline def isContinueStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
inline def isContinueStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]

inline def isDebuggerStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
inline def isDebuggerStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
inline def isDebuggerStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
inline def isDebuggerStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
inline def isDebuggerStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]

inline def isDecimalLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
inline def isDecimalLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
inline def isDecimalLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
inline def isDecimalLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
inline def isDecimalLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]

inline def isDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
inline def isDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
inline def isDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
inline def isDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
inline def isDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]

inline def isDeclareClass(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
inline def isDeclareClass(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
inline def isDeclareClass(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
inline def isDeclareClass(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
inline def isDeclareClass(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]

inline def isDeclareExportAllDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
inline def isDeclareExportAllDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
inline def isDeclareExportAllDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
inline def isDeclareExportAllDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
inline def isDeclareExportAllDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]

inline def isDeclareExportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
inline def isDeclareExportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
inline def isDeclareExportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
inline def isDeclareExportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
inline def isDeclareExportDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]

inline def isDeclareFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
inline def isDeclareFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
inline def isDeclareFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
inline def isDeclareFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
inline def isDeclareFunction(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]

inline def isDeclareInterface(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
inline def isDeclareInterface(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
inline def isDeclareInterface(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
inline def isDeclareInterface(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
inline def isDeclareInterface(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]

inline def isDeclareModule(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
inline def isDeclareModule(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
inline def isDeclareModule(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
inline def isDeclareModule(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
inline def isDeclareModule(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]

inline def isDeclareModuleExports(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
inline def isDeclareModuleExports(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
inline def isDeclareModuleExports(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
inline def isDeclareModuleExports(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
inline def isDeclareModuleExports(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]

inline def isDeclareOpaqueType(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
inline def isDeclareOpaqueType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
inline def isDeclareOpaqueType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
inline def isDeclareOpaqueType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
inline def isDeclareOpaqueType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]

inline def isDeclareTypeAlias(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
inline def isDeclareTypeAlias(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
inline def isDeclareTypeAlias(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
inline def isDeclareTypeAlias(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
inline def isDeclareTypeAlias(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]

inline def isDeclareVariable(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
inline def isDeclareVariable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
inline def isDeclareVariable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
inline def isDeclareVariable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
inline def isDeclareVariable(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]

inline def isDeclaredPredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
inline def isDeclaredPredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
inline def isDeclaredPredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
inline def isDeclaredPredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
inline def isDeclaredPredicate(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]

inline def isDecorator(): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
inline def isDecorator(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
inline def isDecorator(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
inline def isDecorator(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
inline def isDecorator(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]

inline def isDirective(): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
inline def isDirective(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
inline def isDirective(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
inline def isDirective(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
inline def isDirective(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]

inline def isDirectiveLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
inline def isDirectiveLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
inline def isDirectiveLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
inline def isDirectiveLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
inline def isDirectiveLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]

inline def isDoExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
inline def isDoExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
inline def isDoExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
inline def isDoExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
inline def isDoExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]

inline def isDoWhileStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
inline def isDoWhileStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
inline def isDoWhileStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
inline def isDoWhileStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
inline def isDoWhileStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]

inline def isEmptyStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
inline def isEmptyStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
inline def isEmptyStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
inline def isEmptyStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
inline def isEmptyStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]

inline def isEmptyTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
inline def isEmptyTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
inline def isEmptyTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
inline def isEmptyTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
inline def isEmptyTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]

inline def isEnumBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
inline def isEnumBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
inline def isEnumBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
inline def isEnumBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
inline def isEnumBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]

inline def isEnumBooleanBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
inline def isEnumBooleanBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
inline def isEnumBooleanBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
inline def isEnumBooleanBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
inline def isEnumBooleanBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]

inline def isEnumBooleanMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
inline def isEnumBooleanMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
inline def isEnumBooleanMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
inline def isEnumBooleanMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
inline def isEnumBooleanMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]

inline def isEnumDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
inline def isEnumDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
inline def isEnumDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
inline def isEnumDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
inline def isEnumDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]

inline def isEnumDefaultedMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
inline def isEnumDefaultedMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
inline def isEnumDefaultedMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
inline def isEnumDefaultedMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
inline def isEnumDefaultedMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]

inline def isEnumMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
inline def isEnumMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
inline def isEnumMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
inline def isEnumMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
inline def isEnumMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]

inline def isEnumNumberBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
inline def isEnumNumberBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
inline def isEnumNumberBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
inline def isEnumNumberBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
inline def isEnumNumberBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]

inline def isEnumNumberMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
inline def isEnumNumberMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
inline def isEnumNumberMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
inline def isEnumNumberMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
inline def isEnumNumberMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]

inline def isEnumStringBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
inline def isEnumStringBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
inline def isEnumStringBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
inline def isEnumStringBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
inline def isEnumStringBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]

inline def isEnumStringMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
inline def isEnumStringMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
inline def isEnumStringMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
inline def isEnumStringMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
inline def isEnumStringMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]

inline def isEnumSymbolBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
inline def isEnumSymbolBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
inline def isEnumSymbolBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
inline def isEnumSymbolBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
inline def isEnumSymbolBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]

inline def isExistsTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
inline def isExistsTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
inline def isExistsTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
inline def isExistsTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
inline def isExistsTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]

inline def isExportAllDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
inline def isExportAllDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
inline def isExportAllDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
inline def isExportAllDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
inline def isExportAllDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]

inline def isExportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
inline def isExportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
inline def isExportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
inline def isExportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
inline def isExportDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]

inline def isExportDefaultDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
inline def isExportDefaultDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
inline def isExportDefaultDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
inline def isExportDefaultDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
inline def isExportDefaultDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]

inline def isExportDefaultSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
inline def isExportDefaultSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
inline def isExportDefaultSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
inline def isExportDefaultSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
inline def isExportDefaultSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]

inline def isExportNamedDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
inline def isExportNamedDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
inline def isExportNamedDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
inline def isExportNamedDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
inline def isExportNamedDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]

inline def isExportNamespaceSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
inline def isExportNamespaceSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
inline def isExportNamespaceSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
inline def isExportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
inline def isExportNamespaceSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]

inline def isExportSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
inline def isExportSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
inline def isExportSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
inline def isExportSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
inline def isExportSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]

inline def isExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
inline def isExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
inline def isExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
inline def isExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
inline def isExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]

inline def isExpressionStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
inline def isExpressionStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
inline def isExpressionStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
inline def isExpressionStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
inline def isExpressionStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]

inline def isExpressionWrapper(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
inline def isExpressionWrapper(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
inline def isExpressionWrapper(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
inline def isExpressionWrapper(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
inline def isExpressionWrapper(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]

inline def isFile(): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
inline def isFile(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
inline def isFile(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
inline def isFile(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
inline def isFile(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]

inline def isFlow(): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
inline def isFlow(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
inline def isFlow(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
inline def isFlow(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
inline def isFlow(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]

inline def isFlowBaseAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
inline def isFlowBaseAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
inline def isFlowBaseAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
inline def isFlowBaseAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
inline def isFlowBaseAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]

inline def isFlowDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
inline def isFlowDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
inline def isFlowDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
inline def isFlowDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
inline def isFlowDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]

inline def isFlowPredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
inline def isFlowPredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
inline def isFlowPredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
inline def isFlowPredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
inline def isFlowPredicate(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]

inline def isFlowType(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
inline def isFlowType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
inline def isFlowType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
inline def isFlowType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
inline def isFlowType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]

inline def isFor(): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
inline def isFor(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
inline def isFor(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
inline def isFor(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
inline def isFor(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]

inline def isForInStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
inline def isForInStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
inline def isForInStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
inline def isForInStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
inline def isForInStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]

inline def isForOfStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
inline def isForOfStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
inline def isForOfStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
inline def isForOfStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
inline def isForOfStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]

inline def isForStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
inline def isForStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
inline def isForStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
inline def isForStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
inline def isForStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]

inline def isForXStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
inline def isForXStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
inline def isForXStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
inline def isForXStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
inline def isForXStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]

inline def isFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
inline def isFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
inline def isFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
inline def isFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
inline def isFunction(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]

inline def isFunctionDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
inline def isFunctionDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
inline def isFunctionDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
inline def isFunctionDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
inline def isFunctionDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]

inline def isFunctionExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
inline def isFunctionExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
inline def isFunctionExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
inline def isFunctionExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
inline def isFunctionExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]

inline def isFunctionParent(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
inline def isFunctionParent(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
inline def isFunctionParent(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
inline def isFunctionParent(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
inline def isFunctionParent(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]

inline def isFunctionTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
inline def isFunctionTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
inline def isFunctionTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
inline def isFunctionTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
inline def isFunctionTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]

inline def isFunctionTypeParam(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
inline def isFunctionTypeParam(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
inline def isFunctionTypeParam(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
inline def isFunctionTypeParam(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
inline def isFunctionTypeParam(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]

inline def isGenericTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
inline def isGenericTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
inline def isGenericTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
inline def isGenericTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
inline def isGenericTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]

inline def isIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
inline def isIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
inline def isIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
inline def isIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
inline def isIdentifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]

inline def isIfStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
inline def isIfStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
inline def isIfStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
inline def isIfStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
inline def isIfStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]

inline def isImmutable(): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
inline def isImmutable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
inline def isImmutable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
inline def isImmutable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
inline def isImmutable(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
inline def isImmutable(node: typings.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]

inline def isImport(): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
inline def isImport(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
inline def isImport(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
inline def isImport(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
inline def isImport(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]

inline def isImportAttribute(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
inline def isImportAttribute(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
inline def isImportAttribute(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
inline def isImportAttribute(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
inline def isImportAttribute(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]

inline def isImportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
inline def isImportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
inline def isImportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
inline def isImportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
inline def isImportDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]

inline def isImportDefaultSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
inline def isImportDefaultSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
inline def isImportDefaultSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
inline def isImportDefaultSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
inline def isImportDefaultSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]

inline def isImportNamespaceSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
inline def isImportNamespaceSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
inline def isImportNamespaceSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
inline def isImportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
inline def isImportNamespaceSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]

inline def isImportSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
inline def isImportSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
inline def isImportSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
inline def isImportSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
inline def isImportSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]

inline def isInferredPredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
inline def isInferredPredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
inline def isInferredPredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
inline def isInferredPredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
inline def isInferredPredicate(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]

inline def isInterfaceDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
inline def isInterfaceDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
inline def isInterfaceDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
inline def isInterfaceDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
inline def isInterfaceDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]

inline def isInterfaceExtends(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
inline def isInterfaceExtends(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
inline def isInterfaceExtends(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
inline def isInterfaceExtends(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
inline def isInterfaceExtends(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]

inline def isInterfaceTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
inline def isInterfaceTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
inline def isInterfaceTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
inline def isInterfaceTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
inline def isInterfaceTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]

inline def isInterpreterDirective(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
inline def isInterpreterDirective(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
inline def isInterpreterDirective(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
inline def isInterpreterDirective(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
inline def isInterpreterDirective(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]

inline def isIntersectionTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
inline def isIntersectionTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
inline def isIntersectionTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
inline def isIntersectionTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
inline def isIntersectionTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]

inline def isJSX(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
inline def isJSX(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
inline def isJSX(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
inline def isJSX(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
inline def isJSX(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]

inline def isJSXAttribute(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
inline def isJSXAttribute(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
inline def isJSXAttribute(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
inline def isJSXAttribute(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
inline def isJSXAttribute(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]

inline def isJSXClosingElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
inline def isJSXClosingElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
inline def isJSXClosingElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
inline def isJSXClosingElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
inline def isJSXClosingElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]

inline def isJSXClosingFragment(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
inline def isJSXClosingFragment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
inline def isJSXClosingFragment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
inline def isJSXClosingFragment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
inline def isJSXClosingFragment(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]

inline def isJSXElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
inline def isJSXElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
inline def isJSXElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
inline def isJSXElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
inline def isJSXElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]

inline def isJSXEmptyExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
inline def isJSXEmptyExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
inline def isJSXEmptyExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
inline def isJSXEmptyExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
inline def isJSXEmptyExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]

inline def isJSXExpressionContainer(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
inline def isJSXExpressionContainer(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
inline def isJSXExpressionContainer(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
inline def isJSXExpressionContainer(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
inline def isJSXExpressionContainer(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]

inline def isJSXFragment(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
inline def isJSXFragment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
inline def isJSXFragment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
inline def isJSXFragment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
inline def isJSXFragment(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]

inline def isJSXIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
inline def isJSXIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
inline def isJSXIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
inline def isJSXIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
inline def isJSXIdentifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]

inline def isJSXMemberExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
inline def isJSXMemberExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
inline def isJSXMemberExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
inline def isJSXMemberExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
inline def isJSXMemberExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]

inline def isJSXNamespacedName(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
inline def isJSXNamespacedName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
inline def isJSXNamespacedName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
inline def isJSXNamespacedName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
inline def isJSXNamespacedName(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]

inline def isJSXOpeningElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
inline def isJSXOpeningElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
inline def isJSXOpeningElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
inline def isJSXOpeningElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
inline def isJSXOpeningElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]

inline def isJSXOpeningFragment(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
inline def isJSXOpeningFragment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
inline def isJSXOpeningFragment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
inline def isJSXOpeningFragment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
inline def isJSXOpeningFragment(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]

inline def isJSXSpreadAttribute(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
inline def isJSXSpreadAttribute(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
inline def isJSXSpreadAttribute(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
inline def isJSXSpreadAttribute(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
inline def isJSXSpreadAttribute(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]

inline def isJSXSpreadChild(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
inline def isJSXSpreadChild(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
inline def isJSXSpreadChild(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
inline def isJSXSpreadChild(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
inline def isJSXSpreadChild(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]

inline def isJSXText(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
inline def isJSXText(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
inline def isJSXText(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
inline def isJSXText(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
inline def isJSXText(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]

inline def isLVal(): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
inline def isLVal(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
inline def isLVal(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
inline def isLVal(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
inline def isLVal(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]

inline def isLabeledStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
inline def isLabeledStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
inline def isLabeledStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
inline def isLabeledStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
inline def isLabeledStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]

inline def isLet(node: typings.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLet")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]

inline def isLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
inline def isLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
inline def isLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
inline def isLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
inline def isLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]

inline def isLogicalExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
inline def isLogicalExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
inline def isLogicalExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
inline def isLogicalExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
inline def isLogicalExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]

inline def isLoop(): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
inline def isLoop(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
inline def isLoop(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
inline def isLoop(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
inline def isLoop(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]

inline def isMemberExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def isMemberExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def isMemberExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def isMemberExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def isMemberExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]

inline def isMetaProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
inline def isMetaProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
inline def isMetaProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
inline def isMetaProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
inline def isMetaProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]

inline def isMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
inline def isMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
inline def isMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
inline def isMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
inline def isMethod(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]

inline def isMixedTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
inline def isMixedTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
inline def isMixedTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
inline def isMixedTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
inline def isMixedTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]

inline def isModuleDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
inline def isModuleDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
inline def isModuleDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
inline def isModuleDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
inline def isModuleDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]

inline def isModuleSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
inline def isModuleSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
inline def isModuleSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
inline def isModuleSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
inline def isModuleSpecifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]

inline def isNewExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
inline def isNewExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
inline def isNewExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
inline def isNewExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
inline def isNewExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]

inline def isNode(): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNode")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
inline def isNode(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNode")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]

inline def isNodesEquivalent(a: js.Any, b: js.Any): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNodesEquivalent")(a.asInstanceOf[js.Any], b.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
inline def isNodesEquivalent[T /* <: typings.std.Partial[typings.babelTypes.indexTs37Mod.Node] */](a: T, b: js.Any): /* is T */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNodesEquivalent")(a.asInstanceOf[js.Any], b.asInstanceOf[js.Any])).asInstanceOf[/* is T */ scala.Boolean]

inline def isNoop(): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
inline def isNoop(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
inline def isNoop(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
inline def isNoop(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
inline def isNoop(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]

inline def isNullLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
inline def isNullLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
inline def isNullLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
inline def isNullLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
inline def isNullLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]

inline def isNullLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
inline def isNullLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
inline def isNullLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
inline def isNullLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
inline def isNullLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]

inline def isNullableTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
inline def isNullableTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
inline def isNullableTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
inline def isNullableTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
inline def isNullableTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]

inline def isNumberLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumberLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumberLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumberLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumberLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]

inline def isNumberLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
inline def isNumberLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
inline def isNumberLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
inline def isNumberLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
inline def isNumberLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]

inline def isNumberTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
inline def isNumberTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
inline def isNumberTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
inline def isNumberTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
inline def isNumberTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]

inline def isNumericLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumericLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumericLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumericLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
inline def isNumericLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]

inline def isObjectExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
inline def isObjectExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
inline def isObjectExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
inline def isObjectExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
inline def isObjectExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]

inline def isObjectMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
inline def isObjectMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
inline def isObjectMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
inline def isObjectMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
inline def isObjectMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]

inline def isObjectMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
inline def isObjectMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
inline def isObjectMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
inline def isObjectMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
inline def isObjectMethod(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]

inline def isObjectPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
inline def isObjectPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
inline def isObjectPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
inline def isObjectPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
inline def isObjectPattern(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]

inline def isObjectProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
inline def isObjectProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
inline def isObjectProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
inline def isObjectProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
inline def isObjectProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]

inline def isObjectTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
inline def isObjectTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
inline def isObjectTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
inline def isObjectTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
inline def isObjectTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]

inline def isObjectTypeCallProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
inline def isObjectTypeCallProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
inline def isObjectTypeCallProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
inline def isObjectTypeCallProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
inline def isObjectTypeCallProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]

inline def isObjectTypeIndexer(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
inline def isObjectTypeIndexer(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
inline def isObjectTypeIndexer(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
inline def isObjectTypeIndexer(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
inline def isObjectTypeIndexer(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]

inline def isObjectTypeInternalSlot(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
inline def isObjectTypeInternalSlot(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
inline def isObjectTypeInternalSlot(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
inline def isObjectTypeInternalSlot(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
inline def isObjectTypeInternalSlot(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]

inline def isObjectTypeProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
inline def isObjectTypeProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
inline def isObjectTypeProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
inline def isObjectTypeProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
inline def isObjectTypeProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]

inline def isObjectTypeSpreadProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
inline def isObjectTypeSpreadProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
inline def isObjectTypeSpreadProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
inline def isObjectTypeSpreadProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
inline def isObjectTypeSpreadProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]

inline def isOpaqueType(): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
inline def isOpaqueType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
inline def isOpaqueType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
inline def isOpaqueType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
inline def isOpaqueType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]

inline def isOptionalCallExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
inline def isOptionalCallExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
inline def isOptionalCallExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
inline def isOptionalCallExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
inline def isOptionalCallExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]

inline def isOptionalMemberExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
inline def isOptionalMemberExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
inline def isOptionalMemberExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
inline def isOptionalMemberExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
inline def isOptionalMemberExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]

inline def isParenthesizedExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
inline def isParenthesizedExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
inline def isParenthesizedExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
inline def isParenthesizedExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
inline def isParenthesizedExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]

inline def isPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
inline def isPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
inline def isPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
inline def isPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
inline def isPattern(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]

inline def isPatternLike(): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
inline def isPatternLike(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
inline def isPatternLike(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
inline def isPatternLike(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
inline def isPatternLike(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]

inline def isPipelineBareFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
inline def isPipelineBareFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
inline def isPipelineBareFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
inline def isPipelineBareFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
inline def isPipelineBareFunction(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]

inline def isPipelinePrimaryTopicReference(): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
inline def isPipelinePrimaryTopicReference(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
inline def isPipelinePrimaryTopicReference(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
inline def isPipelinePrimaryTopicReference(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
inline def isPipelinePrimaryTopicReference(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]

inline def isPipelineTopicExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
inline def isPipelineTopicExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
inline def isPipelineTopicExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
inline def isPipelineTopicExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
inline def isPipelineTopicExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]

inline def isPlaceholder(): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
inline def isPlaceholder(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
inline def isPlaceholder(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
inline def isPlaceholder(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
inline def isPlaceholder(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]

inline def isPlaceholderType(
  placeholderType: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any,
  targetType: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any
): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholderType")(placeholderType.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]

inline def isPrivate(): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
inline def isPrivate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
inline def isPrivate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
inline def isPrivate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
inline def isPrivate(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]

inline def isPrivateName(): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
inline def isPrivateName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
inline def isPrivateName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
inline def isPrivateName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
inline def isPrivateName(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]

inline def isProgram(): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
inline def isProgram(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
inline def isProgram(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
inline def isProgram(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
inline def isProgram(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]

inline def isProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
inline def isProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
inline def isProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
inline def isProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
inline def isProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]

inline def isPureish(): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
inline def isPureish(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
inline def isPureish(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
inline def isPureish(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
inline def isPureish(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]

inline def isQualifiedTypeIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
inline def isQualifiedTypeIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
inline def isQualifiedTypeIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
inline def isQualifiedTypeIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
inline def isQualifiedTypeIdentifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]

inline def isRecordExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
inline def isRecordExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
inline def isRecordExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
inline def isRecordExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
inline def isRecordExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]

inline def isReferenced(node: typings.babelTypes.indexTs37Mod.Node, parent: typings.babelTypes.indexTs37Mod.Node): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReferenced")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
inline def isReferenced(
  node: typings.babelTypes.indexTs37Mod.Node,
  parent: typings.babelTypes.indexTs37Mod.Node,
  grandparent: typings.babelTypes.indexTs37Mod.Node
): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReferenced")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any], grandparent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]

inline def isRegExpLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegExpLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegExpLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegExpLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegExpLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]

inline def isRegexLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegexLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegexLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegexLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
inline def isRegexLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]

inline def isRestElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]

inline def isRestProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
inline def isRestProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]

inline def isReturnStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
inline def isReturnStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
inline def isReturnStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
inline def isReturnStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
inline def isReturnStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]

inline def isScopable(): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
inline def isScopable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
inline def isScopable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
inline def isScopable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
inline def isScopable(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]

inline def isScope(node: typings.babelTypes.indexTs37Mod.Node, parent: typings.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScope")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]

inline def isSequenceExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
inline def isSequenceExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
inline def isSequenceExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
inline def isSequenceExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
inline def isSequenceExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]

inline def isSpecifierDefault(specifier: typings.babelTypes.indexTs37Mod.ModuleSpecifier): scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpecifierDefault")(specifier.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]

inline def isSpreadElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]

inline def isSpreadProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
inline def isSpreadProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]

inline def isStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
inline def isStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
inline def isStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
inline def isStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
inline def isStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]

inline def isStaticBlock(): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
inline def isStaticBlock(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
inline def isStaticBlock(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
inline def isStaticBlock(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
inline def isStaticBlock(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]

inline def isStringLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
inline def isStringLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
inline def isStringLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
inline def isStringLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
inline def isStringLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]

inline def isStringLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
inline def isStringLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
inline def isStringLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
inline def isStringLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
inline def isStringLiteralTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]

inline def isStringTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
inline def isStringTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
inline def isStringTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
inline def isStringTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
inline def isStringTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]

inline def isSuper(): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
inline def isSuper(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
inline def isSuper(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
inline def isSuper(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
inline def isSuper(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]

inline def isSwitchCase(): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
inline def isSwitchCase(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
inline def isSwitchCase(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
inline def isSwitchCase(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
inline def isSwitchCase(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]

inline def isSwitchStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
inline def isSwitchStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
inline def isSwitchStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
inline def isSwitchStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
inline def isSwitchStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]

inline def isSymbolTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
inline def isSymbolTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
inline def isSymbolTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
inline def isSymbolTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
inline def isSymbolTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]

inline def isTSAnyKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
inline def isTSAnyKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
inline def isTSAnyKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
inline def isTSAnyKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
inline def isTSAnyKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]

inline def isTSArrayType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
inline def isTSArrayType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
inline def isTSArrayType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
inline def isTSArrayType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
inline def isTSArrayType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]

inline def isTSAsExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
inline def isTSAsExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
inline def isTSAsExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
inline def isTSAsExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
inline def isTSAsExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]

inline def isTSBaseType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
inline def isTSBaseType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
inline def isTSBaseType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
inline def isTSBaseType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
inline def isTSBaseType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]

inline def isTSBigIntKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
inline def isTSBigIntKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
inline def isTSBigIntKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
inline def isTSBigIntKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
inline def isTSBigIntKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]

inline def isTSBooleanKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
inline def isTSBooleanKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
inline def isTSBooleanKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
inline def isTSBooleanKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
inline def isTSBooleanKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]

inline def isTSCallSignatureDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
inline def isTSCallSignatureDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
inline def isTSCallSignatureDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
inline def isTSCallSignatureDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
inline def isTSCallSignatureDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]

inline def isTSConditionalType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
inline def isTSConditionalType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
inline def isTSConditionalType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
inline def isTSConditionalType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
inline def isTSConditionalType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]

inline def isTSConstructSignatureDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
inline def isTSConstructSignatureDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
inline def isTSConstructSignatureDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
inline def isTSConstructSignatureDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
inline def isTSConstructSignatureDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]

inline def isTSConstructorType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
inline def isTSConstructorType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
inline def isTSConstructorType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
inline def isTSConstructorType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
inline def isTSConstructorType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]

inline def isTSDeclareFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
inline def isTSDeclareFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
inline def isTSDeclareFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
inline def isTSDeclareFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
inline def isTSDeclareFunction(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]

inline def isTSDeclareMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
inline def isTSDeclareMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
inline def isTSDeclareMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
inline def isTSDeclareMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
inline def isTSDeclareMethod(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]

inline def isTSEntityName(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
inline def isTSEntityName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
inline def isTSEntityName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
inline def isTSEntityName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
inline def isTSEntityName(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]

inline def isTSEnumDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
inline def isTSEnumDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
inline def isTSEnumDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
inline def isTSEnumDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
inline def isTSEnumDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]

inline def isTSEnumMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
inline def isTSEnumMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
inline def isTSEnumMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
inline def isTSEnumMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
inline def isTSEnumMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]

inline def isTSExportAssignment(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
inline def isTSExportAssignment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
inline def isTSExportAssignment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
inline def isTSExportAssignment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
inline def isTSExportAssignment(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]

inline def isTSExpressionWithTypeArguments(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
inline def isTSExpressionWithTypeArguments(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
inline def isTSExpressionWithTypeArguments(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
inline def isTSExpressionWithTypeArguments(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
inline def isTSExpressionWithTypeArguments(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]

inline def isTSExternalModuleReference(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
inline def isTSExternalModuleReference(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
inline def isTSExternalModuleReference(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
inline def isTSExternalModuleReference(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
inline def isTSExternalModuleReference(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]

inline def isTSFunctionType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
inline def isTSFunctionType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
inline def isTSFunctionType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
inline def isTSFunctionType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
inline def isTSFunctionType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]

inline def isTSImportEqualsDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
inline def isTSImportEqualsDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
inline def isTSImportEqualsDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
inline def isTSImportEqualsDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
inline def isTSImportEqualsDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]

inline def isTSImportType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
inline def isTSImportType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
inline def isTSImportType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
inline def isTSImportType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
inline def isTSImportType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]

inline def isTSIndexSignature(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
inline def isTSIndexSignature(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
inline def isTSIndexSignature(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
inline def isTSIndexSignature(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
inline def isTSIndexSignature(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]

inline def isTSIndexedAccessType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
inline def isTSIndexedAccessType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
inline def isTSIndexedAccessType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
inline def isTSIndexedAccessType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
inline def isTSIndexedAccessType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]

inline def isTSInferType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
inline def isTSInferType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
inline def isTSInferType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
inline def isTSInferType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
inline def isTSInferType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]

inline def isTSInterfaceBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
inline def isTSInterfaceBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
inline def isTSInterfaceBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
inline def isTSInterfaceBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
inline def isTSInterfaceBody(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]

inline def isTSInterfaceDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
inline def isTSInterfaceDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
inline def isTSInterfaceDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
inline def isTSInterfaceDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
inline def isTSInterfaceDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]

inline def isTSIntersectionType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
inline def isTSIntersectionType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
inline def isTSIntersectionType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
inline def isTSIntersectionType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
inline def isTSIntersectionType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]

inline def isTSIntrinsicKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
inline def isTSIntrinsicKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
inline def isTSIntrinsicKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
inline def isTSIntrinsicKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
inline def isTSIntrinsicKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]

inline def isTSLiteralType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
inline def isTSLiteralType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
inline def isTSLiteralType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
inline def isTSLiteralType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
inline def isTSLiteralType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]

inline def isTSMappedType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
inline def isTSMappedType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
inline def isTSMappedType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
inline def isTSMappedType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
inline def isTSMappedType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]

inline def isTSMethodSignature(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
inline def isTSMethodSignature(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
inline def isTSMethodSignature(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
inline def isTSMethodSignature(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
inline def isTSMethodSignature(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]

inline def isTSModuleBlock(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
inline def isTSModuleBlock(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
inline def isTSModuleBlock(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
inline def isTSModuleBlock(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
inline def isTSModuleBlock(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]

inline def isTSModuleDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
inline def isTSModuleDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
inline def isTSModuleDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
inline def isTSModuleDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
inline def isTSModuleDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]

inline def isTSNamedTupleMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
inline def isTSNamedTupleMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
inline def isTSNamedTupleMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
inline def isTSNamedTupleMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
inline def isTSNamedTupleMember(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]

inline def isTSNamespaceExportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
inline def isTSNamespaceExportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
inline def isTSNamespaceExportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
inline def isTSNamespaceExportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
inline def isTSNamespaceExportDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]

inline def isTSNeverKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
inline def isTSNeverKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
inline def isTSNeverKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
inline def isTSNeverKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
inline def isTSNeverKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]

inline def isTSNonNullExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
inline def isTSNonNullExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
inline def isTSNonNullExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
inline def isTSNonNullExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
inline def isTSNonNullExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]

inline def isTSNullKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
inline def isTSNullKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
inline def isTSNullKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
inline def isTSNullKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
inline def isTSNullKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]

inline def isTSNumberKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
inline def isTSNumberKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
inline def isTSNumberKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
inline def isTSNumberKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
inline def isTSNumberKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]

inline def isTSObjectKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
inline def isTSObjectKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
inline def isTSObjectKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
inline def isTSObjectKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
inline def isTSObjectKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]

inline def isTSOptionalType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
inline def isTSOptionalType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
inline def isTSOptionalType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
inline def isTSOptionalType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
inline def isTSOptionalType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]

inline def isTSParameterProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
inline def isTSParameterProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
inline def isTSParameterProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
inline def isTSParameterProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
inline def isTSParameterProperty(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]

inline def isTSParenthesizedType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
inline def isTSParenthesizedType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
inline def isTSParenthesizedType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
inline def isTSParenthesizedType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
inline def isTSParenthesizedType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]

inline def isTSPropertySignature(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
inline def isTSPropertySignature(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
inline def isTSPropertySignature(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
inline def isTSPropertySignature(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
inline def isTSPropertySignature(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]

inline def isTSQualifiedName(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
inline def isTSQualifiedName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
inline def isTSQualifiedName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
inline def isTSQualifiedName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
inline def isTSQualifiedName(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]

inline def isTSRestType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
inline def isTSRestType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
inline def isTSRestType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
inline def isTSRestType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
inline def isTSRestType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]

inline def isTSStringKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
inline def isTSStringKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
inline def isTSStringKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
inline def isTSStringKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
inline def isTSStringKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]

inline def isTSSymbolKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
inline def isTSSymbolKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
inline def isTSSymbolKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
inline def isTSSymbolKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
inline def isTSSymbolKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]

inline def isTSThisType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
inline def isTSThisType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
inline def isTSThisType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
inline def isTSThisType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
inline def isTSThisType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]

inline def isTSTupleType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
inline def isTSTupleType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
inline def isTSTupleType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
inline def isTSTupleType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
inline def isTSTupleType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]

inline def isTSType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
inline def isTSType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
inline def isTSType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
inline def isTSType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
inline def isTSType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]

inline def isTSTypeAliasDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
inline def isTSTypeAliasDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
inline def isTSTypeAliasDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
inline def isTSTypeAliasDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
inline def isTSTypeAliasDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]

inline def isTSTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
inline def isTSTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
inline def isTSTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
inline def isTSTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
inline def isTSTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]

inline def isTSTypeAssertion(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
inline def isTSTypeAssertion(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
inline def isTSTypeAssertion(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
inline def isTSTypeAssertion(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
inline def isTSTypeAssertion(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]

inline def isTSTypeElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
inline def isTSTypeElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
inline def isTSTypeElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
inline def isTSTypeElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
inline def isTSTypeElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]

inline def isTSTypeLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
inline def isTSTypeLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
inline def isTSTypeLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
inline def isTSTypeLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
inline def isTSTypeLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]

inline def isTSTypeOperator(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
inline def isTSTypeOperator(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
inline def isTSTypeOperator(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
inline def isTSTypeOperator(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
inline def isTSTypeOperator(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]

inline def isTSTypeParameter(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
inline def isTSTypeParameter(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
inline def isTSTypeParameter(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
inline def isTSTypeParameter(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
inline def isTSTypeParameter(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]

inline def isTSTypeParameterDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
inline def isTSTypeParameterDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
inline def isTSTypeParameterDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
inline def isTSTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
inline def isTSTypeParameterDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]

inline def isTSTypeParameterInstantiation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
inline def isTSTypeParameterInstantiation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
inline def isTSTypeParameterInstantiation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
inline def isTSTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
inline def isTSTypeParameterInstantiation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]

inline def isTSTypePredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
inline def isTSTypePredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
inline def isTSTypePredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
inline def isTSTypePredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
inline def isTSTypePredicate(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]

inline def isTSTypeQuery(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
inline def isTSTypeQuery(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
inline def isTSTypeQuery(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
inline def isTSTypeQuery(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
inline def isTSTypeQuery(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]

inline def isTSTypeReference(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
inline def isTSTypeReference(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
inline def isTSTypeReference(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
inline def isTSTypeReference(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
inline def isTSTypeReference(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]

inline def isTSUndefinedKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
inline def isTSUndefinedKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
inline def isTSUndefinedKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
inline def isTSUndefinedKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
inline def isTSUndefinedKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]

inline def isTSUnionType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
inline def isTSUnionType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
inline def isTSUnionType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
inline def isTSUnionType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
inline def isTSUnionType(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]

inline def isTSUnknownKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
inline def isTSUnknownKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
inline def isTSUnknownKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
inline def isTSUnknownKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
inline def isTSUnknownKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]

inline def isTSVoidKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
inline def isTSVoidKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
inline def isTSVoidKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
inline def isTSVoidKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
inline def isTSVoidKeyword(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]

inline def isTaggedTemplateExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
inline def isTaggedTemplateExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
inline def isTaggedTemplateExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
inline def isTaggedTemplateExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
inline def isTaggedTemplateExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]

inline def isTemplateElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
inline def isTemplateElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
inline def isTemplateElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
inline def isTemplateElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
inline def isTemplateElement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]

inline def isTemplateLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
inline def isTemplateLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
inline def isTemplateLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
inline def isTemplateLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
inline def isTemplateLiteral(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]

inline def isTerminatorless(): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
inline def isTerminatorless(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
inline def isTerminatorless(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
inline def isTerminatorless(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
inline def isTerminatorless(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]

inline def isThisExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
inline def isThisExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
inline def isThisExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
inline def isThisExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
inline def isThisExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]

inline def isThisTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
inline def isThisTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
inline def isThisTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
inline def isThisTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
inline def isThisTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]

inline def isThrowStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
inline def isThrowStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
inline def isThrowStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
inline def isThrowStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
inline def isThrowStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]

inline def isTryStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
inline def isTryStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
inline def isTryStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
inline def isTryStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
inline def isTryStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]

inline def isTupleExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
inline def isTupleExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
inline def isTupleExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
inline def isTupleExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
inline def isTupleExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]

inline def isTupleTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
inline def isTupleTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
inline def isTupleTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
inline def isTupleTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
inline def isTupleTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]

inline def isType(nodetype: java.lang.String, targetType: java.lang.String): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
inline def isType(nodetype: scala.Null, targetType: java.lang.String): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
inline def isType(nodetype: scala.Unit, targetType: java.lang.String): scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
inline def isType[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */](nodetype: java.lang.String, targetType: T): /* is T */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[/* is T */ scala.Boolean]

inline def isTypeAlias(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
inline def isTypeAlias(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
inline def isTypeAlias(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
inline def isTypeAlias(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
inline def isTypeAlias(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]

inline def isTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
inline def isTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
inline def isTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
inline def isTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
inline def isTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]

inline def isTypeCastExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
inline def isTypeCastExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
inline def isTypeCastExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
inline def isTypeCastExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
inline def isTypeCastExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]

inline def isTypeParameter(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
inline def isTypeParameter(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
inline def isTypeParameter(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
inline def isTypeParameter(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
inline def isTypeParameter(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]

inline def isTypeParameterDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
inline def isTypeParameterDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
inline def isTypeParameterDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
inline def isTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
inline def isTypeParameterDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]

inline def isTypeParameterInstantiation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
inline def isTypeParameterInstantiation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
inline def isTypeParameterInstantiation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
inline def isTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
inline def isTypeParameterInstantiation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]

inline def isTypeofTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
inline def isTypeofTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
inline def isTypeofTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
inline def isTypeofTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
inline def isTypeofTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]

inline def isUnaryExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
inline def isUnaryExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
inline def isUnaryExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
inline def isUnaryExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
inline def isUnaryExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]

inline def isUnaryLike(): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
inline def isUnaryLike(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
inline def isUnaryLike(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
inline def isUnaryLike(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
inline def isUnaryLike(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]

inline def isUnionTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
inline def isUnionTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
inline def isUnionTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
inline def isUnionTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
inline def isUnionTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]

inline def isUpdateExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
inline def isUpdateExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
inline def isUpdateExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
inline def isUpdateExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
inline def isUpdateExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]

inline def isUserWhitespacable(): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
inline def isUserWhitespacable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
inline def isUserWhitespacable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
inline def isUserWhitespacable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
inline def isUserWhitespacable(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]

inline def isV8IntrinsicIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
inline def isV8IntrinsicIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
inline def isV8IntrinsicIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
inline def isV8IntrinsicIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
inline def isV8IntrinsicIdentifier(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]

inline def isValidES3Identifier(name: java.lang.String): scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isValidES3Identifier")(name.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]

inline def isValidIdentifier(name: java.lang.String): scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isValidIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]

inline def isVar(node: typings.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVar")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]

inline def isVariableDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
inline def isVariableDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
inline def isVariableDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
inline def isVariableDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
inline def isVariableDeclaration(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]

inline def isVariableDeclarator(): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
inline def isVariableDeclarator(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
inline def isVariableDeclarator(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
inline def isVariableDeclarator(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
inline def isVariableDeclarator(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]

inline def isVariance(): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
inline def isVariance(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
inline def isVariance(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
inline def isVariance(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
inline def isVariance(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]

inline def isVoidTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
inline def isVoidTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
inline def isVoidTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
inline def isVoidTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
inline def isVoidTypeAnnotation(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]

inline def isWhile(): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
inline def isWhile(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
inline def isWhile(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
inline def isWhile(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
inline def isWhile(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]

inline def isWhileStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
inline def isWhileStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
inline def isWhileStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
inline def isWhileStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
inline def isWhileStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]

inline def isWithStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
inline def isWithStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
inline def isWithStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
inline def isWithStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
inline def isWithStatement(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]

inline def isYieldExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
inline def isYieldExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
inline def isYieldExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
inline def isYieldExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
inline def isYieldExpression(node: scala.Unit, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]

inline def is_P_Node[P /* <: typings.babelTypes.indexTs37Mod.Node */](`type`: java.lang.String, n: scala.Null, required: typings.std.Partial[P]): /* is P */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
inline def is_P_Node[P /* <: typings.babelTypes.indexTs37Mod.Node */](`type`: java.lang.String, n: scala.Unit, required: typings.std.Partial[P]): /* is P */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
inline def is_P_Node[P /* <: typings.babelTypes.indexTs37Mod.Node */](
  `type`: java.lang.String,
  n: typings.babelTypes.indexTs37Mod.Node,
  required: typings.std.Partial[P]
): /* is P */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]

inline def jsxAttribute(name: typings.babelTypes.indexTs37Mod.JSXIdentifier_): typings.babelTypes.indexTs37Mod.JSXAttribute_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  value: typings.babelTypes.indexTs37Mod.JSXElement_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  value: typings.babelTypes.indexTs37Mod.JSXExpressionContainer_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  value: typings.babelTypes.indexTs37Mod.JSXFragment_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  value: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_): typings.babelTypes.indexTs37Mod.JSXAttribute_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_,
  value: typings.babelTypes.indexTs37Mod.JSXElement_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_,
  value: typings.babelTypes.indexTs37Mod.JSXExpressionContainer_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_,
  value: typings.babelTypes.indexTs37Mod.JSXFragment_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]
inline def jsxAttribute(
  name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_,
  value: typings.babelTypes.indexTs37Mod.StringLiteral_
): typings.babelTypes.indexTs37Mod.JSXAttribute_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXAttribute_]

inline def jsxClosingElement(name: typings.babelTypes.indexTs37Mod.JSXIdentifier_): typings.babelTypes.indexTs37Mod.JSXClosingElement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingElement")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXClosingElement_]
inline def jsxClosingElement(name: typings.babelTypes.indexTs37Mod.JSXMemberExpression_): typings.babelTypes.indexTs37Mod.JSXClosingElement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingElement")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXClosingElement_]
inline def jsxClosingElement(name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_): typings.babelTypes.indexTs37Mod.JSXClosingElement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingElement")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXClosingElement_]

inline def jsxClosingFragment(): typings.babelTypes.indexTs37Mod.JSXClosingFragment_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingFragment")().asInstanceOf[typings.babelTypes.indexTs37Mod.JSXClosingFragment_]

inline def jsxElement(
  openingElement: typings.babelTypes.indexTs37Mod.JSXOpeningElement_,
  closingElement: scala.Null,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXFragment_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXText_
]
): typings.babelTypes.indexTs37Mod.JSXElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXElement_]
inline def jsxElement(
  openingElement: typings.babelTypes.indexTs37Mod.JSXOpeningElement_,
  closingElement: scala.Null,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXText_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXFragment_
],
  selfClosing: scala.Boolean
): typings.babelTypes.indexTs37Mod.JSXElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXElement_]
inline def jsxElement(
  openingElement: typings.babelTypes.indexTs37Mod.JSXOpeningElement_,
  closingElement: scala.Unit,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXFragment_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXText_
]
): typings.babelTypes.indexTs37Mod.JSXElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXElement_]
inline def jsxElement(
  openingElement: typings.babelTypes.indexTs37Mod.JSXOpeningElement_,
  closingElement: scala.Unit,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXText_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXFragment_
],
  selfClosing: scala.Boolean
): typings.babelTypes.indexTs37Mod.JSXElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXElement_]
inline def jsxElement(
  openingElement: typings.babelTypes.indexTs37Mod.JSXOpeningElement_,
  closingElement: typings.babelTypes.indexTs37Mod.JSXClosingElement_,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXFragment_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXText_
]
): typings.babelTypes.indexTs37Mod.JSXElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXElement_]
inline def jsxElement(
  openingElement: typings.babelTypes.indexTs37Mod.JSXOpeningElement_,
  closingElement: typings.babelTypes.indexTs37Mod.JSXClosingElement_,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXText_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXFragment_
],
  selfClosing: scala.Boolean
): typings.babelTypes.indexTs37Mod.JSXElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXElement_]

inline def jsxEmptyExpression(): typings.babelTypes.indexTs37Mod.JSXEmptyExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxEmptyExpression")().asInstanceOf[typings.babelTypes.indexTs37Mod.JSXEmptyExpression_]

inline def jsxExpressionContainer(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxExpressionContainer")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXExpressionContainer_]
inline def jsxExpressionContainer(expression: typings.babelTypes.indexTs37Mod.JSXEmptyExpression_): typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxExpressionContainer")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXExpressionContainer_]

inline def jsxFragment(
  openingFragment: typings.babelTypes.indexTs37Mod.JSXOpeningFragment_,
  closingFragment: typings.babelTypes.indexTs37Mod.JSXClosingFragment_,
  children: js.Array[
  typings.babelTypes.indexTs37Mod.JSXText_ | typings.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typings.babelTypes.indexTs37Mod.JSXSpreadChild_ | typings.babelTypes.indexTs37Mod.JSXElement_ | typings.babelTypes.indexTs37Mod.JSXFragment_
]
): typings.babelTypes.indexTs37Mod.JSXFragment_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxFragment")(openingFragment.asInstanceOf[js.Any], closingFragment.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXFragment_]

inline def jsxIdentifier(name: java.lang.String): typings.babelTypes.indexTs37Mod.JSXIdentifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXIdentifier_]

inline def jsxMemberExpression(
  `object`: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  property: typings.babelTypes.indexTs37Mod.JSXIdentifier_
): typings.babelTypes.indexTs37Mod.JSXMemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXMemberExpression_]
inline def jsxMemberExpression(
  `object`: typings.babelTypes.indexTs37Mod.JSXMemberExpression_,
  property: typings.babelTypes.indexTs37Mod.JSXIdentifier_
): typings.babelTypes.indexTs37Mod.JSXMemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXMemberExpression_]

inline def jsxNamespacedName(
  namespace: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_
): typings.babelTypes.indexTs37Mod.JSXNamespacedName_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxNamespacedName")(namespace.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXNamespacedName_]

inline def jsxOpeningElement(
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  attributes: js.Array[
  typings.babelTypes.indexTs37Mod.JSXAttribute_ | typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
]
): typings.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningElement_]
inline def jsxOpeningElement(
  name: typings.babelTypes.indexTs37Mod.JSXIdentifier_,
  attributes: js.Array[
  typings.babelTypes.indexTs37Mod.JSXAttribute_ | typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
],
  selfClosing: scala.Boolean
): typings.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningElement_]
inline def jsxOpeningElement(
  name: typings.babelTypes.indexTs37Mod.JSXMemberExpression_,
  attributes: js.Array[
  typings.babelTypes.indexTs37Mod.JSXAttribute_ | typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
]
): typings.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningElement_]
inline def jsxOpeningElement(
  name: typings.babelTypes.indexTs37Mod.JSXMemberExpression_,
  attributes: js.Array[
  typings.babelTypes.indexTs37Mod.JSXAttribute_ | typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
],
  selfClosing: scala.Boolean
): typings.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningElement_]
inline def jsxOpeningElement(
  name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_,
  attributes: js.Array[
  typings.babelTypes.indexTs37Mod.JSXAttribute_ | typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
]
): typings.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningElement_]
inline def jsxOpeningElement(
  name: typings.babelTypes.indexTs37Mod.JSXNamespacedName_,
  attributes: js.Array[
  typings.babelTypes.indexTs37Mod.JSXAttribute_ | typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
],
  selfClosing: scala.Boolean
): typings.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningElement_]

inline def jsxOpeningFragment(): typings.babelTypes.indexTs37Mod.JSXOpeningFragment_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningFragment")().asInstanceOf[typings.babelTypes.indexTs37Mod.JSXOpeningFragment_]

inline def jsxSpreadAttribute(argument: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxSpreadAttribute")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_]

inline def jsxSpreadChild(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.JSXSpreadChild_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxSpreadChild")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXSpreadChild_]

inline def jsxText(value: java.lang.String): typings.babelTypes.indexTs37Mod.JSXText_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxText")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.JSXText_]

inline def labeledStatement(
  label: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.LabeledStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("labeledStatement")(label.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.LabeledStatement_]

inline def logicalExpression(
  operator: typings.babelTypes.babelTypesStrings.AmpersandAmpersand,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.LogicalExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("logicalExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.LogicalExpression_]
inline def logicalExpression(
  operator: typings.babelTypes.babelTypesStrings.QuestionmarkQuestionmark,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.LogicalExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("logicalExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.LogicalExpression_]
inline def logicalExpression(
  operator: typings.babelTypes.babelTypesStrings.VerticallineVerticalline,
  left: typings.babelTypes.indexTs37Mod.Expression,
  right: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.LogicalExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("logicalExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.LogicalExpression_]

inline def matchesPattern(node: scala.Null, `match`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Null, `match`: java.lang.String, allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Null, `match`: js.Array[java.lang.String]): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Null, `match`: js.Array[java.lang.String], allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Unit, `match`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Unit, `match`: java.lang.String, allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Unit, `match`: js.Array[java.lang.String]): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: scala.Unit, `match`: js.Array[java.lang.String], allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: typings.babelTypes.indexTs37Mod.Node, `match`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: typings.babelTypes.indexTs37Mod.Node, `match`: java.lang.String, allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(node: typings.babelTypes.indexTs37Mod.Node, `match`: js.Array[java.lang.String]): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
inline def matchesPattern(
  node: typings.babelTypes.indexTs37Mod.Node,
  `match`: js.Array[java.lang.String],
  allowPartial: scala.Boolean
): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]

inline def memberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Boolean
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Boolean
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.PrivateName_
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.PrivateName_,
  computed: scala.Boolean
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]

inline def memberExpression_false(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Boolean,
  optional: typings.babelTypes.babelTypesBooleans.`false`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_false(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Unit,
  optional: typings.babelTypes.babelTypesBooleans.`false`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_false(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Boolean,
  optional: typings.babelTypes.babelTypesBooleans.`false`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_false(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Unit,
  optional: typings.babelTypes.babelTypesBooleans.`false`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_false(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.PrivateName_,
  computed: scala.Boolean,
  optional: typings.babelTypes.babelTypesBooleans.`false`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_false(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.PrivateName_,
  computed: scala.Unit,
  optional: typings.babelTypes.babelTypesBooleans.`false`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]

inline def memberExpression_true(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Boolean,
  optional: typings.babelTypes.babelTypesBooleans.`true`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_true(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Unit,
  optional: typings.babelTypes.babelTypesBooleans.`true`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_true(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Boolean,
  optional: typings.babelTypes.babelTypesBooleans.`true`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_true(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Unit,
  optional: typings.babelTypes.babelTypesBooleans.`true`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_true(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.PrivateName_,
  computed: scala.Boolean,
  optional: typings.babelTypes.babelTypesBooleans.`true`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]
inline def memberExpression_true(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.PrivateName_,
  computed: scala.Unit,
  optional: typings.babelTypes.babelTypesBooleans.`true`
): typings.babelTypes.indexTs37Mod.MemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MemberExpression_]

inline def metaProperty(
  meta: typings.babelTypes.indexTs37Mod.Identifier_,
  property: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.MetaProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("metaProperty")(meta.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.MetaProperty_]

inline def mixedTypeAnnotation(): typings.babelTypes.indexTs37Mod.MixedTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("mixedTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.MixedTypeAnnotation_]

inline def newExpression(
  callee: typings.babelTypes.indexTs37Mod.Expression,
  _arguments: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_ | typings.babelTypes.indexTs37Mod.JSXNamespacedName_ | typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_
]
): typings.babelTypes.indexTs37Mod.NewExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("newExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.NewExpression_]
inline def newExpression(
  callee: typings.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_,
  _arguments: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_ | typings.babelTypes.indexTs37Mod.JSXNamespacedName_ | typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_
]
): typings.babelTypes.indexTs37Mod.NewExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("newExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.NewExpression_]

inline def noop(): typings.babelTypes.indexTs37Mod.Noop_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("noop")().asInstanceOf[typings.babelTypes.indexTs37Mod.Noop_]

inline def nullLiteral(): typings.babelTypes.indexTs37Mod.NullLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("nullLiteral")().asInstanceOf[typings.babelTypes.indexTs37Mod.NullLiteral_]

inline def nullLiteralTypeAnnotation(): typings.babelTypes.indexTs37Mod.NullLiteralTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("nullLiteralTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.NullLiteralTypeAnnotation_]

inline def nullableTypeAnnotation(typeAnnotation: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.NullableTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("nullableTypeAnnotation")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.NullableTypeAnnotation_]

inline def numberLiteralTypeAnnotation(value: scala.Double): typings.babelTypes.indexTs37Mod.NumberLiteralTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("numberLiteralTypeAnnotation")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.NumberLiteralTypeAnnotation_]

inline def numberTypeAnnotation(): typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("numberTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_]

inline def numericLiteral(value: scala.Double): typings.babelTypes.indexTs37Mod.NumericLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("numericLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.NumericLiteral_]

inline def objectExpression(
  properties: js.Array[
  typings.babelTypes.indexTs37Mod.ObjectMethod_ | typings.babelTypes.indexTs37Mod.ObjectProperty_ | typings.babelTypes.indexTs37Mod.SpreadElement_
]
): typings.babelTypes.indexTs37Mod.ObjectExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectExpression")(properties.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectExpression_]

inline def objectMethod(
  kind: js.UndefOr[
  typings.babelTypes.babelTypesStrings.method | typings.babelTypes.babelTypesStrings.get | typings.babelTypes.babelTypesStrings.set
],
  key: typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.StringLiteral_ | typings.babelTypes.indexTs37Mod.NumericLiteral_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  body: typings.babelTypes.indexTs37Mod.BlockStatement_,
  computed: js.UndefOr[scala.Boolean],
  generator: js.UndefOr[scala.Boolean],
  async: js.UndefOr[scala.Boolean]
): typings.babelTypes.indexTs37Mod.ObjectMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectMethod_]

inline def objectPattern(
  properties: js.Array[
  typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.ObjectProperty_
]
): typings.babelTypes.indexTs37Mod.ObjectPattern_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectPattern")(properties.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectPattern_]

inline def objectProperty(
  key: typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.StringLiteral_ | typings.babelTypes.indexTs37Mod.NumericLiteral_,
  value: typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.PatternLike,
  computed: js.UndefOr[scala.Boolean],
  shorthand: js.UndefOr[scala.Boolean],
  decorators: js.UndefOr[js.Array[typings.babelTypes.indexTs37Mod.Decorator_] | scala.Null]
): typings.babelTypes.indexTs37Mod.ObjectProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], shorthand.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectProperty_]

inline def objectTypeAnnotation(
  properties: js.Array[
  typings.babelTypes.indexTs37Mod.ObjectTypeProperty_ | typings.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_
],
  indexers: js.UndefOr[js.Array[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_] | scala.Null],
  callProperties: js.UndefOr[js.Array[typings.babelTypes.indexTs37Mod.ObjectTypeCallProperty_] | scala.Null],
  internalSlots: js.UndefOr[js.Array[typings.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_] | scala.Null],
  exact: js.UndefOr[scala.Boolean]
): typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeAnnotation")(properties.asInstanceOf[js.Any], indexers.asInstanceOf[js.Any], callProperties.asInstanceOf[js.Any], internalSlots.asInstanceOf[js.Any], exact.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_]

inline def objectTypeCallProperty(value: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.ObjectTypeCallProperty_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeCallProperty")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeCallProperty_]

inline def objectTypeIndexer(
  id: scala.Null,
  key: typings.babelTypes.indexTs37Mod.FlowType,
  value: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
inline def objectTypeIndexer(
  id: scala.Null,
  key: typings.babelTypes.indexTs37Mod.FlowType,
  value: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
inline def objectTypeIndexer(
  id: scala.Unit,
  key: typings.babelTypes.indexTs37Mod.FlowType,
  value: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
inline def objectTypeIndexer(
  id: scala.Unit,
  key: typings.babelTypes.indexTs37Mod.FlowType,
  value: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
inline def objectTypeIndexer(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  key: typings.babelTypes.indexTs37Mod.FlowType,
  value: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
inline def objectTypeIndexer(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  key: typings.babelTypes.indexTs37Mod.FlowType,
  value: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_]

inline def objectTypeInternalSlot(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  value: typings.babelTypes.indexTs37Mod.FlowType,
  optional: scala.Boolean,
  _static: scala.Boolean,
  method: scala.Boolean
): typings.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeInternalSlot")(id.asInstanceOf[js.Any], value.asInstanceOf[js.Any], optional.asInstanceOf[js.Any], _static.asInstanceOf[js.Any], method.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_]

inline def objectTypeProperty(key: typings.babelTypes.indexTs37Mod.Identifier_, value: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeProperty_]
inline def objectTypeProperty(
  key: typings.babelTypes.indexTs37Mod.Identifier_,
  value: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeProperty_]
inline def objectTypeProperty(
  key: typings.babelTypes.indexTs37Mod.StringLiteral_,
  value: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeProperty_]
inline def objectTypeProperty(
  key: typings.babelTypes.indexTs37Mod.StringLiteral_,
  value: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeProperty_]

inline def objectTypeSpreadProperty(argument: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeSpreadProperty")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_]

inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  supertype: scala.Null,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  supertype: scala.Unit,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  supertype: typings.babelTypes.indexTs37Mod.FlowType,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  supertype: scala.Null,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  supertype: scala.Unit,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  supertype: typings.babelTypes.indexTs37Mod.FlowType,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  supertype: scala.Null,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  supertype: scala.Unit,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]
inline def opaqueType(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  supertype: typings.babelTypes.indexTs37Mod.FlowType,
  impltype: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.OpaqueType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OpaqueType_]

inline def optionalCallExpression(
  callee: typings.babelTypes.indexTs37Mod.Expression,
  _arguments: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_ | typings.babelTypes.indexTs37Mod.JSXNamespacedName_
],
  optional: scala.Boolean
): typings.babelTypes.indexTs37Mod.OptionalCallExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalCallExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OptionalCallExpression_]

inline def optionalMemberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Boolean,
  optional: scala.Boolean
): typings.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OptionalMemberExpression_]
inline def optionalMemberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Expression,
  computed: scala.Unit,
  optional: scala.Boolean
): typings.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OptionalMemberExpression_]
inline def optionalMemberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Boolean,
  optional: scala.Boolean
): typings.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OptionalMemberExpression_]
inline def optionalMemberExpression(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  property: typings.babelTypes.indexTs37Mod.Identifier_,
  computed: scala.Unit,
  optional: scala.Boolean
): typings.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.OptionalMemberExpression_]

inline def parenthesizedExpression(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.ParenthesizedExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("parenthesizedExpression")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ParenthesizedExpression_]

inline def pipelineBareFunction(callee: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.PipelineBareFunction_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("pipelineBareFunction")(callee.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.PipelineBareFunction_]

inline def pipelinePrimaryTopicReference(): typings.babelTypes.indexTs37Mod.PipelinePrimaryTopicReference_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("pipelinePrimaryTopicReference")().asInstanceOf[typings.babelTypes.indexTs37Mod.PipelinePrimaryTopicReference_]

inline def pipelineTopicExpression(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.PipelineTopicExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("pipelineTopicExpression")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.PipelineTopicExpression_]

inline def placeholder_BlockStatement(
  expectedNode: typings.babelTypes.babelTypesStrings.BlockStatement,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_ClassBody(
  expectedNode: typings.babelTypes.babelTypesStrings.ClassBody,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_Declaration(
  expectedNode: typings.babelTypes.babelTypesStrings.Declaration,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_Expression(
  expectedNode: typings.babelTypes.babelTypesStrings.Expression,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_Identifier(
  expectedNode: typings.babelTypes.babelTypesStrings.Identifier,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_Pattern(
  expectedNode: typings.babelTypes.babelTypesStrings.Pattern,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_Statement(
  expectedNode: typings.babelTypes.babelTypesStrings.Statement,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def placeholder_StringLiteral(
  expectedNode: typings.babelTypes.babelTypesStrings.StringLiteral,
  name: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.Placeholder_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Placeholder_]

inline def prependToMemberExpression[T /* <: typings.babelTypes.anon.PickMemberExpressionobjec */](member: T, prepend: typings.babelTypes.indexTs37Mod.Expression): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("prependToMemberExpression")(member.asInstanceOf[js.Any], prepend.asInstanceOf[js.Any])).asInstanceOf[T]

inline def privateName(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.PrivateName_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("privateName")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.PrivateName_]

inline def program(body: js.Array[typings.babelTypes.indexTs37Mod.Statement]): typings.babelTypes.indexTs37Mod.Program_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_]
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_],
  sourceType: scala.Unit,
  interpreter: typings.babelTypes.indexTs37Mod.InterpreterDirective_
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: scala.Unit,
  sourceType: scala.Unit,
  interpreter: typings.babelTypes.indexTs37Mod.InterpreterDirective_
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]

inline def program_module(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_],
  sourceType: typings.babelTypes.babelTypesStrings.module
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program_module(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_],
  sourceType: typings.babelTypes.babelTypesStrings.module,
  interpreter: typings.babelTypes.indexTs37Mod.InterpreterDirective_
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program_module(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: scala.Unit,
  sourceType: typings.babelTypes.babelTypesStrings.module
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program_module(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: scala.Unit,
  sourceType: typings.babelTypes.babelTypesStrings.module,
  interpreter: typings.babelTypes.indexTs37Mod.InterpreterDirective_
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]

inline def program_script(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_],
  sourceType: typings.babelTypes.babelTypesStrings.script
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program_script(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: js.Array[typings.babelTypes.indexTs37Mod.Directive_],
  sourceType: typings.babelTypes.babelTypesStrings.script,
  interpreter: typings.babelTypes.indexTs37Mod.InterpreterDirective_
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program_script(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: scala.Unit,
  sourceType: typings.babelTypes.babelTypesStrings.script
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]
inline def program_script(
  body: js.Array[typings.babelTypes.indexTs37Mod.Statement],
  directives: scala.Unit,
  sourceType: typings.babelTypes.babelTypesStrings.script,
  interpreter: typings.babelTypes.indexTs37Mod.InterpreterDirective_
): typings.babelTypes.indexTs37Mod.Program_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Program_]

inline def qualifiedTypeIdentifier(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  qualification: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("qualifiedTypeIdentifier")(id.asInstanceOf[js.Any], qualification.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_]
inline def qualifiedTypeIdentifier(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  qualification: typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_
): typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("qualifiedTypeIdentifier")(id.asInstanceOf[js.Any], qualification.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_]

inline def recordExpression(
  properties: js.Array[
  typings.babelTypes.indexTs37Mod.ObjectProperty_ | typings.babelTypes.indexTs37Mod.SpreadElement_
]
): typings.babelTypes.indexTs37Mod.RecordExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("recordExpression")(properties.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.RecordExpression_]

inline def regExpLiteral(pattern: java.lang.String): typings.babelTypes.indexTs37Mod.RegExpLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("regExpLiteral")(pattern.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.RegExpLiteral_]
inline def regExpLiteral(pattern: java.lang.String, flags: java.lang.String): typings.babelTypes.indexTs37Mod.RegExpLiteral_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("regExpLiteral")(pattern.asInstanceOf[js.Any], flags.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.RegExpLiteral_]

inline def removeComments[T /* <: typings.babelTypes.indexTs37Mod.Node */](node: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeComments")(node.asInstanceOf[js.Any]).asInstanceOf[T]

inline def removeProperties(n: typings.babelTypes.indexTs37Mod.Node): scala.Unit = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeProperties")(n.asInstanceOf[js.Any]).asInstanceOf[scala.Unit]
inline def removeProperties(n: typings.babelTypes.indexTs37Mod.Node, opts: typings.babelTypes.anon.PreserveComments): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeProperties")(n.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def removePropertiesDeep[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T): T = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removePropertiesDeep")(n.asInstanceOf[js.Any]).asInstanceOf[T]
inline def removePropertiesDeep[T /* <: typings.babelTypes.indexTs37Mod.Node */](n: T, opts: typings.babelTypes.anon.PreserveComments): T = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removePropertiesDeep")(n.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[T]

inline def removeTypeDuplicates_false(
  types: js.Array[
  js.UndefOr[
    typings.babelTypes.indexTs37Mod.FlowType | typings.babelTypes.babelTypesBooleans.`false` | scala.Null
  ]
]
): js.Array[typings.babelTypes.indexTs37Mod.FlowType] = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeTypeDuplicates")(types.asInstanceOf[js.Any]).asInstanceOf[js.Array[typings.babelTypes.indexTs37Mod.FlowType]]

inline def restElement(argument: typings.babelTypes.indexTs37Mod.LVal): typings.babelTypes.indexTs37Mod.RestElement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("restElement")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.RestElement_]

inline def returnStatement(): typings.babelTypes.indexTs37Mod.ReturnStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("returnStatement")().asInstanceOf[typings.babelTypes.indexTs37Mod.ReturnStatement_]
inline def returnStatement(argument: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.ReturnStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("returnStatement")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ReturnStatement_]

inline def sequenceExpression(expressions: js.Array[typings.babelTypes.indexTs37Mod.Expression]): typings.babelTypes.indexTs37Mod.SequenceExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("sequenceExpression")(expressions.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.SequenceExpression_]

inline def shallowEqual[T /* <: js.Object */](actual: js.Object, expected: T): /* is T */ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("shallowEqual")(actual.asInstanceOf[js.Any], expected.asInstanceOf[js.Any])).asInstanceOf[/* is T */ scala.Boolean]

inline def spreadElement(argument: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.SpreadElement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("spreadElement")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.SpreadElement_]

inline def staticBlock(body: js.Array[typings.babelTypes.indexTs37Mod.Statement]): typings.babelTypes.indexTs37Mod.StaticBlock_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("staticBlock")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StaticBlock_]

inline def stringLiteral(value: java.lang.String): typings.babelTypes.indexTs37Mod.StringLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("stringLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringLiteral_]

inline def stringLiteralTypeAnnotation(value: java.lang.String): typings.babelTypes.indexTs37Mod.StringLiteralTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("stringLiteralTypeAnnotation")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringLiteralTypeAnnotation_]

inline def stringTypeAnnotation(): typings.babelTypes.indexTs37Mod.StringTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("stringTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.StringTypeAnnotation_]

inline def `super`(): typings.babelTypes.indexTs37Mod.Super_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("super")().asInstanceOf[typings.babelTypes.indexTs37Mod.Super_]

inline def switchCase(test: scala.Null, consequent: js.Array[typings.babelTypes.indexTs37Mod.Statement]): typings.babelTypes.indexTs37Mod.SwitchCase_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchCase")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.SwitchCase_]
inline def switchCase(test: scala.Unit, consequent: js.Array[typings.babelTypes.indexTs37Mod.Statement]): typings.babelTypes.indexTs37Mod.SwitchCase_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchCase")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.SwitchCase_]
inline def switchCase(
  test: typings.babelTypes.indexTs37Mod.Expression,
  consequent: js.Array[typings.babelTypes.indexTs37Mod.Statement]
): typings.babelTypes.indexTs37Mod.SwitchCase_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchCase")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.SwitchCase_]

inline def switchStatement(
  discriminant: typings.babelTypes.indexTs37Mod.Expression,
  cases: js.Array[typings.babelTypes.indexTs37Mod.SwitchCase_]
): typings.babelTypes.indexTs37Mod.SwitchStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchStatement")(discriminant.asInstanceOf[js.Any], cases.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.SwitchStatement_]

inline def symbolTypeAnnotation(): typings.babelTypes.indexTs37Mod.SymbolTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("symbolTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.SymbolTypeAnnotation_]

inline def taggedTemplateExpression(
  tag: typings.babelTypes.indexTs37Mod.Expression,
  quasi: typings.babelTypes.indexTs37Mod.TemplateLiteral_
): typings.babelTypes.indexTs37Mod.TaggedTemplateExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("taggedTemplateExpression")(tag.asInstanceOf[js.Any], quasi.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TaggedTemplateExpression_]

inline def templateElement(value: typings.babelTypes.anon.Cooked): typings.babelTypes.indexTs37Mod.TemplateElement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("templateElement")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TemplateElement_]
inline def templateElement(value: typings.babelTypes.anon.Cooked, tail: scala.Boolean): typings.babelTypes.indexTs37Mod.TemplateElement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("templateElement")(value.asInstanceOf[js.Any], tail.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TemplateElement_]

inline def templateLiteral(
  quasis: js.Array[typings.babelTypes.indexTs37Mod.TemplateElement_],
  expressions: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.TSType
]
): typings.babelTypes.indexTs37Mod.TemplateLiteral_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("templateLiteral")(quasis.asInstanceOf[js.Any], expressions.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TemplateLiteral_]

inline def thisExpression(): typings.babelTypes.indexTs37Mod.ThisExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("thisExpression")().asInstanceOf[typings.babelTypes.indexTs37Mod.ThisExpression_]

inline def thisTypeAnnotation(): typings.babelTypes.indexTs37Mod.ThisTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("thisTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.ThisTypeAnnotation_]

inline def throwStatement(argument: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.ThrowStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("throwStatement")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ThrowStatement_]

inline def toBindingIdentifierName(): java.lang.String = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBindingIdentifierName")().asInstanceOf[java.lang.String]
inline def toBindingIdentifierName(name: typings.babelTypes.anon.ToString): java.lang.String = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBindingIdentifierName")(name.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]

inline def toBlock(node: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.BlockStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]
inline def toBlock(node: typings.babelTypes.indexTs37Mod.Expression, parent: typings.babelTypes.indexTs37Mod.Function): typings.babelTypes.indexTs37Mod.BlockStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]
inline def toBlock(node: typings.babelTypes.indexTs37Mod.Statement): typings.babelTypes.indexTs37Mod.BlockStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]
inline def toBlock(node: typings.babelTypes.indexTs37Mod.Statement, parent: typings.babelTypes.indexTs37Mod.Function): typings.babelTypes.indexTs37Mod.BlockStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.BlockStatement_]

inline def toComputedKey[T /* <: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Computed] */](node: T): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toComputedKey")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def toComputedKey[T /* <: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Computed] */](node: T, key: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.Expression = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toComputedKey")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def toComputedKey[T /* <: typings.std.Extract[typings.babelTypes.indexTs37Mod.Node, typings.babelTypes.anon.Computed] */](node: T, key: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.Expression = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toComputedKey")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]

inline def toExpression(node: typings.babelTypes.indexTs37Mod.Class): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def toExpression(node: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def toExpression(node: typings.babelTypes.indexTs37Mod.ExpressionStatement_): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def toExpression(node: typings.babelTypes.indexTs37Mod.Function): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]

inline def toExpression_ClassExpression_(node: typings.babelTypes.indexTs37Mod.Class): typings.babelTypes.indexTs37Mod.ClassExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassExpression_]

inline def toExpression_FunctionExpression_(node: typings.babelTypes.indexTs37Mod.Function): typings.babelTypes.indexTs37Mod.FunctionExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionExpression_]

inline def toIdentifier(): java.lang.String = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toIdentifier")().asInstanceOf[java.lang.String]
inline def toIdentifier(name: typings.babelTypes.anon.ToString): java.lang.String = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]

inline def toKeyAlias(node: typings.babelTypes.indexTs37Mod.Method): java.lang.String = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]
inline def toKeyAlias(node: typings.babelTypes.indexTs37Mod.Method, key: typings.babelTypes.indexTs37Mod.Node): java.lang.String = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[java.lang.String]
inline def toKeyAlias(node: typings.babelTypes.indexTs37Mod.Property): java.lang.String = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]
inline def toKeyAlias(node: typings.babelTypes.indexTs37Mod.Property, key: typings.babelTypes.indexTs37Mod.Node): java.lang.String = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[java.lang.String]

inline def toSequenceExpression(
  nodes: js.Array[typings.babelTypes.indexTs37Mod.Node],
  scope: typings.babelTypes.anon.BuildUndefinedNode
): js.UndefOr[typings.babelTypes.indexTs37Mod.SequenceExpression_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toSequenceExpression")(nodes.asInstanceOf[js.Any], scope.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typings.babelTypes.indexTs37Mod.SequenceExpression_]]

inline def toStatement(node: typings.babelTypes.indexTs37Mod.AssignmentExpression_): typings.babelTypes.indexTs37Mod.ExpressionStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ExpressionStatement_]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.AssignmentExpression_, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.ExpressionStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ExpressionStatement_]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.Class): typings.babelTypes.indexTs37Mod.Statement = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.Class, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.Statement = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.Function): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.Function, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.Statement): typings.babelTypes.indexTs37Mod.Statement = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]
inline def toStatement(node: typings.babelTypes.indexTs37Mod.Statement, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.Statement = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]

inline def toStatement_ClassDeclaration_(node: typings.babelTypes.indexTs37Mod.Class): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]
inline def toStatement_ClassDeclaration_(node: typings.babelTypes.indexTs37Mod.Class, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.ClassDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.ClassDeclaration_]

inline def toStatement_Statement(node: typings.babelTypes.indexTs37Mod.AssignmentExpression_): typings.babelTypes.indexTs37Mod.Statement = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]
inline def toStatement_Statement(node: typings.babelTypes.indexTs37Mod.AssignmentExpression_, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.Statement = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]
inline def toStatement_Statement(node: typings.babelTypes.indexTs37Mod.Function): typings.babelTypes.indexTs37Mod.Statement = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]
inline def toStatement_Statement(node: typings.babelTypes.indexTs37Mod.Function, ignore: scala.Boolean): typings.babelTypes.indexTs37Mod.Statement = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.Statement]

inline def toStatement_true(
  node: typings.babelTypes.indexTs37Mod.AssignmentExpression_,
  ignore: typings.babelTypes.babelTypesBooleans.`true`
): js.UndefOr[typings.babelTypes.indexTs37Mod.Statement] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typings.babelTypes.indexTs37Mod.Statement]]
inline def toStatement_true(node: typings.babelTypes.indexTs37Mod.Class, ignore: typings.babelTypes.babelTypesBooleans.`true`): js.UndefOr[typings.babelTypes.indexTs37Mod.ClassDeclaration_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typings.babelTypes.indexTs37Mod.ClassDeclaration_]]
inline def toStatement_true(
  node: typings.babelTypes.indexTs37Mod.Function,
  ignore: typings.babelTypes.babelTypesBooleans.`true`
): js.UndefOr[typings.babelTypes.indexTs37Mod.FunctionDeclaration_] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typings.babelTypes.indexTs37Mod.FunctionDeclaration_]]
inline def toStatement_true(
  node: typings.babelTypes.indexTs37Mod.Statement,
  ignore: typings.babelTypes.babelTypesBooleans.`true`
): js.UndefOr[typings.babelTypes.indexTs37Mod.Statement] = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typings.babelTypes.indexTs37Mod.Statement]]

inline def traverse[T](n: typings.babelTypes.indexTs37Mod.Node, h: typings.babelTypes.indexTs37Mod.TraversalHandler[T]): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
inline def traverse[T](n: typings.babelTypes.indexTs37Mod.Node, h: typings.babelTypes.indexTs37Mod.TraversalHandlers[T]): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
inline def traverse[T](
  n: typings.babelTypes.indexTs37Mod.Node,
  h: typings.babelTypes.indexTs37Mod.TraversalHandlers[T],
  state: T
): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any], state.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
inline def traverse[T](
  n: typings.babelTypes.indexTs37Mod.Node,
  h: typings.babelTypes.indexTs37Mod.TraversalHandler[T],
  state: T
): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any], state.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def traverseFast[T](n: typings.babelTypes.indexTs37Mod.Node, h: typings.babelTypes.indexTs37Mod.TraversalHandler[T]): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverseFast")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
inline def traverseFast[T](
  n: typings.babelTypes.indexTs37Mod.Node,
  h: typings.babelTypes.indexTs37Mod.TraversalHandler[T],
  state: T
): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverseFast")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any], state.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]

inline def tryStatement(block: typings.babelTypes.indexTs37Mod.BlockStatement_): typings.babelTypes.indexTs37Mod.TryStatement_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TryStatement_]
inline def tryStatement(
  block: typings.babelTypes.indexTs37Mod.BlockStatement_,
  handler: scala.Null,
  finalizer: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.TryStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any], finalizer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TryStatement_]
inline def tryStatement(
  block: typings.babelTypes.indexTs37Mod.BlockStatement_,
  handler: scala.Unit,
  finalizer: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.TryStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any], finalizer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TryStatement_]
inline def tryStatement(
  block: typings.babelTypes.indexTs37Mod.BlockStatement_,
  handler: typings.babelTypes.indexTs37Mod.CatchClause_
): typings.babelTypes.indexTs37Mod.TryStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TryStatement_]
inline def tryStatement(
  block: typings.babelTypes.indexTs37Mod.BlockStatement_,
  handler: typings.babelTypes.indexTs37Mod.CatchClause_,
  finalizer: typings.babelTypes.indexTs37Mod.BlockStatement_
): typings.babelTypes.indexTs37Mod.TryStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any], finalizer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TryStatement_]

inline def tsAnyKeyword(): typings.babelTypes.indexTs37Mod.TSAnyKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsAnyKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSAnyKeyword_]

inline def tsArrayType(elementType: typings.babelTypes.indexTs37Mod.TSType): typings.babelTypes.indexTs37Mod.TSArrayType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsArrayType")(elementType.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSArrayType_]

inline def tsAsExpression(
  expression: typings.babelTypes.indexTs37Mod.Expression,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSAsExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsAsExpression")(expression.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSAsExpression_]

inline def tsBigIntKeyword(): typings.babelTypes.indexTs37Mod.TSBigIntKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsBigIntKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSBigIntKeyword_]

inline def tsBooleanKeyword(): typings.babelTypes.indexTs37Mod.TSBooleanKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsBooleanKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSBooleanKeyword_]

inline def tsCallSignatureDeclaration(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
inline def tsCallSignatureDeclaration(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
inline def tsCallSignatureDeclaration(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
inline def tsCallSignatureDeclaration(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
inline def tsCallSignatureDeclaration(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
inline def tsCallSignatureDeclaration(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]

inline def tsConditionalType(
  checkType: typings.babelTypes.indexTs37Mod.TSType,
  extendsType: typings.babelTypes.indexTs37Mod.TSType,
  trueType: typings.babelTypes.indexTs37Mod.TSType,
  falseType: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSConditionalType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConditionalType")(checkType.asInstanceOf[js.Any], extendsType.asInstanceOf[js.Any], trueType.asInstanceOf[js.Any], falseType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConditionalType_]

inline def tsConstructSignatureDeclaration(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
inline def tsConstructSignatureDeclaration(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
inline def tsConstructSignatureDeclaration(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
inline def tsConstructSignatureDeclaration(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
inline def tsConstructSignatureDeclaration(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
inline def tsConstructSignatureDeclaration(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]

inline def tsConstructorType(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSConstructorType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructorType_]
inline def tsConstructorType(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSConstructorType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructorType_]
inline def tsConstructorType(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSConstructorType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructorType_]
inline def tsConstructorType(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSConstructorType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructorType_]
inline def tsConstructorType(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSConstructorType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructorType_]
inline def tsConstructorType(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSConstructorType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSConstructorType_]

inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.Noop_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
]
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.Noop_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]
inline def tsDeclareFunction(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareFunction_]

inline def tsDeclareMethod(
  decorators: js.UndefOr[js.Array[typings.babelTypes.indexTs37Mod.Decorator_] | scala.Null],
  key: typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.StringLiteral_ | typings.babelTypes.indexTs37Mod.NumericLiteral_ | typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: js.UndefOr[
  typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_ | typings.babelTypes.indexTs37Mod.Noop_ | scala.Null
],
  params: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.Pattern | typings.babelTypes.indexTs37Mod.RestElement_ | typings.babelTypes.indexTs37Mod.TSParameterProperty_
],
  returnType: js.UndefOr[
  typings.babelTypes.indexTs37Mod.TSTypeAnnotation_ | typings.babelTypes.indexTs37Mod.Noop_ | scala.Null
]
): typings.babelTypes.indexTs37Mod.TSDeclareMethod_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareMethod")(decorators.asInstanceOf[js.Any], key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSDeclareMethod_]

inline def tsEnumDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  members: js.Array[typings.babelTypes.indexTs37Mod.TSEnumMember_]
): typings.babelTypes.indexTs37Mod.TSEnumDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumDeclaration")(id.asInstanceOf[js.Any], members.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSEnumDeclaration_]

inline def tsEnumMember(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.TSEnumMember_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSEnumMember_]
inline def tsEnumMember(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  initializer: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.TSEnumMember_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSEnumMember_]
inline def tsEnumMember(id: typings.babelTypes.indexTs37Mod.StringLiteral_): typings.babelTypes.indexTs37Mod.TSEnumMember_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSEnumMember_]
inline def tsEnumMember(
  id: typings.babelTypes.indexTs37Mod.StringLiteral_,
  initializer: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.TSEnumMember_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSEnumMember_]

inline def tsExportAssignment(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.TSExportAssignment_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExportAssignment")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSExportAssignment_]

inline def tsExpressionWithTypeArguments(expression: typings.babelTypes.indexTs37Mod.TSEntityName): typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExpressionWithTypeArguments")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_]
inline def tsExpressionWithTypeArguments(
  expression: typings.babelTypes.indexTs37Mod.TSEntityName,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExpressionWithTypeArguments")(expression.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_]

inline def tsExternalModuleReference(expression: typings.babelTypes.indexTs37Mod.StringLiteral_): typings.babelTypes.indexTs37Mod.TSExternalModuleReference_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExternalModuleReference")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSExternalModuleReference_]

inline def tsFunctionType(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSFunctionType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSFunctionType_]
inline def tsFunctionType(
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSFunctionType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSFunctionType_]
inline def tsFunctionType(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSFunctionType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSFunctionType_]
inline def tsFunctionType(
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSFunctionType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSFunctionType_]
inline def tsFunctionType(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSFunctionType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSFunctionType_]
inline def tsFunctionType(
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSFunctionType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSFunctionType_]

inline def tsImportEqualsDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  moduleReference: typings.babelTypes.indexTs37Mod.TSEntityName
): typings.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportEqualsDeclaration")(id.asInstanceOf[js.Any], moduleReference.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_]
inline def tsImportEqualsDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  moduleReference: typings.babelTypes.indexTs37Mod.TSExternalModuleReference_
): typings.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportEqualsDeclaration")(id.asInstanceOf[js.Any], moduleReference.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_]

inline def tsImportType(argument: typings.babelTypes.indexTs37Mod.StringLiteral_): typings.babelTypes.indexTs37Mod.TSImportType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportType_]
inline def tsImportType(
  argument: typings.babelTypes.indexTs37Mod.StringLiteral_,
  qualifier: scala.Null,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.TSImportType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportType_]
inline def tsImportType(
  argument: typings.babelTypes.indexTs37Mod.StringLiteral_,
  qualifier: scala.Unit,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.TSImportType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportType_]
inline def tsImportType(
  argument: typings.babelTypes.indexTs37Mod.StringLiteral_,
  qualifier: typings.babelTypes.indexTs37Mod.TSEntityName
): typings.babelTypes.indexTs37Mod.TSImportType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportType_]
inline def tsImportType(
  argument: typings.babelTypes.indexTs37Mod.StringLiteral_,
  qualifier: typings.babelTypes.indexTs37Mod.TSEntityName,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.TSImportType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSImportType_]

inline def tsIndexSignature(parameters: js.Array[typings.babelTypes.indexTs37Mod.Identifier_]): typings.babelTypes.indexTs37Mod.TSIndexSignature_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIndexSignature")(parameters.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSIndexSignature_]
inline def tsIndexSignature(
  parameters: js.Array[typings.babelTypes.indexTs37Mod.Identifier_],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSIndexSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIndexSignature")(parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSIndexSignature_]

inline def tsIndexedAccessType(
  objectType: typings.babelTypes.indexTs37Mod.TSType,
  indexType: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSIndexedAccessType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIndexedAccessType")(objectType.asInstanceOf[js.Any], indexType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSIndexedAccessType_]

inline def tsInferType(typeParameter: typings.babelTypes.indexTs37Mod.TSTypeParameter_): typings.babelTypes.indexTs37Mod.TSInferType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInferType")(typeParameter.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInferType_]

inline def tsInterfaceBody(body: js.Array[typings.babelTypes.indexTs37Mod.TSTypeElement]): typings.babelTypes.indexTs37Mod.TSInterfaceBody_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceBody")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceBody_]

inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_],
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_],
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  _extends: js.Array[typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_],
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  _extends: scala.Null,
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
inline def tsInterfaceDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  _extends: scala.Unit,
  body: typings.babelTypes.indexTs37Mod.TSInterfaceBody_
): typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]

inline def tsIntersectionType(types: js.Array[typings.babelTypes.indexTs37Mod.TSType]): typings.babelTypes.indexTs37Mod.TSIntersectionType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIntersectionType")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSIntersectionType_]

inline def tsIntrinsicKeyword(): typings.babelTypes.indexTs37Mod.TSIntrinsicKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIntrinsicKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSIntrinsicKeyword_]

inline def tsLiteralType(literal: typings.babelTypes.indexTs37Mod.BigIntLiteral_): typings.babelTypes.indexTs37Mod.TSLiteralType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSLiteralType_]
inline def tsLiteralType(literal: typings.babelTypes.indexTs37Mod.BooleanLiteral_): typings.babelTypes.indexTs37Mod.TSLiteralType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSLiteralType_]
inline def tsLiteralType(literal: typings.babelTypes.indexTs37Mod.NumericLiteral_): typings.babelTypes.indexTs37Mod.TSLiteralType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSLiteralType_]
inline def tsLiteralType(literal: typings.babelTypes.indexTs37Mod.StringLiteral_): typings.babelTypes.indexTs37Mod.TSLiteralType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSLiteralType_]

inline def tsMappedType(typeParameter: typings.babelTypes.indexTs37Mod.TSTypeParameter_): typings.babelTypes.indexTs37Mod.TSMappedType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMappedType_]
inline def tsMappedType(
  typeParameter: typings.babelTypes.indexTs37Mod.TSTypeParameter_,
  typeAnnotation: scala.Null,
  nameType: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSMappedType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], nameType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMappedType_]
inline def tsMappedType(
  typeParameter: typings.babelTypes.indexTs37Mod.TSTypeParameter_,
  typeAnnotation: scala.Unit,
  nameType: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSMappedType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], nameType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMappedType_]
inline def tsMappedType(
  typeParameter: typings.babelTypes.indexTs37Mod.TSTypeParameter_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSMappedType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMappedType_]
inline def tsMappedType(
  typeParameter: typings.babelTypes.indexTs37Mod.TSTypeParameter_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType,
  nameType: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSMappedType_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], nameType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMappedType_]

inline def tsMethodSignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSMethodSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMethodSignature_]
inline def tsMethodSignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: scala.Null,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSMethodSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMethodSignature_]
inline def tsMethodSignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSMethodSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMethodSignature_]
inline def tsMethodSignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: scala.Unit,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSMethodSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMethodSignature_]
inline def tsMethodSignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
]
): typings.babelTypes.indexTs37Mod.TSMethodSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMethodSignature_]
inline def tsMethodSignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  parameters: js.Array[
  typings.babelTypes.indexTs37Mod.Identifier_ | typings.babelTypes.indexTs37Mod.RestElement_
],
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSMethodSignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSMethodSignature_]

inline def tsModuleBlock(body: js.Array[typings.babelTypes.indexTs37Mod.Statement]): typings.babelTypes.indexTs37Mod.TSModuleBlock_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleBlock")(body.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSModuleBlock_]

inline def tsModuleDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.TSModuleBlock_
): typings.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSModuleDeclaration_]
inline def tsModuleDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  body: typings.babelTypes.indexTs37Mod.TSModuleDeclaration_
): typings.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSModuleDeclaration_]
inline def tsModuleDeclaration(
  id: typings.babelTypes.indexTs37Mod.StringLiteral_,
  body: typings.babelTypes.indexTs37Mod.TSModuleBlock_
): typings.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSModuleDeclaration_]
inline def tsModuleDeclaration(
  id: typings.babelTypes.indexTs37Mod.StringLiteral_,
  body: typings.babelTypes.indexTs37Mod.TSModuleDeclaration_
): typings.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSModuleDeclaration_]

inline def tsNamedTupleMember(
  label: typings.babelTypes.indexTs37Mod.Identifier_,
  elementType: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSNamedTupleMember_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNamedTupleMember")(label.asInstanceOf[js.Any], elementType.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSNamedTupleMember_]
inline def tsNamedTupleMember(
  label: typings.babelTypes.indexTs37Mod.Identifier_,
  elementType: typings.babelTypes.indexTs37Mod.TSType,
  optional: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSNamedTupleMember_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNamedTupleMember")(label.asInstanceOf[js.Any], elementType.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSNamedTupleMember_]

inline def tsNamespaceExportDeclaration(id: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.TSNamespaceExportDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNamespaceExportDeclaration")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSNamespaceExportDeclaration_]

inline def tsNeverKeyword(): typings.babelTypes.indexTs37Mod.TSNeverKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNeverKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSNeverKeyword_]

inline def tsNonNullExpression(expression: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.TSNonNullExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNonNullExpression")(expression.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSNonNullExpression_]

inline def tsNullKeyword(): typings.babelTypes.indexTs37Mod.TSNullKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNullKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSNullKeyword_]

inline def tsNumberKeyword(): typings.babelTypes.indexTs37Mod.TSNumberKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNumberKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSNumberKeyword_]

inline def tsObjectKeyword(): typings.babelTypes.indexTs37Mod.TSObjectKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsObjectKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSObjectKeyword_]

inline def tsOptionalType(typeAnnotation: typings.babelTypes.indexTs37Mod.TSType): typings.babelTypes.indexTs37Mod.TSOptionalType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsOptionalType")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSOptionalType_]

inline def tsParameterProperty(parameter: typings.babelTypes.indexTs37Mod.AssignmentPattern_): typings.babelTypes.indexTs37Mod.TSParameterProperty_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsParameterProperty")(parameter.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSParameterProperty_]
inline def tsParameterProperty(parameter: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.TSParameterProperty_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsParameterProperty")(parameter.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSParameterProperty_]

inline def tsParenthesizedType(typeAnnotation: typings.babelTypes.indexTs37Mod.TSType): typings.babelTypes.indexTs37Mod.TSParenthesizedType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsParenthesizedType")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSParenthesizedType_]

inline def tsPropertySignature(key: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.TSPropertySignature_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSPropertySignature_]
inline def tsPropertySignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeAnnotation: scala.Null,
  initializer: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.TSPropertySignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSPropertySignature_]
inline def tsPropertySignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeAnnotation: scala.Unit,
  initializer: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.TSPropertySignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSPropertySignature_]
inline def tsPropertySignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSPropertySignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSPropertySignature_]
inline def tsPropertySignature(
  key: typings.babelTypes.indexTs37Mod.Expression,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_,
  initializer: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.TSPropertySignature_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSPropertySignature_]

inline def tsQualifiedName(
  left: typings.babelTypes.indexTs37Mod.TSEntityName,
  right: typings.babelTypes.indexTs37Mod.Identifier_
): typings.babelTypes.indexTs37Mod.TSQualifiedName_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsQualifiedName")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSQualifiedName_]

inline def tsRestType(typeAnnotation: typings.babelTypes.indexTs37Mod.TSType): typings.babelTypes.indexTs37Mod.TSRestType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsRestType")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSRestType_]

inline def tsStringKeyword(): typings.babelTypes.indexTs37Mod.TSStringKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsStringKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSStringKeyword_]

inline def tsSymbolKeyword(): typings.babelTypes.indexTs37Mod.TSSymbolKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsSymbolKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSSymbolKeyword_]

inline def tsThisType(): typings.babelTypes.indexTs37Mod.TSThisType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsThisType")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSThisType_]

inline def tsTupleType(
  elementTypes: js.Array[
  typings.babelTypes.indexTs37Mod.TSType | typings.babelTypes.indexTs37Mod.TSNamedTupleMember_
]
): typings.babelTypes.indexTs37Mod.TSTupleType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTupleType")(elementTypes.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTupleType_]

inline def tsTypeAliasDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAliasDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_]
inline def tsTypeAliasDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAliasDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_]
inline def tsTypeAliasDeclaration(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType
): typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAliasDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_]

inline def tsTypeAnnotation(typeAnnotation: typings.babelTypes.indexTs37Mod.TSType): typings.babelTypes.indexTs37Mod.TSTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAnnotation")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeAnnotation_]

inline def tsTypeAssertion(
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSType,
  expression: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.TSTypeAssertion_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAssertion")(typeAnnotation.asInstanceOf[js.Any], expression.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeAssertion_]

inline def tsTypeLiteral(members: js.Array[typings.babelTypes.indexTs37Mod.TSTypeElement]): typings.babelTypes.indexTs37Mod.TSTypeLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeLiteral")(members.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeLiteral_]

inline def tsTypeOperator(typeAnnotation: typings.babelTypes.indexTs37Mod.TSType): typings.babelTypes.indexTs37Mod.TSTypeOperator_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeOperator")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeOperator_]

inline def tsTypeParameter(constraint: scala.Null, _default: scala.Null, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: scala.Null, _default: scala.Unit, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: scala.Null, _default: typings.babelTypes.indexTs37Mod.TSType, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: scala.Unit, _default: scala.Null, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: scala.Unit, _default: scala.Unit, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: scala.Unit, _default: typings.babelTypes.indexTs37Mod.TSType, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: typings.babelTypes.indexTs37Mod.TSType, _default: scala.Null, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(constraint: typings.babelTypes.indexTs37Mod.TSType, _default: scala.Unit, name: java.lang.String): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]
inline def tsTypeParameter(
  constraint: typings.babelTypes.indexTs37Mod.TSType,
  _default: typings.babelTypes.indexTs37Mod.TSType,
  name: java.lang.String
): typings.babelTypes.indexTs37Mod.TSTypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameter_]

inline def tsTypeParameterDeclaration(params: js.Array[typings.babelTypes.indexTs37Mod.TSTypeParameter_]): typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameterDeclaration")(params.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_]

inline def tsTypeParameterInstantiation(params: js.Array[typings.babelTypes.indexTs37Mod.TSType]): typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameterInstantiation")(params.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_]

inline def tsTypePredicate(parameterName: typings.babelTypes.indexTs37Mod.Identifier_): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.Identifier_,
  typeAnnotation: scala.Null,
  asserts: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.Identifier_,
  typeAnnotation: scala.Unit,
  asserts: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.Identifier_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.Identifier_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_,
  asserts: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(parameterName: typings.babelTypes.indexTs37Mod.TSThisType_): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.TSThisType_,
  typeAnnotation: scala.Null,
  asserts: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.TSThisType_,
  typeAnnotation: scala.Unit,
  asserts: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.TSThisType_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]
inline def tsTypePredicate(
  parameterName: typings.babelTypes.indexTs37Mod.TSThisType_,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TSTypeAnnotation_,
  asserts: scala.Boolean
): typings.babelTypes.indexTs37Mod.TSTypePredicate_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypePredicate_]

inline def tsTypeQuery(exprName: typings.babelTypes.indexTs37Mod.TSEntityName): typings.babelTypes.indexTs37Mod.TSTypeQuery_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeQuery")(exprName.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeQuery_]
inline def tsTypeQuery(exprName: typings.babelTypes.indexTs37Mod.TSImportType_): typings.babelTypes.indexTs37Mod.TSTypeQuery_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeQuery")(exprName.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeQuery_]

inline def tsTypeReference(typeName: typings.babelTypes.indexTs37Mod.TSEntityName): typings.babelTypes.indexTs37Mod.TSTypeReference_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeReference")(typeName.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeReference_]
inline def tsTypeReference(
  typeName: typings.babelTypes.indexTs37Mod.TSEntityName,
  typeParameters: typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
): typings.babelTypes.indexTs37Mod.TSTypeReference_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeReference")(typeName.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TSTypeReference_]

inline def tsUndefinedKeyword(): typings.babelTypes.indexTs37Mod.TSUndefinedKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsUndefinedKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSUndefinedKeyword_]

inline def tsUnionType(types: js.Array[typings.babelTypes.indexTs37Mod.TSType]): typings.babelTypes.indexTs37Mod.TSUnionType_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsUnionType")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TSUnionType_]

inline def tsUnknownKeyword(): typings.babelTypes.indexTs37Mod.TSUnknownKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsUnknownKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSUnknownKeyword_]

inline def tsVoidKeyword(): typings.babelTypes.indexTs37Mod.TSVoidKeyword_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsVoidKeyword")().asInstanceOf[typings.babelTypes.indexTs37Mod.TSVoidKeyword_]

inline def tupleExpression(): typings.babelTypes.indexTs37Mod.TupleExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tupleExpression")().asInstanceOf[typings.babelTypes.indexTs37Mod.TupleExpression_]
inline def tupleExpression(
  elements: js.Array[
  typings.babelTypes.indexTs37Mod.Expression | typings.babelTypes.indexTs37Mod.SpreadElement_
]
): typings.babelTypes.indexTs37Mod.TupleExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tupleExpression")(elements.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TupleExpression_]

inline def tupleTypeAnnotation(types: js.Array[typings.babelTypes.indexTs37Mod.FlowType]): typings.babelTypes.indexTs37Mod.TupleTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tupleTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TupleTypeAnnotation_]

inline def typeAlias(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Null,
  right: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.TypeAlias_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeAlias_]
inline def typeAlias(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: scala.Unit,
  right: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.TypeAlias_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeAlias_]
inline def typeAlias(
  id: typings.babelTypes.indexTs37Mod.Identifier_,
  typeParameters: typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
  right: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.TypeAlias_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeAlias_]

inline def typeAnnotation(typeAnnotation: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.TypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAnnotation")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeAnnotation_]

inline def typeCastExpression(
  expression: typings.babelTypes.indexTs37Mod.Expression,
  typeAnnotation: typings.babelTypes.indexTs37Mod.TypeAnnotation_
): typings.babelTypes.indexTs37Mod.TypeCastExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeCastExpression")(expression.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeCastExpression_]

inline def typeParameter(): typings.babelTypes.indexTs37Mod.TypeParameter_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")().asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: scala.Null, _default: scala.Null, variance: typings.babelTypes.indexTs37Mod.Variance_): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: scala.Null, _default: scala.Unit, variance: typings.babelTypes.indexTs37Mod.Variance_): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: scala.Null, _default: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(
  bound: scala.Null,
  _default: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: scala.Unit, _default: scala.Null, variance: typings.babelTypes.indexTs37Mod.Variance_): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: scala.Unit, _default: scala.Unit, variance: typings.babelTypes.indexTs37Mod.Variance_): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: scala.Unit, _default: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(
  bound: scala.Unit,
  _default: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(bound: typings.babelTypes.indexTs37Mod.TypeAnnotation_): typings.babelTypes.indexTs37Mod.TypeParameter_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(
  bound: typings.babelTypes.indexTs37Mod.TypeAnnotation_,
  _default: scala.Null,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(
  bound: typings.babelTypes.indexTs37Mod.TypeAnnotation_,
  _default: scala.Unit,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(
  bound: typings.babelTypes.indexTs37Mod.TypeAnnotation_,
  _default: typings.babelTypes.indexTs37Mod.FlowType
): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]
inline def typeParameter(
  bound: typings.babelTypes.indexTs37Mod.TypeAnnotation_,
  _default: typings.babelTypes.indexTs37Mod.FlowType,
  variance: typings.babelTypes.indexTs37Mod.Variance_
): typings.babelTypes.indexTs37Mod.TypeParameter_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameter_]

inline def typeParameterDeclaration(params: js.Array[typings.babelTypes.indexTs37Mod.TypeParameter_]): typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameterDeclaration")(params.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_]

inline def typeParameterInstantiation(params: js.Array[typings.babelTypes.indexTs37Mod.FlowType]): typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameterInstantiation")(params.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_]

inline def typeofTypeAnnotation(argument: typings.babelTypes.indexTs37Mod.FlowType): typings.babelTypes.indexTs37Mod.TypeofTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeofTypeAnnotation")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.TypeofTypeAnnotation_]

inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Exclamationmark,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Exclamationmark,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Plussign,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Plussign,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Tilde,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.Tilde,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.`-_`,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression(
  operator: typings.babelTypes.babelTypesStrings.`-_`,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]

inline def unaryExpression_delete(
  operator: typings.babelTypes.babelTypesStrings.delete,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression_delete(
  operator: typings.babelTypes.babelTypesStrings.delete,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]

inline def unaryExpression_throw(
  operator: typings.babelTypes.babelTypesStrings.`throw`,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression_throw(
  operator: typings.babelTypes.babelTypesStrings.`throw`,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]

inline def unaryExpression_typeof(
  operator: typings.babelTypes.babelTypesStrings.typeof,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression_typeof(
  operator: typings.babelTypes.babelTypesStrings.typeof,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]

inline def unaryExpression_void(
  operator: typings.babelTypes.babelTypesStrings.void,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def unaryExpression_void(
  operator: typings.babelTypes.babelTypesStrings.void,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UnaryExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UnaryExpression_]

inline def unionTypeAnnotation(types: js.Array[typings.babelTypes.indexTs37Mod.FlowType]): typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_]

inline def updateExpression(
  operator: typings.babelTypes.babelTypesStrings.PlussignPlussign,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UpdateExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UpdateExpression_]
inline def updateExpression(
  operator: typings.babelTypes.babelTypesStrings.PlussignPlussign,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UpdateExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UpdateExpression_]
inline def updateExpression(
  operator: typings.babelTypes.babelTypesStrings.`--`,
  argument: typings.babelTypes.indexTs37Mod.Expression
): typings.babelTypes.indexTs37Mod.UpdateExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UpdateExpression_]
inline def updateExpression(
  operator: typings.babelTypes.babelTypesStrings.`--`,
  argument: typings.babelTypes.indexTs37Mod.Expression,
  prefix: scala.Boolean
): typings.babelTypes.indexTs37Mod.UpdateExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.UpdateExpression_]

inline def v8IntrinsicIdentifier(name: java.lang.String): typings.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("v8IntrinsicIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_]

inline def validate(n: typings.babelTypes.indexTs37Mod.Node, key: java.lang.String, value: js.Any): scala.Unit = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
inline def validate[T /* <: typings.babelTypes.indexTs37Mod.Node */, K /* <: /* keyof T */ java.lang.String */](
  n: scala.Null,
  key: K,
  value: /* import warning: importer.ImportType#apply Failed type conversion: T[K] */ js.Any
): /* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[/* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean]
inline def validate[T /* <: typings.babelTypes.indexTs37Mod.Node */, K /* <: /* keyof T */ java.lang.String */](
  n: scala.Unit,
  key: K,
  value: /* import warning: importer.ImportType#apply Failed type conversion: T[K] */ js.Any
): /* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[/* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean]
inline def validate[T /* <: typings.babelTypes.indexTs37Mod.Node */, K /* <: /* keyof T */ java.lang.String */](
  n: typings.babelTypes.indexTs37Mod.Node,
  key: K,
  value: /* import warning: importer.ImportType#apply Failed type conversion: T[K] */ js.Any
): /* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[/* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean]

inline def valueToNode(): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")().asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def valueToNode(value: java.lang.String): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def valueToNode(
  value: js.Array[
  js.UndefOr[
    scala.Boolean | scala.Null | java.lang.String | scala.Double | typings.std.RegExp | js.Object
  ]
]
): typings.babelTypes.indexTs37Mod.ArrayExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ArrayExpression_]
inline def valueToNode(value: js.Object): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def valueToNode(value: scala.Boolean): typings.babelTypes.indexTs37Mod.BooleanLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.BooleanLiteral_]
inline def valueToNode(value: scala.Double): typings.babelTypes.indexTs37Mod.NumericLiteral_ | typings.babelTypes.indexTs37Mod.BinaryExpression_ | typings.babelTypes.indexTs37Mod.UnaryExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.NumericLiteral_ | typings.babelTypes.indexTs37Mod.BinaryExpression_ | typings.babelTypes.indexTs37Mod.UnaryExpression_]
inline def valueToNode(value: scala.Null): typings.babelTypes.indexTs37Mod.NullLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.NullLiteral_]
inline def valueToNode(value: scala.Unit): typings.babelTypes.indexTs37Mod.Identifier_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Identifier_]
inline def valueToNode(value: typings.std.RegExp): typings.babelTypes.indexTs37Mod.RegExpLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.RegExpLiteral_]

inline def valueToNode_Expression(value: scala.Boolean): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def valueToNode_Expression(value: scala.Double): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]
inline def valueToNode_Expression(value: typings.std.RegExp): typings.babelTypes.indexTs37Mod.Expression = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Expression]

inline def valueToNode_ObjectExpression_(value: js.Object): typings.babelTypes.indexTs37Mod.ObjectExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.ObjectExpression_]

inline def valueToNode_StringLiteral_(value: java.lang.String): typings.babelTypes.indexTs37Mod.StringLiteral_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.StringLiteral_]

inline def variableDeclaration_const(
  kind: typings.babelTypes.babelTypesStrings.const,
  declarations: js.Array[typings.babelTypes.indexTs37Mod.VariableDeclarator_]
): typings.babelTypes.indexTs37Mod.VariableDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclaration")(kind.asInstanceOf[js.Any], declarations.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.VariableDeclaration_]

inline def variableDeclaration_let(
  kind: typings.babelTypes.babelTypesStrings.let,
  declarations: js.Array[typings.babelTypes.indexTs37Mod.VariableDeclarator_]
): typings.babelTypes.indexTs37Mod.VariableDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclaration")(kind.asInstanceOf[js.Any], declarations.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.VariableDeclaration_]

inline def variableDeclaration_var(
  kind: typings.babelTypes.babelTypesStrings.`var`,
  declarations: js.Array[typings.babelTypes.indexTs37Mod.VariableDeclarator_]
): typings.babelTypes.indexTs37Mod.VariableDeclaration_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclaration")(kind.asInstanceOf[js.Any], declarations.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.VariableDeclaration_]

inline def variableDeclarator(id: typings.babelTypes.indexTs37Mod.LVal): typings.babelTypes.indexTs37Mod.VariableDeclarator_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclarator")(id.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.VariableDeclarator_]
inline def variableDeclarator(id: typings.babelTypes.indexTs37Mod.LVal, init: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.VariableDeclarator_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclarator")(id.asInstanceOf[js.Any], init.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.VariableDeclarator_]

inline def variance_minus(kind: typings.babelTypes.babelTypesStrings.minus): typings.babelTypes.indexTs37Mod.Variance_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variance")(kind.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Variance_]

inline def variance_plus(kind: typings.babelTypes.babelTypesStrings.plus): typings.babelTypes.indexTs37Mod.Variance_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variance")(kind.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.Variance_]

inline def voidTypeAnnotation(): typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("voidTypeAnnotation")().asInstanceOf[typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_]

inline def whileStatement(test: typings.babelTypes.indexTs37Mod.Expression, body: typings.babelTypes.indexTs37Mod.Statement): typings.babelTypes.indexTs37Mod.WhileStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("whileStatement")(test.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.WhileStatement_]

inline def withStatement(
  `object`: typings.babelTypes.indexTs37Mod.Expression,
  body: typings.babelTypes.indexTs37Mod.Statement
): typings.babelTypes.indexTs37Mod.WithStatement_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("withStatement")(`object`.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.WithStatement_]

inline def yieldExpression(): typings.babelTypes.indexTs37Mod.YieldExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")().asInstanceOf[typings.babelTypes.indexTs37Mod.YieldExpression_]
inline def yieldExpression(argument: scala.Null, delegate: scala.Boolean): typings.babelTypes.indexTs37Mod.YieldExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any], delegate.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.YieldExpression_]
inline def yieldExpression(argument: scala.Unit, delegate: scala.Boolean): typings.babelTypes.indexTs37Mod.YieldExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any], delegate.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.YieldExpression_]
inline def yieldExpression(argument: typings.babelTypes.indexTs37Mod.Expression): typings.babelTypes.indexTs37Mod.YieldExpression_ = typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any]).asInstanceOf[typings.babelTypes.indexTs37Mod.YieldExpression_]
inline def yieldExpression(argument: typings.babelTypes.indexTs37Mod.Expression, delegate: scala.Boolean): typings.babelTypes.indexTs37Mod.YieldExpression_ = (typings.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any], delegate.asInstanceOf[js.Any])).asInstanceOf[typings.babelTypes.indexTs37Mod.YieldExpression_]

/* Rewritten from type alias, can be one of: 
  - typings.babelTypes.indexTs37Mod.AnyTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.ArgumentPlaceholder_
  - typings.babelTypes.indexTs37Mod.ArrayExpression_
  - typings.babelTypes.indexTs37Mod.ArrayPattern_
  - typings.babelTypes.indexTs37Mod.ArrayTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.ArrowFunctionExpression_
  - typings.babelTypes.indexTs37Mod.AssignmentExpression_
  - typings.babelTypes.indexTs37Mod.AssignmentPattern_
  - typings.babelTypes.indexTs37Mod.AwaitExpression_
  - typings.babelTypes.indexTs37Mod.BigIntLiteral_
  - typings.babelTypes.indexTs37Mod.Binary
  - typings.babelTypes.indexTs37Mod.BinaryExpression_
  - typings.babelTypes.indexTs37Mod.BindExpression_
  - typings.babelTypes.indexTs37Mod.Block
  - typings.babelTypes.indexTs37Mod.BlockParent
  - typings.babelTypes.indexTs37Mod.BlockStatement_
  - typings.babelTypes.indexTs37Mod.BooleanLiteral_
  - typings.babelTypes.indexTs37Mod.BooleanLiteralTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.BooleanTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.BreakStatement_
  - typings.babelTypes.indexTs37Mod.CallExpression_
  - typings.babelTypes.indexTs37Mod.CatchClause_
  - typings.babelTypes.indexTs37Mod.Class
  - typings.babelTypes.indexTs37Mod.ClassBody_
  - typings.babelTypes.indexTs37Mod.ClassDeclaration_
  - typings.babelTypes.indexTs37Mod.ClassExpression_
  - typings.babelTypes.indexTs37Mod.ClassImplements_
  - typings.babelTypes.indexTs37Mod.ClassMethod_
  - typings.babelTypes.indexTs37Mod.ClassPrivateMethod_
  - typings.babelTypes.indexTs37Mod.ClassPrivateProperty_
  - typings.babelTypes.indexTs37Mod.ClassProperty_
  - typings.babelTypes.indexTs37Mod.CompletionStatement
  - typings.babelTypes.indexTs37Mod.Conditional
  - typings.babelTypes.indexTs37Mod.ConditionalExpression_
  - typings.babelTypes.indexTs37Mod.ContinueStatement_
  - typings.babelTypes.indexTs37Mod.DebuggerStatement_
  - typings.babelTypes.indexTs37Mod.DecimalLiteral_
  - typings.babelTypes.indexTs37Mod.Declaration
  - typings.babelTypes.indexTs37Mod.DeclareClass_
  - typings.babelTypes.indexTs37Mod.DeclareExportAllDeclaration_
  - typings.babelTypes.indexTs37Mod.DeclareExportDeclaration_
  - typings.babelTypes.indexTs37Mod.DeclareFunction_
  - typings.babelTypes.indexTs37Mod.DeclareInterface_
  - typings.babelTypes.indexTs37Mod.DeclareModule_
  - typings.babelTypes.indexTs37Mod.DeclareModuleExports_
  - typings.babelTypes.indexTs37Mod.DeclareOpaqueType_
  - typings.babelTypes.indexTs37Mod.DeclareTypeAlias_
  - typings.babelTypes.indexTs37Mod.DeclareVariable_
  - typings.babelTypes.indexTs37Mod.DeclaredPredicate_
  - typings.babelTypes.indexTs37Mod.Decorator_
  - typings.babelTypes.indexTs37Mod.Directive_
  - typings.babelTypes.indexTs37Mod.DirectiveLiteral_
  - typings.babelTypes.indexTs37Mod.DoExpression_
  - typings.babelTypes.indexTs37Mod.DoWhileStatement_
  - typings.babelTypes.indexTs37Mod.EmptyStatement_
  - typings.babelTypes.indexTs37Mod.EmptyTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.EnumBody
  - typings.babelTypes.indexTs37Mod.EnumBooleanBody_
  - typings.babelTypes.indexTs37Mod.EnumBooleanMember_
  - typings.babelTypes.indexTs37Mod.EnumDeclaration_
  - typings.babelTypes.indexTs37Mod.EnumDefaultedMember_
  - typings.babelTypes.indexTs37Mod.EnumMember
  - typings.babelTypes.indexTs37Mod.EnumNumberBody_
  - typings.babelTypes.indexTs37Mod.EnumNumberMember_
  - typings.babelTypes.indexTs37Mod.EnumStringBody_
  - typings.babelTypes.indexTs37Mod.EnumStringMember_
  - typings.babelTypes.indexTs37Mod.EnumSymbolBody_
  - typings.babelTypes.indexTs37Mod.ExistsTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.ExportAllDeclaration_
  - typings.babelTypes.indexTs37Mod.ExportDeclaration
  - typings.babelTypes.indexTs37Mod.ExportDefaultDeclaration_
  - typings.babelTypes.indexTs37Mod.ExportDefaultSpecifier_
  - typings.babelTypes.indexTs37Mod.ExportNamedDeclaration_
  - typings.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
  - typings.babelTypes.indexTs37Mod.ExportSpecifier_
  - typings.babelTypes.indexTs37Mod.Expression
  - typings.babelTypes.indexTs37Mod.ExpressionStatement_
  - typings.babelTypes.indexTs37Mod.ExpressionWrapper
  - typings.babelTypes.indexTs37Mod.File_
  - typings.babelTypes.indexTs37Mod.Flow
  - typings.babelTypes.indexTs37Mod.FlowBaseAnnotation
  - typings.babelTypes.indexTs37Mod.FlowDeclaration
  - typings.babelTypes.indexTs37Mod.FlowPredicate
  - typings.babelTypes.indexTs37Mod.FlowType
  - typings.babelTypes.indexTs37Mod.For
  - typings.babelTypes.indexTs37Mod.ForInStatement_
  - typings.babelTypes.indexTs37Mod.ForOfStatement_
  - typings.babelTypes.indexTs37Mod.ForStatement_
  - typings.babelTypes.indexTs37Mod.ForXStatement
  - typings.babelTypes.indexTs37Mod.Function
  - typings.babelTypes.indexTs37Mod.FunctionDeclaration_
  - typings.babelTypes.indexTs37Mod.FunctionExpression_
  - typings.babelTypes.indexTs37Mod.FunctionParent
  - typings.babelTypes.indexTs37Mod.FunctionTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.FunctionTypeParam_
  - typings.babelTypes.indexTs37Mod.GenericTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.Identifier_
  - typings.babelTypes.indexTs37Mod.IfStatement_
  - typings.babelTypes.indexTs37Mod.Immutable
  - typings.babelTypes.indexTs37Mod.Import_
  - typings.babelTypes.indexTs37Mod.ImportAttribute_
  - typings.babelTypes.indexTs37Mod.ImportDeclaration_
  - typings.babelTypes.indexTs37Mod.ImportDefaultSpecifier_
  - typings.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_
  - typings.babelTypes.indexTs37Mod.ImportSpecifier_
  - typings.babelTypes.indexTs37Mod.InferredPredicate_
  - typings.babelTypes.indexTs37Mod.InterfaceDeclaration_
  - typings.babelTypes.indexTs37Mod.InterfaceExtends_
  - typings.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.InterpreterDirective_
  - typings.babelTypes.indexTs37Mod.IntersectionTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.JSX
  - typings.babelTypes.indexTs37Mod.JSXAttribute_
  - typings.babelTypes.indexTs37Mod.JSXClosingElement_
  - typings.babelTypes.indexTs37Mod.JSXClosingFragment_
  - typings.babelTypes.indexTs37Mod.JSXElement_
  - typings.babelTypes.indexTs37Mod.JSXEmptyExpression_
  - typings.babelTypes.indexTs37Mod.JSXExpressionContainer_
  - typings.babelTypes.indexTs37Mod.JSXFragment_
  - typings.babelTypes.indexTs37Mod.JSXIdentifier_
  - typings.babelTypes.indexTs37Mod.JSXMemberExpression_
  - typings.babelTypes.indexTs37Mod.JSXNamespacedName_
  - typings.babelTypes.indexTs37Mod.JSXOpeningElement_
  - typings.babelTypes.indexTs37Mod.JSXOpeningFragment_
  - typings.babelTypes.indexTs37Mod.JSXSpreadAttribute_
  - typings.babelTypes.indexTs37Mod.JSXSpreadChild_
  - typings.babelTypes.indexTs37Mod.JSXText_
  - typings.babelTypes.indexTs37Mod.LVal
  - typings.babelTypes.indexTs37Mod.LabeledStatement_
  - typings.babelTypes.indexTs37Mod.Literal
  - typings.babelTypes.indexTs37Mod.LogicalExpression_
  - typings.babelTypes.indexTs37Mod.Loop
  - typings.babelTypes.indexTs37Mod.MemberExpression_
  - typings.babelTypes.indexTs37Mod.MetaProperty_
  - typings.babelTypes.indexTs37Mod.Method
  - typings.babelTypes.indexTs37Mod.MixedTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.ModuleDeclaration
  - typings.babelTypes.indexTs37Mod.ModuleSpecifier
  - typings.babelTypes.indexTs37Mod.NewExpression_
  - typings.babelTypes.indexTs37Mod.Noop_
  - typings.babelTypes.indexTs37Mod.NullLiteral_
  - typings.babelTypes.indexTs37Mod.NullLiteralTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.NullableTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.NumberLiteral
  - typings.babelTypes.indexTs37Mod.NumberLiteralTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.NumberTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.NumericLiteral_
  - typings.babelTypes.indexTs37Mod.ObjectExpression_
  - typings.babelTypes.indexTs37Mod.ObjectMember
  - typings.babelTypes.indexTs37Mod.ObjectMethod_
  - typings.babelTypes.indexTs37Mod.ObjectPattern_
  - typings.babelTypes.indexTs37Mod.ObjectProperty_
  - typings.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.ObjectTypeCallProperty_
  - typings.babelTypes.indexTs37Mod.ObjectTypeIndexer_
  - typings.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_
  - typings.babelTypes.indexTs37Mod.ObjectTypeProperty_
  - typings.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_
  - typings.babelTypes.indexTs37Mod.OpaqueType_
  - typings.babelTypes.indexTs37Mod.OptionalCallExpression_
  - typings.babelTypes.indexTs37Mod.OptionalMemberExpression_
  - typings.babelTypes.indexTs37Mod.ParenthesizedExpression_
  - typings.babelTypes.indexTs37Mod.Pattern
  - typings.babelTypes.indexTs37Mod.PatternLike
  - typings.babelTypes.indexTs37Mod.PipelineBareFunction_
  - typings.babelTypes.indexTs37Mod.PipelinePrimaryTopicReference_
  - typings.babelTypes.indexTs37Mod.PipelineTopicExpression_
  - typings.babelTypes.indexTs37Mod.Placeholder_
  - typings.babelTypes.indexTs37Mod.Private
  - typings.babelTypes.indexTs37Mod.PrivateName_
  - typings.babelTypes.indexTs37Mod.Program_
  - typings.babelTypes.indexTs37Mod.Property
  - typings.babelTypes.indexTs37Mod.Pureish
  - typings.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_
  - typings.babelTypes.indexTs37Mod.RecordExpression_
  - typings.babelTypes.indexTs37Mod.RegExpLiteral_
  - typings.babelTypes.indexTs37Mod.RegexLiteral
  - typings.babelTypes.indexTs37Mod.RestElement_
  - typings.babelTypes.indexTs37Mod.RestProperty
  - typings.babelTypes.indexTs37Mod.ReturnStatement_
  - typings.babelTypes.indexTs37Mod.Scopable
  - typings.babelTypes.indexTs37Mod.SequenceExpression_
  - typings.babelTypes.indexTs37Mod.SpreadElement_
  - typings.babelTypes.indexTs37Mod.SpreadProperty
  - typings.babelTypes.indexTs37Mod.Statement
  - typings.babelTypes.indexTs37Mod.StaticBlock_
  - typings.babelTypes.indexTs37Mod.StringLiteral_
  - typings.babelTypes.indexTs37Mod.StringLiteralTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.StringTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.Super_
  - typings.babelTypes.indexTs37Mod.SwitchCase_
  - typings.babelTypes.indexTs37Mod.SwitchStatement_
  - typings.babelTypes.indexTs37Mod.SymbolTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.TSAnyKeyword_
  - typings.babelTypes.indexTs37Mod.TSArrayType_
  - typings.babelTypes.indexTs37Mod.TSAsExpression_
  - typings.babelTypes.indexTs37Mod.TSBaseType
  - typings.babelTypes.indexTs37Mod.TSBigIntKeyword_
  - typings.babelTypes.indexTs37Mod.TSBooleanKeyword_
  - typings.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_
  - typings.babelTypes.indexTs37Mod.TSConditionalType_
  - typings.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_
  - typings.babelTypes.indexTs37Mod.TSConstructorType_
  - typings.babelTypes.indexTs37Mod.TSDeclareFunction_
  - typings.babelTypes.indexTs37Mod.TSDeclareMethod_
  - typings.babelTypes.indexTs37Mod.TSEntityName
  - typings.babelTypes.indexTs37Mod.TSEnumDeclaration_
  - typings.babelTypes.indexTs37Mod.TSEnumMember_
  - typings.babelTypes.indexTs37Mod.TSExportAssignment_
  - typings.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_
  - typings.babelTypes.indexTs37Mod.TSExternalModuleReference_
  - typings.babelTypes.indexTs37Mod.TSFunctionType_
  - typings.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_
  - typings.babelTypes.indexTs37Mod.TSImportType_
  - typings.babelTypes.indexTs37Mod.TSIndexSignature_
  - typings.babelTypes.indexTs37Mod.TSIndexedAccessType_
  - typings.babelTypes.indexTs37Mod.TSInferType_
  - typings.babelTypes.indexTs37Mod.TSInterfaceBody_
  - typings.babelTypes.indexTs37Mod.TSInterfaceDeclaration_
  - typings.babelTypes.indexTs37Mod.TSIntersectionType_
  - typings.babelTypes.indexTs37Mod.TSIntrinsicKeyword_
  - typings.babelTypes.indexTs37Mod.TSLiteralType_
  - typings.babelTypes.indexTs37Mod.TSMappedType_
  - typings.babelTypes.indexTs37Mod.TSMethodSignature_
  - typings.babelTypes.indexTs37Mod.TSModuleBlock_
  - typings.babelTypes.indexTs37Mod.TSModuleDeclaration_
  - typings.babelTypes.indexTs37Mod.TSNamedTupleMember_
  - typings.babelTypes.indexTs37Mod.TSNamespaceExportDeclaration_
  - typings.babelTypes.indexTs37Mod.TSNeverKeyword_
  - typings.babelTypes.indexTs37Mod.TSNonNullExpression_
  - typings.babelTypes.indexTs37Mod.TSNullKeyword_
  - typings.babelTypes.indexTs37Mod.TSNumberKeyword_
  - typings.babelTypes.indexTs37Mod.TSObjectKeyword_
  - typings.babelTypes.indexTs37Mod.TSOptionalType_
  - typings.babelTypes.indexTs37Mod.TSParameterProperty_
  - typings.babelTypes.indexTs37Mod.TSParenthesizedType_
  - typings.babelTypes.indexTs37Mod.TSPropertySignature_
  - typings.babelTypes.indexTs37Mod.TSQualifiedName_
  - typings.babelTypes.indexTs37Mod.TSRestType_
  - typings.babelTypes.indexTs37Mod.TSStringKeyword_
  - typings.babelTypes.indexTs37Mod.TSSymbolKeyword_
  - typings.babelTypes.indexTs37Mod.TSThisType_
  - typings.babelTypes.indexTs37Mod.TSTupleType_
  - typings.babelTypes.indexTs37Mod.TSType
  - typings.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_
  - typings.babelTypes.indexTs37Mod.TSTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.TSTypeAssertion_
  - typings.babelTypes.indexTs37Mod.TSTypeElement
  - typings.babelTypes.indexTs37Mod.TSTypeLiteral_
  - typings.babelTypes.indexTs37Mod.TSTypeOperator_
  - typings.babelTypes.indexTs37Mod.TSTypeParameter_
  - typings.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_
  - typings.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
  - typings.babelTypes.indexTs37Mod.TSTypePredicate_
  - typings.babelTypes.indexTs37Mod.TSTypeQuery_
  - typings.babelTypes.indexTs37Mod.TSTypeReference_
  - typings.babelTypes.indexTs37Mod.TSUndefinedKeyword_
  - typings.babelTypes.indexTs37Mod.TSUnionType_
  - typings.babelTypes.indexTs37Mod.TSUnknownKeyword_
  - typings.babelTypes.indexTs37Mod.TSVoidKeyword_
  - typings.babelTypes.indexTs37Mod.TaggedTemplateExpression_
  - typings.babelTypes.indexTs37Mod.TemplateElement_
  - typings.babelTypes.indexTs37Mod.TemplateLiteral_
  - typings.babelTypes.indexTs37Mod.Terminatorless
  - typings.babelTypes.indexTs37Mod.ThisExpression_
  - typings.babelTypes.indexTs37Mod.ThisTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.ThrowStatement_
  - typings.babelTypes.indexTs37Mod.TryStatement_
  - typings.babelTypes.indexTs37Mod.TupleExpression_
  - typings.babelTypes.indexTs37Mod.TupleTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.TypeAlias_
  - typings.babelTypes.indexTs37Mod.TypeAnnotation_
  - typings.babelTypes.indexTs37Mod.TypeCastExpression_
  - typings.babelTypes.indexTs37Mod.TypeParameter_
  - typings.babelTypes.indexTs37Mod.TypeParameterDeclaration_
  - typings.babelTypes.indexTs37Mod.TypeParameterInstantiation_
  - typings.babelTypes.indexTs37Mod.TypeofTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.UnaryExpression_
  - typings.babelTypes.indexTs37Mod.UnaryLike
  - typings.babelTypes.indexTs37Mod.UnionTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.UpdateExpression_
  - typings.babelTypes.indexTs37Mod.UserWhitespacable
  - typings.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_
  - typings.babelTypes.indexTs37Mod.VariableDeclaration_
  - typings.babelTypes.indexTs37Mod.VariableDeclarator_
  - typings.babelTypes.indexTs37Mod.Variance_
  - typings.babelTypes.indexTs37Mod.VoidTypeAnnotation_
  - typings.babelTypes.indexTs37Mod.While
  - typings.babelTypes.indexTs37Mod.WhileStatement_
  - typings.babelTypes.indexTs37Mod.WithStatement_
  - typings.babelTypes.indexTs37Mod.YieldExpression_
*/
type Node = typings.babelTypes.indexTs37Mod._Node | typings.babelTypes.indexTs37Mod.NumberLiteral | typings.babelTypes.indexTs37Mod.RegexLiteral | typings.babelTypes.indexTs37Mod.RestProperty | typings.babelTypes.indexTs37Mod.SpreadProperty

type NumberLiteral = typings.babelTypes.indexTs37Mod.NumericLiteral_

type RegexLiteral = typings.babelTypes.indexTs37Mod.RegExpLiteral_

type RestProperty = typings.babelTypes.indexTs37Mod.RestElement_

type SpreadProperty = typings.babelTypes.indexTs37Mod.SpreadElement_

type TraversalAncestors = js.Array[typings.babelTypes.anon.Index]

type TraversalHandler[T] = js.ThisFunction3[
/* this */ scala.Unit, 
/* node */ typings.babelTypes.indexTs37Mod.Node, 
/* parent */ typings.babelTypes.indexTs37Mod.TraversalAncestors, 
/* type */ T, 
scala.Unit]
