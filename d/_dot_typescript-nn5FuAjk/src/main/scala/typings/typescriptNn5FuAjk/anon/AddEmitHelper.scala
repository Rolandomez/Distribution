package typings.typescriptNn5FuAjk.anon

import org.scalablytyped.runtime.Instantiable0
import typings.typescriptNn5FuAjk.Array
import typings.typescriptNn5FuAjk.ts.AccessExpression
import typings.typescriptNn5FuAjk.ts.ArrayBindingElement
import typings.typescriptNn5FuAjk.ts.ArrayBindingPattern
import typings.typescriptNn5FuAjk.ts.ArrayLiteralExpression
import typings.typescriptNn5FuAjk.ts.ArrayTypeNode
import typings.typescriptNn5FuAjk.ts.AsExpression
import typings.typescriptNn5FuAjk.ts.AssertClause
import typings.typescriptNn5FuAjk.ts.AssertsKeyword
import typings.typescriptNn5FuAjk.ts.AsteriskToken
import typings.typescriptNn5FuAjk.ts.AwaitExpression
import typings.typescriptNn5FuAjk.ts.AwaitKeyword
import typings.typescriptNn5FuAjk.ts.BinaryExpression
import typings.typescriptNn5FuAjk.ts.BinaryOperator
import typings.typescriptNn5FuAjk.ts.BinaryOperatorToken
import typings.typescriptNn5FuAjk.ts.BindingName
import typings.typescriptNn5FuAjk.ts.Block
import typings.typescriptNn5FuAjk.ts.BooleanLiteral
import typings.typescriptNn5FuAjk.ts.BreakStatement
import typings.typescriptNn5FuAjk.ts.BuildOptions
import typings.typescriptNn5FuAjk.ts.BuilderProgram
import typings.typescriptNn5FuAjk.ts.BuilderProgramHost
import typings.typescriptNn5FuAjk.ts.Bundle
import typings.typescriptNn5FuAjk.ts.CallChain
import typings.typescriptNn5FuAjk.ts.CallExpression
import typings.typescriptNn5FuAjk.ts.CancellationToken
import typings.typescriptNn5FuAjk.ts.CaseBlock
import typings.typescriptNn5FuAjk.ts.CaseClause
import typings.typescriptNn5FuAjk.ts.CaseOrDefaultClause
import typings.typescriptNn5FuAjk.ts.CatchClause
import typings.typescriptNn5FuAjk.ts.Classifier
import typings.typescriptNn5FuAjk.ts.ColonToken
import typings.typescriptNn5FuAjk.ts.CommaListExpression
import typings.typescriptNn5FuAjk.ts.CommentKind
import typings.typescriptNn5FuAjk.ts.CommentRange
import typings.typescriptNn5FuAjk.ts.CompilerOptions
import typings.typescriptNn5FuAjk.ts.ComputedPropertyName
import typings.typescriptNn5FuAjk.ts.ConditionalExpression
import typings.typescriptNn5FuAjk.ts.ConditionalTypeNode
import typings.typescriptNn5FuAjk.ts.ConstructSignatureDeclaration
import typings.typescriptNn5FuAjk.ts.ConstructorTypeNode
import typings.typescriptNn5FuAjk.ts.ContinueStatement
import typings.typescriptNn5FuAjk.ts.CreateProgram
import typings.typescriptNn5FuAjk.ts.CreateProgramOptions
import typings.typescriptNn5FuAjk.ts.CreateSourceFileOptions
import typings.typescriptNn5FuAjk.ts.DebuggerStatement
import typings.typescriptNn5FuAjk.ts.Declaration
import typings.typescriptNn5FuAjk.ts.DeclarationName
import typings.typescriptNn5FuAjk.ts.DeclarationWithTypeParameters
import typings.typescriptNn5FuAjk.ts.DeleteExpression
import typings.typescriptNn5FuAjk.ts.Diagnostic
import typings.typescriptNn5FuAjk.ts.DiagnosticMessageChain
import typings.typescriptNn5FuAjk.ts.DiagnosticReporter
import typings.typescriptNn5FuAjk.ts.DoStatement
import typings.typescriptNn5FuAjk.ts.DotDotDotToken
import typings.typescriptNn5FuAjk.ts.EditorOptions
import typings.typescriptNn5FuAjk.ts.EditorSettings
import typings.typescriptNn5FuAjk.ts.ElementAccessChain
import typings.typescriptNn5FuAjk.ts.ElementAccessExpression
import typings.typescriptNn5FuAjk.ts.EmitAndSemanticDiagnosticsBuilderProgram
import typings.typescriptNn5FuAjk.ts.EmitFlags
import typings.typescriptNn5FuAjk.ts.EmitHelper
import typings.typescriptNn5FuAjk.ts.EmptyStatement
import typings.typescriptNn5FuAjk.ts.EntityName
import typings.typescriptNn5FuAjk.ts.EnumDeclaration
import typings.typescriptNn5FuAjk.ts.EnumMember
import typings.typescriptNn5FuAjk.ts.EqualsGreaterThanToken
import typings.typescriptNn5FuAjk.ts.ErrorCallback
import typings.typescriptNn5FuAjk.ts.ExportAssignment
import typings.typescriptNn5FuAjk.ts.ExportSpecifier
import typings.typescriptNn5FuAjk.ts.Expression
import typings.typescriptNn5FuAjk.ts.ExpressionStatement
import typings.typescriptNn5FuAjk.ts.ExpressionWithTypeArguments
import typings.typescriptNn5FuAjk.ts.ExtendedConfigCacheEntry
import typings.typescriptNn5FuAjk.ts.ExternalModuleReference
import typings.typescriptNn5FuAjk.ts.FalseLiteral
import typings.typescriptNn5FuAjk.ts.FileExtensionInfo
import typings.typescriptNn5FuAjk.ts.FileReference
import typings.typescriptNn5FuAjk.ts.ForInStatement
import typings.typescriptNn5FuAjk.ts.ForInitializer
import typings.typescriptNn5FuAjk.ts.ForOfStatement
import typings.typescriptNn5FuAjk.ts.ForStatement
import typings.typescriptNn5FuAjk.ts.FormatCodeSettings
import typings.typescriptNn5FuAjk.ts.FormatDiagnosticsHost
import typings.typescriptNn5FuAjk.ts.FunctionBody
import typings.typescriptNn5FuAjk.ts.FunctionDeclaration
import typings.typescriptNn5FuAjk.ts.FunctionExpression
import typings.typescriptNn5FuAjk.ts.FunctionLikeDeclaration
import typings.typescriptNn5FuAjk.ts.FunctionTypeNode
import typings.typescriptNn5FuAjk.ts.GeneratedIdentifierFlags
import typings.typescriptNn5FuAjk.ts.GetAccessorDeclaration
import typings.typescriptNn5FuAjk.ts.GetEffectiveTypeRootsHost
import typings.typescriptNn5FuAjk.ts.IScriptSnapshot
import typings.typescriptNn5FuAjk.ts.Identifier
import typings.typescriptNn5FuAjk.ts.IfStatement
import typings.typescriptNn5FuAjk.ts.ImportDeclaration
import typings.typescriptNn5FuAjk.ts.ImportEqualsDeclaration
import typings.typescriptNn5FuAjk.ts.ImportSpecifier
import typings.typescriptNn5FuAjk.ts.ImportTypeAssertionContainer
import typings.typescriptNn5FuAjk.ts.ImportTypeNode
import typings.typescriptNn5FuAjk.ts.IncrementalProgramOptions
import typings.typescriptNn5FuAjk.ts.IndexSignatureDeclaration
import typings.typescriptNn5FuAjk.ts.IndexedAccessTypeNode
import typings.typescriptNn5FuAjk.ts.InferTypeNode
import typings.typescriptNn5FuAjk.ts.InputFiles
import typings.typescriptNn5FuAjk.ts.JSDocAuthorTag
import typings.typescriptNn5FuAjk.ts.JSDocCallbackTag
import typings.typescriptNn5FuAjk.ts.JSDocComment
import typings.typescriptNn5FuAjk.ts.JSDocDeprecatedTag
import typings.typescriptNn5FuAjk.ts.JSDocEnumTag
import typings.typescriptNn5FuAjk.ts.JSDocNamespaceDeclaration
import typings.typescriptNn5FuAjk.ts.JSDocOverrideTag
import typings.typescriptNn5FuAjk.ts.JSDocParameterTag
import typings.typescriptNn5FuAjk.ts.JSDocPrivateTag
import typings.typescriptNn5FuAjk.ts.JSDocPropertyTag
import typings.typescriptNn5FuAjk.ts.JSDocReadonlyTag
import typings.typescriptNn5FuAjk.ts.JSDocReturnTag
import typings.typescriptNn5FuAjk.ts.JSDocSignature
import typings.typescriptNn5FuAjk.ts.JSDocThisTag
import typings.typescriptNn5FuAjk.ts.JSDocTypeExpression
import typings.typescriptNn5FuAjk.ts.JSDocTypeTag
import typings.typescriptNn5FuAjk.ts.JSDocTypedefTag
import typings.typescriptNn5FuAjk.ts.JSDocUnknownTag
import typings.typescriptNn5FuAjk.ts.JsonSourceFile
import typings.typescriptNn5FuAjk.ts.JsxAttribute
import typings.typescriptNn5FuAjk.ts.JsxChild
import typings.typescriptNn5FuAjk.ts.JsxClosingElement
import typings.typescriptNn5FuAjk.ts.JsxClosingFragment
import typings.typescriptNn5FuAjk.ts.JsxElement
import typings.typescriptNn5FuAjk.ts.JsxExpression
import typings.typescriptNn5FuAjk.ts.JsxFragment
import typings.typescriptNn5FuAjk.ts.JsxOpeningElement
import typings.typescriptNn5FuAjk.ts.JsxOpeningFragment
import typings.typescriptNn5FuAjk.ts.JsxSelfClosingElement
import typings.typescriptNn5FuAjk.ts.JsxSpreadAttribute
import typings.typescriptNn5FuAjk.ts.JsxTagNameExpression
import typings.typescriptNn5FuAjk.ts.KeywordTypeNode
import typings.typescriptNn5FuAjk.ts.KeywordTypeSyntaxKind
import typings.typescriptNn5FuAjk.ts.LabeledStatement
import typings.typescriptNn5FuAjk.ts.LanguageService
import typings.typescriptNn5FuAjk.ts.LanguageServiceHost
import typings.typescriptNn5FuAjk.ts.LanguageServiceMode
import typings.typescriptNn5FuAjk.ts.LanguageVariant
import typings.typescriptNn5FuAjk.ts.LineAndCharacter
import typings.typescriptNn5FuAjk.ts.LiteralExpression
import typings.typescriptNn5FuAjk.ts.LiteralTypeNode
import typings.typescriptNn5FuAjk.ts.Map
import typings.typescriptNn5FuAjk.ts.MappedTypeNode
import typings.typescriptNn5FuAjk.ts.MemberName
import typings.typescriptNn5FuAjk.ts.MetaProperty
import typings.typescriptNn5FuAjk.ts.MethodDeclaration
import typings.typescriptNn5FuAjk.ts.MethodSignature
import typings.typescriptNn5FuAjk.ts.MinusToken
import typings.typescriptNn5FuAjk.ts.ModifierFlags
import typings.typescriptNn5FuAjk.ts.ModuleBody
import typings.typescriptNn5FuAjk.ts.ModuleDeclaration
import typings.typescriptNn5FuAjk.ts.ModuleKind.CommonJS
import typings.typescriptNn5FuAjk.ts.ModuleKind.ESNext
import typings.typescriptNn5FuAjk.ts.ModuleName
import typings.typescriptNn5FuAjk.ts.ModuleReference
import typings.typescriptNn5FuAjk.ts.ModuleResolutionHost
import typings.typescriptNn5FuAjk.ts.NamedExportBindings
import typings.typescriptNn5FuAjk.ts.NamedImportBindings
import typings.typescriptNn5FuAjk.ts.NamespaceExport
import typings.typescriptNn5FuAjk.ts.NamespaceExportDeclaration
import typings.typescriptNn5FuAjk.ts.NamespaceImport
import typings.typescriptNn5FuAjk.ts.NewExpression
import typings.typescriptNn5FuAjk.ts.NoSubstitutionTemplateLiteral
import typings.typescriptNn5FuAjk.ts.Node
import typings.typescriptNn5FuAjk.ts.NodeArray
import typings.typescriptNn5FuAjk.ts.NodeFactory
import typings.typescriptNn5FuAjk.ts.NodeFlags
import typings.typescriptNn5FuAjk.ts.NodesVisitor
import typings.typescriptNn5FuAjk.ts.NonNullChain
import typings.typescriptNn5FuAjk.ts.NonNullExpression
import typings.typescriptNn5FuAjk.ts.NonRelativeModuleNameResolutionCache
import typings.typescriptNn5FuAjk.ts.NotEmittedStatement
import typings.typescriptNn5FuAjk.ts.NullLiteral
import typings.typescriptNn5FuAjk.ts.NumericLiteral
import typings.typescriptNn5FuAjk.ts.ObjectLiteralElementLike
import typings.typescriptNn5FuAjk.ts.ObjectLiteralExpression
import typings.typescriptNn5FuAjk.ts.OptionalTypeNode
import typings.typescriptNn5FuAjk.ts.PackageJsonInfoCache
import typings.typescriptNn5FuAjk.ts.ParenthesizedExpression
import typings.typescriptNn5FuAjk.ts.ParenthesizedTypeNode
import typings.typescriptNn5FuAjk.ts.ParseConfigFileHost
import typings.typescriptNn5FuAjk.ts.ParseConfigHost
import typings.typescriptNn5FuAjk.ts.ParsedCommandLine
import typings.typescriptNn5FuAjk.ts.PartiallyEmittedExpression
import typings.typescriptNn5FuAjk.ts.Path
import typings.typescriptNn5FuAjk.ts.PlusToken
import typings.typescriptNn5FuAjk.ts.PostfixUnaryExpression
import typings.typescriptNn5FuAjk.ts.PostfixUnaryOperator
import typings.typescriptNn5FuAjk.ts.PreProcessedFileInfo
import typings.typescriptNn5FuAjk.ts.PrefixUnaryExpression
import typings.typescriptNn5FuAjk.ts.PrefixUnaryOperator
import typings.typescriptNn5FuAjk.ts.PrintHandlers
import typings.typescriptNn5FuAjk.ts.Printer
import typings.typescriptNn5FuAjk.ts.PrinterOptions
import typings.typescriptNn5FuAjk.ts.PrivateIdentifier
import typings.typescriptNn5FuAjk.ts.Program
import typings.typescriptNn5FuAjk.ts.PropertyAccessChain
import typings.typescriptNn5FuAjk.ts.PropertyAccessExpression
import typings.typescriptNn5FuAjk.ts.PropertyAssignment
import typings.typescriptNn5FuAjk.ts.PropertyName
import typings.typescriptNn5FuAjk.ts.PropertyNameLiteral
import typings.typescriptNn5FuAjk.ts.PseudoBigInt
import typings.typescriptNn5FuAjk.ts.Push
import typings.typescriptNn5FuAjk.ts.QualifiedName
import typings.typescriptNn5FuAjk.ts.QuestionDotToken
import typings.typescriptNn5FuAjk.ts.QuestionToken
import typings.typescriptNn5FuAjk.ts.ReadBuildProgramHost
import typings.typescriptNn5FuAjk.ts.ReadonlyKeyword
import typings.typescriptNn5FuAjk.ts.ResolveProjectReferencePathHost
import typings.typescriptNn5FuAjk.ts.ResolvedConfigFileName
import typings.typescriptNn5FuAjk.ts.ResolvedModuleWithFailedLookupLocations
import typings.typescriptNn5FuAjk.ts.ResolvedProjectReference
import typings.typescriptNn5FuAjk.ts.ResolvedTypeReferenceDirectiveWithFailedLookupLocations
import typings.typescriptNn5FuAjk.ts.RestTypeNode
import typings.typescriptNn5FuAjk.ts.ReturnStatement
import typings.typescriptNn5FuAjk.ts.Scanner
import typings.typescriptNn5FuAjk.ts.ScriptKind
import typings.typescriptNn5FuAjk.ts.ScriptTarget
import typings.typescriptNn5FuAjk.ts.SemanticDiagnosticsBuilderProgram
import typings.typescriptNn5FuAjk.ts.SemicolonClassElement
import typings.typescriptNn5FuAjk.ts.SignatureDeclaration
import typings.typescriptNn5FuAjk.ts.SolutionBuilder
import typings.typescriptNn5FuAjk.ts.SolutionBuilderHost
import typings.typescriptNn5FuAjk.ts.SolutionBuilderWithWatchHost
import typings.typescriptNn5FuAjk.ts.SortedReadonlyArray
import typings.typescriptNn5FuAjk.ts.SourceFile
import typings.typescriptNn5FuAjk.ts.SourceFileLike
import typings.typescriptNn5FuAjk.ts.SourceMapRange
import typings.typescriptNn5FuAjk.ts.SpreadAssignment
import typings.typescriptNn5FuAjk.ts.SpreadElement
import typings.typescriptNn5FuAjk.ts.Statement
import typings.typescriptNn5FuAjk.ts.StringLiteral
import typings.typescriptNn5FuAjk.ts.SuperExpression
import typings.typescriptNn5FuAjk.ts.SwitchStatement
import typings.typescriptNn5FuAjk.ts.Symbol
import typings.typescriptNn5FuAjk.ts.SymbolDisplayPart
import typings.typescriptNn5FuAjk.ts.SyntaxKind
import typings.typescriptNn5FuAjk.ts.SyntaxKind.ExtendsKeyword
import typings.typescriptNn5FuAjk.ts.SyntaxKind.ImplementsKeyword
import typings.typescriptNn5FuAjk.ts.SyntaxKind.ImportKeyword
import typings.typescriptNn5FuAjk.ts.SyntaxKind.KeyOfKeyword
import typings.typescriptNn5FuAjk.ts.SyntaxKind.MultiLineCommentTrivia
import typings.typescriptNn5FuAjk.ts.SyntaxKind.NewKeyword
import typings.typescriptNn5FuAjk.ts.SyntaxKind.SingleLineCommentTrivia
import typings.typescriptNn5FuAjk.ts.SyntaxKind.UniqueKeyword
import typings.typescriptNn5FuAjk.ts.SynthesizedComment
import typings.typescriptNn5FuAjk.ts.System
import typings.typescriptNn5FuAjk.ts.TaggedTemplateExpression
import typings.typescriptNn5FuAjk.ts.TemplateExpression
import typings.typescriptNn5FuAjk.ts.TemplateHead
import typings.typescriptNn5FuAjk.ts.TemplateLiteral
import typings.typescriptNn5FuAjk.ts.TemplateSpan
import typings.typescriptNn5FuAjk.ts.TemplateTail
import typings.typescriptNn5FuAjk.ts.TextRange
import typings.typescriptNn5FuAjk.ts.TextSpan
import typings.typescriptNn5FuAjk.ts.ThisTypeNode
import typings.typescriptNn5FuAjk.ts.ThrowStatement
import typings.typescriptNn5FuAjk.ts.TokenFlags
import typings.typescriptNn5FuAjk.ts.TransformationContext
import typings.typescriptNn5FuAjk.ts.TransformationResult
import typings.typescriptNn5FuAjk.ts.TransformerFactory
import typings.typescriptNn5FuAjk.ts.TranspileOptions
import typings.typescriptNn5FuAjk.ts.TranspileOutput
import typings.typescriptNn5FuAjk.ts.TrueLiteral
import typings.typescriptNn5FuAjk.ts.TryStatement
import typings.typescriptNn5FuAjk.ts.TsConfigSourceFile
import typings.typescriptNn5FuAjk.ts.TypeAliasDeclaration
import typings.typescriptNn5FuAjk.ts.TypeAssertion
import typings.typescriptNn5FuAjk.ts.TypeLiteralNode
import typings.typescriptNn5FuAjk.ts.TypeNode
import typings.typescriptNn5FuAjk.ts.TypeOfExpression
import typings.typescriptNn5FuAjk.ts.TypeOperatorNode
import typings.typescriptNn5FuAjk.ts.TypePredicateNode
import typings.typescriptNn5FuAjk.ts.TypeQueryNode
import typings.typescriptNn5FuAjk.ts.TypeReferenceNode
import typings.typescriptNn5FuAjk.ts.UnparsedSource
import typings.typescriptNn5FuAjk.ts.VariableDeclaration
import typings.typescriptNn5FuAjk.ts.VariableDeclarationList
import typings.typescriptNn5FuAjk.ts.Visitor
import typings.typescriptNn5FuAjk.ts.VoidExpression
import typings.typescriptNn5FuAjk.ts.WatchCompilerHostOfConfigFile
import typings.typescriptNn5FuAjk.ts.WatchCompilerHostOfFilesAndCompilerOptions
import typings.typescriptNn5FuAjk.ts.WatchOfConfigFile
import typings.typescriptNn5FuAjk.ts.WatchOfFilesAndCompilerOptions
import typings.typescriptNn5FuAjk.ts.WatchOptions
import typings.typescriptNn5FuAjk.ts.WatchStatusReporter
import typings.typescriptNn5FuAjk.ts.WhileStatement
import typings.typescriptNn5FuAjk.ts.WithStatement
import typings.typescriptNn5FuAjk.ts.YieldExpression
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrowFunction
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BigIntLiteral
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingElement
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallSignatureDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ClassDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ClassElement
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ClassExpression
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerHost
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConciseBody
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateProgram_
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Decorator
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DefaultClause
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DocumentRegistry
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExclamationToken
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.HeritageClause
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportClause
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InterfaceDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IntersectionTypeNode
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDoc
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAugmentsTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocClassTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocImplementsTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyLikeTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocProtectedTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPublicTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTemplateTag
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeLiteral
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttributeLike
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttributes
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxText
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Modifier
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModifierSyntaxKind
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModifierToken
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBlock
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionCache
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExports
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImports
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedTupleMember
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectBindingPattern
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.OmittedExpression
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParameterDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrimaryExpression
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ProjectReference
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertySignature
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.RegularExpressionLiteral
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReportEmitErrorSummary
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SetAccessorDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ShorthandPropertyAssignment
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceMapSource
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateMiddle
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextChangeRange
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisExpression
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Token
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TupleTypeNode
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeElement
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeParameterDeclaration
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceDirectiveResolutionCache
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnionTypeNode
import typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableStatement
import typings.typescriptNn5FuAjk.typescriptNn5FuAjkBooleans.`false`
import typings.typescriptNn5FuAjk.typescriptNn5FuAjkStrings.dts
import typings.typescriptNn5FuAjk.typescriptNn5FuAjkStrings.js_
import typings.typescriptNn5FuAjk.typescriptNn5FuAjkStrings.quit
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait AddEmitHelper extends StObject {
  
  var OperationCanceledException: Instantiable0[typings.typescriptNn5FuAjk.ts.OperationCanceledException] & Instantiable0[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.OperationCanceledException] = js.native
  
  val ScriptSnapshot: TypeofScriptSnapshot & TypeofScriptSnapshotFromString = js.native
  
  /**
    * Adds an EmitHelper to a node.
    */
  def addEmitHelper[T /* <: Node */](node: T, helper: EmitHelper): T = js.native
  /**
    * Adds an EmitHelper to a node.
    */
  def addEmitHelper[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, helper: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitHelper): T = js.native
  
  /**
    * Add EmitHelpers to a node.
    */
  def addEmitHelpers[T /* <: Node */](node: T): T = js.native
  def addEmitHelpers[T /* <: Node */](node: T, helpers: Array[EmitHelper]): T = js.native
  /**
    * Add EmitHelpers to a node.
    */
  @JSName("addEmitHelpers")
  def addEmitHelpers_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  @JSName("addEmitHelpers")
  def addEmitHelpers_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, helpers: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitHelper]): T = js.native
  
  def addSyntheticLeadingComment[T /* <: Node */](node: T, kind: MultiLineCommentTrivia, text: String): T = js.native
  def addSyntheticLeadingComment[T /* <: Node */](node: T, kind: MultiLineCommentTrivia, text: String, hasTrailingNewLine: Boolean): T = js.native
  def addSyntheticLeadingComment[T /* <: Node */](node: T, kind: SingleLineCommentTrivia, text: String): T = js.native
  def addSyntheticLeadingComment[T /* <: Node */](node: T, kind: SingleLineCommentTrivia, text: String, hasTrailingNewLine: Boolean): T = js.native
  def addSyntheticLeadingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.MultiLineCommentTrivia,
    text: String
  ): T = js.native
  def addSyntheticLeadingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.MultiLineCommentTrivia,
    text: String,
    hasTrailingNewLine: Boolean
  ): T = js.native
  def addSyntheticLeadingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.SingleLineCommentTrivia,
    text: String
  ): T = js.native
  def addSyntheticLeadingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.SingleLineCommentTrivia,
    text: String,
    hasTrailingNewLine: Boolean
  ): T = js.native
  
  def addSyntheticTrailingComment[T /* <: Node */](node: T, kind: MultiLineCommentTrivia, text: String): T = js.native
  def addSyntheticTrailingComment[T /* <: Node */](node: T, kind: MultiLineCommentTrivia, text: String, hasTrailingNewLine: Boolean): T = js.native
  def addSyntheticTrailingComment[T /* <: Node */](node: T, kind: SingleLineCommentTrivia, text: String): T = js.native
  def addSyntheticTrailingComment[T /* <: Node */](node: T, kind: SingleLineCommentTrivia, text: String, hasTrailingNewLine: Boolean): T = js.native
  def addSyntheticTrailingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.MultiLineCommentTrivia,
    text: String
  ): T = js.native
  def addSyntheticTrailingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.MultiLineCommentTrivia,
    text: String,
    hasTrailingNewLine: Boolean
  ): T = js.native
  def addSyntheticTrailingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.SingleLineCommentTrivia,
    text: String
  ): T = js.native
  def addSyntheticTrailingComment[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.SingleLineCommentTrivia,
    text: String,
    hasTrailingNewLine: Boolean
  ): T = js.native
  
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: ResolvedProjectReference
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: NonRelativeModuleNameResolutionCache
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: NonRelativeModuleNameResolutionCache,
    redirectedReference: ResolvedProjectReference
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonRelativeModuleNameResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def classicNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonRelativeModuleNameResolutionCache,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  
  /**
    * Called to merge all the changes that occurred across several versions of a script snapshot
    * into a single change.  i.e. if a user keeps making successive edits to a script we will
    * have a text change from V1 to V2, V2 to V3, ..., Vn.
    *
    * This function will then merge those changes into a single change range valid between V1 and
    * Vn.
    */
  def collapseTextChangeRangesAcrossMultipleVersions(changes: Array[TextChangeRange]): TextChangeRange = js.native
  /**
    * Called to merge all the changes that occurred across several versions of a script snapshot
    * into a single change.  i.e. if a user keeps making successive edits to a script we will
    * have a text change from V1 to V2, V2 to V3, ..., Vn.
    *
    * This function will then merge those changes into a single change range valid between V1 and
    * Vn.
    */
  @JSName("collapseTextChangeRangesAcrossMultipleVersions")
  def collapseTextChangeRangesAcrossMultipleVersions_TextChangeRange(changes: Array[typings.typescriptNn5FuAjk.ts.TextChangeRange]): typings.typescriptNn5FuAjk.ts.TextChangeRange = js.native
  
  def convertCompilerOptionsFromJson(jsonOptions: Any, basePath: String): ErrorsOptions = js.native
  def convertCompilerOptionsFromJson(jsonOptions: Any, basePath: String, configFileName: String): ErrorsOptions = js.native
  @JSName("convertCompilerOptionsFromJson")
  def convertCompilerOptionsFromJson_Errors(jsonOptions: Any, basePath: String): Errors = js.native
  @JSName("convertCompilerOptionsFromJson")
  def convertCompilerOptionsFromJson_Errors(jsonOptions: Any, basePath: String, configFileName: String): Errors = js.native
  
  def convertToObject(sourceFile: JsonSourceFile, errors: Push[Diagnostic]): Any = js.native
  def convertToObject(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsonSourceFile,
    errors: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Push[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): Any = js.native
  
  def convertTypeAcquisitionFromJson(jsonOptions: Any, basePath: String): Options = js.native
  def convertTypeAcquisitionFromJson(jsonOptions: Any, basePath: String, configFileName: String): Options = js.native
  @JSName("convertTypeAcquisitionFromJson")
  def convertTypeAcquisitionFromJson_ErrorsArray(jsonOptions: Any, basePath: String): ErrorsArray = js.native
  @JSName("convertTypeAcquisitionFromJson")
  def convertTypeAcquisitionFromJson_ErrorsArray(jsonOptions: Any, basePath: String, configFileName: String): ErrorsArray = js.native
  
  def couldStartTrivia(text: String, pos: Double): Boolean = js.native
  
  /**
    * Creates a builder thats just abstraction over program and can be used with watch
    */
  def createAbstractBuilder(newProgram: Program, host: BuilderProgramHost): BuilderProgram = js.native
  def createAbstractBuilder(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): BuilderProgram = js.native
  def createAbstractBuilder(newProgram: Program, host: BuilderProgramHost, oldProgram: BuilderProgram): BuilderProgram = js.native
  def createAbstractBuilder(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: BuilderProgram,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): BuilderProgram = js.native
  /**
    * Creates a builder thats just abstraction over program and can be used with watch
    */
  def createAbstractBuilder(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram = js.native
  def createAbstractBuilder(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram = js.native
  def createAbstractBuilder(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram = js.native
  def createAbstractBuilder(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram = js.native
  def createAbstractBuilder(
    rootNames: js.UndefOr[Array[String]],
    options: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions],
    host: js.UndefOr[CompilerHost],
    oldProgram: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram],
    configFileParsingDiagnostics: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]],
    projectReferences: js.UndefOr[Array[ProjectReference]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram = js.native
  @JSName("createAbstractBuilder")
  def createAbstractBuilder_BuilderProgram(
    rootNames: js.UndefOr[Array[String]],
    options: js.UndefOr[CompilerOptions],
    host: js.UndefOr[typings.typescriptNn5FuAjk.ts.CompilerHost],
    oldProgram: js.UndefOr[BuilderProgram],
    configFileParsingDiagnostics: js.UndefOr[Array[Diagnostic]],
    projectReferences: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.ProjectReference]]
  ): BuilderProgram = js.native
  
  /** @deprecated Use `factory.createAdd` or the factory supplied by your transformation context instead. */
  def createAdd(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createAdd` or the factory supplied by your transformation context instead. */
  def createAdd(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createArrayBindingPattern` or the factory supplied by your transformation context instead. */
  def createArrayBindingPattern(elements: Array[ArrayBindingElement]): ArrayBindingPattern = js.native
  /** @deprecated Use `factory.createArrayBindingPattern` or the factory supplied by your transformation context instead. */
  @JSName("createArrayBindingPattern")
  def createArrayBindingPattern_ArrayBindingPattern(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayBindingElement]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayBindingPattern = js.native
  
  /** @deprecated Use `factory.createArrayLiteralExpression` or the factory supplied by your transformation context instead. */
  def createArrayLiteral(): ArrayLiteralExpression = js.native
  def createArrayLiteral(elements: Unit, multiLine: Boolean): ArrayLiteralExpression = js.native
  def createArrayLiteral(elements: Array[Expression]): ArrayLiteralExpression = js.native
  def createArrayLiteral(elements: Array[Expression], multiLine: Boolean): ArrayLiteralExpression = js.native
  /** @deprecated Use `factory.createArrayLiteralExpression` or the factory supplied by your transformation context instead. */
  @JSName("createArrayLiteral")
  def createArrayLiteral_ArrayLiteralExpression(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayLiteralExpression = js.native
  @JSName("createArrayLiteral")
  def createArrayLiteral_ArrayLiteralExpression(elements: Unit, multiLine: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayLiteralExpression = js.native
  @JSName("createArrayLiteral")
  def createArrayLiteral_ArrayLiteralExpression(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayLiteralExpression = js.native
  @JSName("createArrayLiteral")
  def createArrayLiteral_ArrayLiteralExpression(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression], multiLine: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayLiteralExpression = js.native
  
  /** @deprecated Use `factory.createArrayTypeNode` or the factory supplied by your transformation context instead. */
  def createArrayTypeNode(elementType: TypeNode): ArrayTypeNode = js.native
  /** @deprecated Use `factory.createArrayTypeNode` or the factory supplied by your transformation context instead. */
  def createArrayTypeNode(elementType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayTypeNode = js.native
  
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  /** @deprecated Use `factory.createArrowFunction` or the factory supplied by your transformation context instead. */
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  /** @deprecated Use `factory.createArrowFunction` or the factory supplied by your transformation context instead. */
  def createArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  /** @deprecated Use `factory.createArrowFunction` or the factory supplied by your transformation context instead. */
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  /** @deprecated Use `factory.createArrowFunction` or the factory supplied by your transformation context instead. */
  def createArrowFunction(
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  @JSName("createArrowFunction")
  def createArrowFunction_ArrowFunction(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  
  /** @deprecated Use `factory.createAsExpression` or the factory supplied by your transformation context instead. */
  def createAsExpression(expression: Expression, `type`: TypeNode): AsExpression = js.native
  /** @deprecated Use `factory.createAsExpression` or the factory supplied by your transformation context instead. */
  def createAsExpression(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsExpression = js.native
  
  /** @deprecated Use `factory.createAssignment` or the factory supplied by your transformation context instead. */
  def createAssignment(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createAssignment` or the factory supplied by your transformation context instead. */
  def createAssignment(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createAwaitExpression` or the factory supplied by your transformation context instead. */
  def createAwait(expression: Expression): AwaitExpression = js.native
  /** @deprecated Use `factory.createAwaitExpression` or the factory supplied by your transformation context instead. */
  def createAwait(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AwaitExpression = js.native
  
  /** @deprecated Use `factory.createBigIntLiteral` or the factory supplied by your transformation context instead. */
  def createBigIntLiteral(value: String): BigIntLiteral = js.native
  def createBigIntLiteral(value: PseudoBigInt): typings.typescriptNn5FuAjk.ts.BigIntLiteral = js.native
  def createBigIntLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PseudoBigInt): BigIntLiteral = js.native
  /** @deprecated Use `factory.createBigIntLiteral` or the factory supplied by your transformation context instead. */
  @JSName("createBigIntLiteral")
  def createBigIntLiteral_BigIntLiteral(value: String): typings.typescriptNn5FuAjk.ts.BigIntLiteral = js.native
  
  def createBinary(left: Expression, operator: BinaryOperatorToken, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createBinaryExpression` or the factory supplied by your transformation context instead. */
  def createBinary(left: Expression, operator: BinaryOperator, right: Expression): BinaryExpression = js.native
  def createBinary(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryOperatorToken,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  /** @deprecated Use `factory.createBinaryExpression` or the factory supplied by your transformation context instead. */
  def createBinary(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryOperator,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  def createBindingElement(dotDotDotToken: Unit, propertyName: String, name: String): BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: String, name: String, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: String,
    name: String,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: String, name: BindingName): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: String, name: BindingName, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: String,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: String,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: Unit, name: String): BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: Unit, name: String, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: String,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: Unit, name: BindingName): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: Unit, name: BindingName, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: PropertyName, name: String): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: PropertyName, name: String, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: PropertyName, name: BindingName): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: Unit, propertyName: PropertyName, name: BindingName, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: String
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: String,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: Unit,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  /** @deprecated Use `factory.createBindingElement` or the factory supplied by your transformation context instead. */
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: String, name: String): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: String, name: String, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: String, name: BindingName): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: String, name: BindingName, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: Unit, name: String): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: Unit, name: String, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: Unit, name: BindingName): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: Unit, name: BindingName, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: PropertyName, name: String): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: PropertyName, name: String, initializer: Expression): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(dotDotDotToken: DotDotDotToken, propertyName: PropertyName, name: BindingName): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: DotDotDotToken,
    propertyName: PropertyName,
    name: BindingName,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  /** @deprecated Use `factory.createBindingElement` or the factory supplied by your transformation context instead. */
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: String,
    name: String
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: String,
    name: String,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: String,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: String,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: Unit,
    name: String
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: Unit,
    name: String,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: String
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: String,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def createBindingElement(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  @JSName("createBindingElement")
  def createBindingElement_BindingElement(dotDotDotToken: Unit, propertyName: String, name: String): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  @JSName("createBindingElement")
  def createBindingElement_BindingElement(dotDotDotToken: Unit, propertyName: Unit, name: String): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  
  /** @deprecated Use `factory.createBlock` or the factory supplied by your transformation context instead. */
  def createBlock(statements: Array[Statement]): Block = js.native
  def createBlock(statements: Array[Statement], multiLine: Boolean): Block = js.native
  /** @deprecated Use `factory.createBlock` or the factory supplied by your transformation context instead. */
  @JSName("createBlock")
  def createBlock_Block(statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block = js.native
  @JSName("createBlock")
  def createBlock_Block(statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement], multiLine: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block = js.native
  
  /** @deprecated Use `factory.createBreakStatement` or the factory supplied by your transformation context instead. */
  def createBreak(): BreakStatement = js.native
  def createBreak(label: String): BreakStatement = js.native
  def createBreak(label: Identifier): BreakStatement = js.native
  def createBreak(label: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement = js.native
  /** @deprecated Use `factory.createBreakStatement` or the factory supplied by your transformation context instead. */
  @JSName("createBreak")
  def createBreak_BreakStatement(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement = js.native
  @JSName("createBreak")
  def createBreak_BreakStatement(label: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement = js.native
  
  /**
    * Create a function that reports watch status by writing to the system and handles the formating of the diagnostic
    */
  def createBuilderStatusReporter(system: System): DiagnosticReporter = js.native
  def createBuilderStatusReporter(system: System, pretty: Boolean): DiagnosticReporter = js.native
  /**
    * Create a function that reports watch status by writing to the system and handles the formating of the diagnostic
    */
  def createBuilderStatusReporter(system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter = js.native
  def createBuilderStatusReporter(system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System, pretty: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter = js.native
  
  /** @deprecated Use `factory.createBundle` or the factory supplied by your transformation context instead. */
  def createBundle(sourceFiles: Array[SourceFile]): Bundle = js.native
  def createBundle(sourceFiles: Array[SourceFile], prepends: Array[UnparsedSource | InputFiles]): Bundle = js.native
  /** @deprecated Use `factory.createBundle` or the factory supplied by your transformation context instead. */
  @JSName("createBundle")
  def createBundle_Bundle(sourceFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Bundle = js.native
  @JSName("createBundle")
  def createBundle_Bundle(
    sourceFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile],
    prepends: Array[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Bundle = js.native
  
  /** @deprecated Use `factory.createCallExpression` or the factory supplied by your transformation context instead. */
  def createCall(expression: Expression): CallExpression = js.native
  def createCall(expression: Expression, typeArguments: Unit, argumentsArray: Array[Expression]): CallExpression = js.native
  def createCall(expression: Expression, typeArguments: Array[TypeNode]): CallExpression = js.native
  def createCall(expression: Expression, typeArguments: Array[TypeNode], argumentsArray: Array[Expression]): CallExpression = js.native
  /** @deprecated Use `factory.createCallExpression` or the factory supplied by your transformation context instead. */
  def createCall(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  def createCall(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  def createCall(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  def createCall(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  
  /** @deprecated Use `factory.createCallChain` or the factory supplied by your transformation context instead. */
  def createCallChain(expression: Expression): CallChain = js.native
  def createCallChain(
    expression: Expression,
    questionDotToken: Unit,
    typeArguments: Unit,
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  def createCallChain(expression: Expression, questionDotToken: Unit, typeArguments: Array[TypeNode]): CallChain = js.native
  def createCallChain(
    expression: Expression,
    questionDotToken: Unit,
    typeArguments: Array[TypeNode],
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  def createCallChain(expression: Expression, questionDotToken: QuestionDotToken): CallChain = js.native
  def createCallChain(
    expression: Expression,
    questionDotToken: QuestionDotToken,
    typeArguments: Unit,
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  def createCallChain(expression: Expression, questionDotToken: QuestionDotToken, typeArguments: Array[TypeNode]): CallChain = js.native
  def createCallChain(
    expression: Expression,
    questionDotToken: QuestionDotToken,
    typeArguments: Array[TypeNode],
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  /** @deprecated Use `factory.createCallChain` or the factory supplied by your transformation context instead. */
  def createCallChain(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def createCallChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  
  def createCallSignature(typeParameters: Unit, parameters: Array[ParameterDeclaration]): CallSignatureDeclaration = js.native
  def createCallSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  def createCallSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): CallSignatureDeclaration = js.native
  /** @deprecated Use `factory.createCallSignature` or the factory supplied by your transformation context instead. */
  def createCallSignature(typeParameters: Array[TypeParameterDeclaration], parameters: Array[ParameterDeclaration]): CallSignatureDeclaration = js.native
  def createCallSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  def createCallSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): CallSignatureDeclaration = js.native
  @JSName("createCallSignature")
  def createCallSignature_CallSignatureDeclaration(typeParameters: Unit, parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  /** @deprecated Use `factory.createCallSignature` or the factory supplied by your transformation context instead. */
  @JSName("createCallSignature")
  def createCallSignature_CallSignatureDeclaration(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  
  /** @deprecated Use `factory.createCaseBlock` or the factory supplied by your transformation context instead. */
  def createCaseBlock(clauses: Array[CaseOrDefaultClause]): CaseBlock = js.native
  /** @deprecated Use `factory.createCaseBlock` or the factory supplied by your transformation context instead. */
  @JSName("createCaseBlock")
  def createCaseBlock_CaseBlock(clauses: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseOrDefaultClause]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseBlock = js.native
  
  /** @deprecated Use `factory.createCaseClause` or the factory supplied by your transformation context instead. */
  def createCaseClause(expression: Expression, statements: Array[Statement]): CaseClause = js.native
  /** @deprecated Use `factory.createCaseClause` or the factory supplied by your transformation context instead. */
  def createCaseClause(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseClause = js.native
  
  /** @deprecated Use `factory.createCatchClause` or the factory supplied by your transformation context instead. */
  def createCatchClause(variableDeclaration: String, block: Block): CatchClause = js.native
  /** @deprecated Use `factory.createCatchClause` or the factory supplied by your transformation context instead. */
  def createCatchClause(variableDeclaration: String, block: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause = js.native
  def createCatchClause(variableDeclaration: Unit, block: Block): CatchClause = js.native
  def createCatchClause(variableDeclaration: Unit, block: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause = js.native
  def createCatchClause(variableDeclaration: BindingName, block: Block): CatchClause = js.native
  def createCatchClause(variableDeclaration: VariableDeclaration, block: Block): CatchClause = js.native
  def createCatchClause(
    variableDeclaration: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    block: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause = js.native
  def createCatchClause(
    variableDeclaration: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    block: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause = js.native
  
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  /** @deprecated Use `factory.createClassDeclaration` or the factory supplied by your transformation context instead. */
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def createClassDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  /** @deprecated Use `factory.createClassDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  @JSName("createClassDeclaration")
  def createClassDeclaration_ClassDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  
  def createClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  /** @deprecated Use `factory.createClassExpression` or the factory supplied by your transformation context instead. */
  def createClassExpression(
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def createClassExpression(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  /** @deprecated Use `factory.createClassExpression` or the factory supplied by your transformation context instead. */
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  @JSName("createClassExpression")
  def createClassExpression_ClassExpression(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  
  /** The classifier is used for syntactic highlighting in editors via the TSServer */
  def createClassifier(): Classifier = js.native
  /** The classifier is used for syntactic highlighting in editors via the TSServer */
  @JSName("createClassifier")
  def createClassifier_Classifier(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Classifier = js.native
  
  /** @deprecated Use `factory.createComma` or the factory supplied by your transformation context instead. */
  def createComma(left: Expression, right: Expression): Expression = js.native
  /** @deprecated Use `factory.createComma` or the factory supplied by your transformation context instead. */
  def createComma(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression = js.native
  
  /** @deprecated Use `factory.createCommaListExpression` or the factory supplied by your transformation context instead. */
  def createCommaList(elements: Array[Expression]): CommaListExpression = js.native
  /** @deprecated Use `factory.createCommaListExpression` or the factory supplied by your transformation context instead. */
  @JSName("createCommaList")
  def createCommaList_CommaListExpression(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommaListExpression = js.native
  
  def createCompilerHost(options: CompilerOptions): typings.typescriptNn5FuAjk.ts.CompilerHost = js.native
  def createCompilerHost(options: CompilerOptions, setParentNodes: Boolean): typings.typescriptNn5FuAjk.ts.CompilerHost = js.native
  def createCompilerHost(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions): CompilerHost = js.native
  def createCompilerHost(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions, setParentNodes: Boolean): CompilerHost = js.native
  
  /** @deprecated Use `factory.createComputedPropertyName` or the factory supplied by your transformation context instead. */
  def createComputedPropertyName(expression: Expression): ComputedPropertyName = js.native
  /** @deprecated Use `factory.createComputedPropertyName` or the factory supplied by your transformation context instead. */
  def createComputedPropertyName(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ComputedPropertyName = js.native
  
  /** @deprecated Use `factory.createConditional` or the factory supplied by your transformation context instead. */
  def createConditional(
    condition: Expression,
    questionToken: QuestionToken,
    whenTrue: Expression,
    colonToken: ColonToken,
    whenFalse: Expression
  ): ConditionalExpression = js.native
  /** @deprecated Use `factory.createConditional` or the factory supplied by your transformation context instead. */
  def createConditional(condition: Expression, whenTrue: Expression, whenFalse: Expression): ConditionalExpression = js.native
  /** @deprecated Use `factory.createConditional` or the factory supplied by your transformation context instead. */
  def createConditional(
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    whenTrue: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    colonToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ColonToken,
    whenFalse: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalExpression = js.native
  /** @deprecated Use `factory.createConditional` or the factory supplied by your transformation context instead. */
  def createConditional(
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    whenTrue: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    whenFalse: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalExpression = js.native
  
  /** @deprecated Use `factory.createConditionalTypeNode` or the factory supplied by your transformation context instead. */
  def createConditionalTypeNode(checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode): ConditionalTypeNode = js.native
  /** @deprecated Use `factory.createConditionalTypeNode` or the factory supplied by your transformation context instead. */
  def createConditionalTypeNode(
    checkType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    extendsType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    trueType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    falseType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalTypeNode = js.native
  
  def createConstructSignature(typeParameters: Unit, parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]): ConstructSignatureDeclaration = js.native
  def createConstructSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructSignatureDeclaration = js.native
  def createConstructSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  /** @deprecated Use `factory.createConstructSignature` or the factory supplied by your transformation context instead. */
  def createConstructSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): ConstructSignatureDeclaration = js.native
  def createConstructSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructSignatureDeclaration = js.native
  def createConstructSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  @JSName("createConstructSignature")
  def createConstructSignature_ConstructSignatureDeclaration(typeParameters: Unit, parameters: Array[ParameterDeclaration]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  /** @deprecated Use `factory.createConstructSignature` or the factory supplied by your transformation context instead. */
  @JSName("createConstructSignature")
  def createConstructSignature_ConstructSignatureDeclaration(typeParameters: Array[TypeParameterDeclaration], parameters: Array[ParameterDeclaration]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  
  def createConstructor(decorators: Unit, modifiers: Unit, parameters: Array[ParameterDeclaration]): ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  def createConstructor(decorators: Unit, modifiers: Array[Modifier], parameters: Array[ParameterDeclaration]): ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Unit,
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  def createConstructor(decorators: Array[Decorator], modifiers: Unit, parameters: Array[ParameterDeclaration]): ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Array[Decorator],
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  /** @deprecated Use `factory.createConstructorDeclaration` or the factory supplied by your transformation context instead. */
  def createConstructor(decorators: Array[Decorator], modifiers: Array[Modifier], parameters: Array[ParameterDeclaration]): ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def createConstructor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  
  def createConstructorTypeNode(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructorTypeNode = js.native
  def createConstructorTypeNode(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorTypeNode = js.native
  /** @deprecated Use `factory.createConstructorTypeNode` or the factory supplied by your transformation context instead. */
  def createConstructorTypeNode(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructorTypeNode = js.native
  /** @deprecated Use `factory.createConstructorTypeNode` or the factory supplied by your transformation context instead. */
  def createConstructorTypeNode(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorTypeNode = js.native
  
  @JSName("createConstructor")
  def createConstructor_ConstructorDeclaration(
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  @JSName("createConstructor")
  def createConstructor_ConstructorDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  @JSName("createConstructor")
  def createConstructor_ConstructorDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  /** @deprecated Use `factory.createConstructorDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createConstructor")
  def createConstructor_ConstructorDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  
  /** @deprecated Use `factory.createContinueStatement` or the factory supplied by your transformation context instead. */
  def createContinue(): ContinueStatement = js.native
  def createContinue(label: String): ContinueStatement = js.native
  def createContinue(label: Identifier): ContinueStatement = js.native
  def createContinue(label: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement = js.native
  /** @deprecated Use `factory.createContinueStatement` or the factory supplied by your transformation context instead. */
  @JSName("createContinue")
  def createContinue_ContinueStatement(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement = js.native
  @JSName("createContinue")
  def createContinue_ContinueStatement(label: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement = js.native
  
  /** @deprecated Use `factory.createDebuggerStatement` or the factory supplied by your transformation context instead. */
  def createDebuggerStatement(): DebuggerStatement = js.native
  /** @deprecated Use `factory.createDebuggerStatement` or the factory supplied by your transformation context instead. */
  @JSName("createDebuggerStatement")
  def createDebuggerStatement_DebuggerStatement(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DebuggerStatement = js.native
  
  /** @deprecated Use `factory.createDecorator` or the factory supplied by your transformation context instead. */
  def createDecorator(expression: Expression): typings.typescriptNn5FuAjk.ts.Decorator = js.native
  /** @deprecated Use `factory.createDecorator` or the factory supplied by your transformation context instead. */
  def createDecorator(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): Decorator = js.native
  
  /** @deprecated Use `factory.createDefaultClause` or the factory supplied by your transformation context instead. */
  def createDefaultClause(statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): DefaultClause = js.native
  /** @deprecated Use `factory.createDefaultClause` or the factory supplied by your transformation context instead. */
  @JSName("createDefaultClause")
  def createDefaultClause_DefaultClause(statements: Array[Statement]): typings.typescriptNn5FuAjk.ts.DefaultClause = js.native
  
  /** @deprecated Use `factory.createDeleteExpression` or the factory supplied by your transformation context instead. */
  def createDelete(expression: Expression): DeleteExpression = js.native
  /** @deprecated Use `factory.createDeleteExpression` or the factory supplied by your transformation context instead. */
  def createDelete(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DeleteExpression = js.native
  
  /** @deprecated Use `factory.createDoStatement` or the factory supplied by your transformation context instead. */
  def createDo(statement: Statement, expression: Expression): DoStatement = js.native
  /** @deprecated Use `factory.createDoStatement` or the factory supplied by your transformation context instead. */
  def createDo(
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DoStatement = js.native
  
  def createDocumentRegistry(): DocumentRegistry = js.native
  def createDocumentRegistry(useCaseSensitiveFileNames: Boolean): DocumentRegistry = js.native
  def createDocumentRegistry(useCaseSensitiveFileNames: Boolean, currentDirectory: String): DocumentRegistry = js.native
  def createDocumentRegistry(useCaseSensitiveFileNames: Unit, currentDirectory: String): DocumentRegistry = js.native
  @JSName("createDocumentRegistry")
  def createDocumentRegistry_DocumentRegistry(): typings.typescriptNn5FuAjk.ts.DocumentRegistry = js.native
  @JSName("createDocumentRegistry")
  def createDocumentRegistry_DocumentRegistry(useCaseSensitiveFileNames: Boolean): typings.typescriptNn5FuAjk.ts.DocumentRegistry = js.native
  @JSName("createDocumentRegistry")
  def createDocumentRegistry_DocumentRegistry(useCaseSensitiveFileNames: Boolean, currentDirectory: String): typings.typescriptNn5FuAjk.ts.DocumentRegistry = js.native
  @JSName("createDocumentRegistry")
  def createDocumentRegistry_DocumentRegistry(useCaseSensitiveFileNames: Unit, currentDirectory: String): typings.typescriptNn5FuAjk.ts.DocumentRegistry = js.native
  
  /** @deprecated Use `factory.createElementAccessExpression` or the factory supplied by your transformation context instead. */
  def createElementAccess(expression: Expression, index: Double): ElementAccessExpression = js.native
  def createElementAccess(expression: Expression, index: Expression): ElementAccessExpression = js.native
  /** @deprecated Use `factory.createElementAccessExpression` or the factory supplied by your transformation context instead. */
  def createElementAccess(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression, index: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessExpression = js.native
  def createElementAccess(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    index: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessExpression = js.native
  
  def createElementAccessChain(expression: Expression, questionDotToken: Unit, index: Double): ElementAccessChain = js.native
  def createElementAccessChain(expression: Expression, questionDotToken: Unit, index: Expression): ElementAccessChain = js.native
  /** @deprecated Use `factory.createElementAccessChain` or the factory supplied by your transformation context instead. */
  def createElementAccessChain(expression: Expression, questionDotToken: QuestionDotToken, index: Double): ElementAccessChain = js.native
  def createElementAccessChain(expression: Expression, questionDotToken: QuestionDotToken, index: Expression): ElementAccessChain = js.native
  def createElementAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    index: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain = js.native
  def createElementAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    index: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain = js.native
  /** @deprecated Use `factory.createElementAccessChain` or the factory supplied by your transformation context instead. */
  def createElementAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    index: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain = js.native
  def createElementAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    index: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain = js.native
  
  /**
    * Create the builder that can handle the changes in program and iterate through changed files
    * to emit the those files and manage semantic diagnostics cache as well
    */
  def createEmitAndSemanticDiagnosticsBuilderProgram(newProgram: Program, host: BuilderProgramHost): EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: EmitAndSemanticDiagnosticsBuilderProgram
  ): EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: EmitAndSemanticDiagnosticsBuilderProgram,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): EmitAndSemanticDiagnosticsBuilderProgram = js.native
  /**
    * Create the builder that can handle the changes in program and iterate through changed files
    * to emit the those files and manage semantic diagnostics cache as well
    */
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram = js.native
  def createEmitAndSemanticDiagnosticsBuilderProgram(
    rootNames: js.UndefOr[Array[String]],
    options: js.UndefOr[CompilerOptions],
    host: js.UndefOr[typings.typescriptNn5FuAjk.ts.CompilerHost],
    oldProgram: js.UndefOr[EmitAndSemanticDiagnosticsBuilderProgram],
    configFileParsingDiagnostics: js.UndefOr[Array[Diagnostic]],
    projectReferences: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.ProjectReference]]
  ): EmitAndSemanticDiagnosticsBuilderProgram = js.native
  @JSName("createEmitAndSemanticDiagnosticsBuilderProgram")
  def createEmitAndSemanticDiagnosticsBuilderProgram_EmitAndSemanticDiagnosticsBuilderProgram(
    rootNames: js.UndefOr[Array[String]],
    options: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions],
    host: js.UndefOr[CompilerHost],
    oldProgram: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram
    ],
    configFileParsingDiagnostics: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]],
    projectReferences: js.UndefOr[Array[ProjectReference]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram = js.native
  
  /** @deprecated Use `factory.createEmptyStatement` or the factory supplied by your transformation context instead. */
  def createEmptyStatement(): EmptyStatement = js.native
  /** @deprecated Use `factory.createEmptyStatement` or the factory supplied by your transformation context instead. */
  @JSName("createEmptyStatement")
  def createEmptyStatement_EmptyStatement(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmptyStatement = js.native
  
  def createEnumDeclaration(decorators: Unit, modifiers: Unit, name: String, members: Array[EnumMember]): EnumDeclaration = js.native
  def createEnumDeclaration(decorators: Unit, modifiers: Unit, name: Identifier, members: Array[EnumMember]): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  /** @deprecated Use `factory.createEnumDeclaration` or the factory supplied by your transformation context instead. */
  def createEnumDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def createEnumDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  @JSName("createEnumDeclaration")
  def createEnumDeclaration_EnumDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  @JSName("createEnumDeclaration")
  def createEnumDeclaration_EnumDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  @JSName("createEnumDeclaration")
  def createEnumDeclaration_EnumDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  /** @deprecated Use `factory.createEnumDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createEnumDeclaration")
  def createEnumDeclaration_EnumDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  
  /** @deprecated Use `factory.createEnumMember` or the factory supplied by your transformation context instead. */
  def createEnumMember(name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember = js.native
  def createEnumMember(name: String, initializer: Expression): EnumMember = js.native
  def createEnumMember(name: String, initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember = js.native
  def createEnumMember(name: PropertyName): EnumMember = js.native
  def createEnumMember(name: PropertyName, initializer: Expression): EnumMember = js.native
  def createEnumMember(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember = js.native
  def createEnumMember(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember = js.native
  /** @deprecated Use `factory.createEnumMember` or the factory supplied by your transformation context instead. */
  @JSName("createEnumMember")
  def createEnumMember_EnumMember(name: String): EnumMember = js.native
  
  def createExportAssignment(decorators: Unit, modifiers: Unit, isExportEquals: Boolean, expression: Expression): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Unit,
    modifiers: Unit,
    isExportEquals: Boolean,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def createExportAssignment(decorators: Unit, modifiers: Unit, isExportEquals: Unit, expression: Expression): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Unit,
    modifiers: Unit,
    isExportEquals: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def createExportAssignment(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isExportEquals: Boolean,
    expression: Expression
  ): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Unit,
    modifiers: Array[Modifier],
    isExportEquals: Boolean,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def createExportAssignment(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isExportEquals: Unit,
    expression: Expression
  ): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Unit,
    modifiers: Array[Modifier],
    isExportEquals: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def createExportAssignment(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    isExportEquals: Boolean,
    expression: Expression
  ): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Array[Decorator],
    modifiers: Unit,
    isExportEquals: Boolean,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def createExportAssignment(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    isExportEquals: Unit,
    expression: Expression
  ): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Array[Decorator],
    modifiers: Unit,
    isExportEquals: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  /** @deprecated Use `factory.createExportAssignment` or the factory supplied by your transformation context instead. */
  def createExportAssignment(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isExportEquals: Boolean,
    expression: Expression
  ): ExportAssignment = js.native
  /** @deprecated Use `factory.createExportAssignment` or the factory supplied by your transformation context instead. */
  def createExportAssignment(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    isExportEquals: Boolean,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def createExportAssignment(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isExportEquals: Unit,
    expression: Expression
  ): ExportAssignment = js.native
  def createExportAssignment(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    isExportEquals: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  
  /** @deprecated Use `factory.createExportDeclaration` or the factory supplied by your transformation context instead. */
  def createExportDeclaration(): ExportDeclaration = js.native
  def createExportDeclaration(decorators: Unit, modifiers: Unit, exportClause: Unit, moduleSpecifier: Unit, isTypeOnly: Any): ExportDeclaration = js.native
  def createExportDeclaration(decorators: Unit, modifiers: Unit, exportClause: Unit, moduleSpecifier: Expression): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(decorators: Unit, modifiers: Unit, exportClause: NamedExportBindings): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(decorators: Unit, modifiers: Unit, exportClause: NamedExportBindings, moduleSpecifier: Expression): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(decorators: Unit, modifiers: Array[Modifier]): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Expression
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(decorators: Array[Decorator]): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Expression
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: NamedExportBindings
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(decorators: Array[Decorator], modifiers: Array[Modifier]): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Expression
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ExportDeclaration = js.native
  def createExportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Any
  ): ExportDeclaration = js.native
  /** @deprecated Use `factory.createExportDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(decorators: Unit, modifiers: Unit, exportClause: Unit, moduleSpecifier: Unit, isTypeOnly: Any): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(decorators: Unit, modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier]): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator]): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier]
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  @JSName("createExportDeclaration")
  def createExportDeclaration_ExportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Any
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  
  /** @deprecated Use `factory.createExportDefault` or the factory supplied by your transformation context instead. */
  def createExportDefault(expression: Expression): ExportAssignment = js.native
  /** @deprecated Use `factory.createExportDefault` or the factory supplied by your transformation context instead. */
  def createExportDefault(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  
  /** @deprecated Use `factory.createExportSpecifier` or the factory supplied by your transformation context instead. */
  def createExportSpecifier(isTypeOnly: Boolean, propertyName: String, name: String): ExportSpecifier = js.native
  def createExportSpecifier(isTypeOnly: Boolean, propertyName: String, name: Identifier): ExportSpecifier = js.native
  def createExportSpecifier(
    isTypeOnly: Boolean,
    propertyName: String,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  def createExportSpecifier(isTypeOnly: Boolean, propertyName: Unit, name: String): ExportSpecifier = js.native
  def createExportSpecifier(isTypeOnly: Boolean, propertyName: Unit, name: Identifier): ExportSpecifier = js.native
  def createExportSpecifier(
    isTypeOnly: Boolean,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  def createExportSpecifier(isTypeOnly: Boolean, propertyName: Identifier, name: String): ExportSpecifier = js.native
  def createExportSpecifier(isTypeOnly: Boolean, propertyName: Identifier, name: Identifier): ExportSpecifier = js.native
  def createExportSpecifier(
    isTypeOnly: Boolean,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  def createExportSpecifier(
    isTypeOnly: Boolean,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  /** @deprecated Use `factory.createExportSpecifier` or the factory supplied by your transformation context instead. */
  @JSName("createExportSpecifier")
  def createExportSpecifier_ExportSpecifier(isTypeOnly: Boolean, propertyName: String, name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  @JSName("createExportSpecifier")
  def createExportSpecifier_ExportSpecifier(isTypeOnly: Boolean, propertyName: Unit, name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  
  /** @deprecated Use `factory.createExpressionStatement` or the factory supplied by your transformation context instead. */
  def createExpressionStatement(expression: Expression): ExpressionStatement = js.native
  /** @deprecated Use `factory.createExpressionStatement` or the factory supplied by your transformation context instead. */
  def createExpressionStatement(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionStatement = js.native
  
  def createExpressionWithTypeArguments(typeArguments: Unit, expression: Expression): ExpressionWithTypeArguments = js.native
  def createExpressionWithTypeArguments(typeArguments: Unit, expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments = js.native
  /** @deprecated Use `factory.createExpressionWithTypeArguments` or the factory supplied by your transformation context instead. */
  def createExpressionWithTypeArguments(typeArguments: Array[TypeNode], expression: Expression): ExpressionWithTypeArguments = js.native
  /** @deprecated Use `factory.createExpressionWithTypeArguments` or the factory supplied by your transformation context instead. */
  def createExpressionWithTypeArguments(
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments = js.native
  
  /** @deprecated Use `factory.createExternalModuleExport` or the factory supplied by your transformation context instead. */
  def createExternalModuleExport(exportName: Identifier): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  /** @deprecated Use `factory.createExternalModuleExport` or the factory supplied by your transformation context instead. */
  def createExternalModuleExport(exportName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): ExportDeclaration = js.native
  
  /** @deprecated Use `factory.createExternalModuleReference` or the factory supplied by your transformation context instead. */
  def createExternalModuleReference(expression: Expression): ExternalModuleReference = js.native
  /** @deprecated Use `factory.createExternalModuleReference` or the factory supplied by your transformation context instead. */
  def createExternalModuleReference(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExternalModuleReference = js.native
  
  /** @deprecated Use `factory.createFalse` or the factory supplied by your transformation context instead. */
  def createFalse(): FalseLiteral = js.native
  /** @deprecated Use `factory.createFalse` or the factory supplied by your transformation context instead. */
  @JSName("createFalse")
  def createFalse_FalseLiteral(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FalseLiteral = js.native
  
  /** @deprecated Use `factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic | GeneratedIdentifierFlags.FileLevel)` or the factory supplied by your transformation context instead. */
  def createFileLevelUniqueName(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic | GeneratedIdentifierFlags.FileLevel)` or the factory supplied by your transformation context instead. */
  @JSName("createFileLevelUniqueName")
  def createFileLevelUniqueName_Identifier(text: String): Identifier = js.native
  
  def createFor(initializer: Unit, condition: Unit, incrementor: Unit, statement: Statement): ForStatement = js.native
  def createFor(
    initializer: Unit,
    condition: Unit,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def createFor(initializer: Unit, condition: Unit, incrementor: Expression, statement: Statement): ForStatement = js.native
  def createFor(
    initializer: Unit,
    condition: Unit,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def createFor(initializer: Unit, condition: Expression, incrementor: Unit, statement: Statement): ForStatement = js.native
  def createFor(initializer: Unit, condition: Expression, incrementor: Expression, statement: Statement): ForStatement = js.native
  def createFor(
    initializer: Unit,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def createFor(
    initializer: Unit,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def createFor(initializer: ForInitializer, condition: Unit, incrementor: Unit, statement: Statement): ForStatement = js.native
  def createFor(initializer: ForInitializer, condition: Unit, incrementor: Expression, statement: Statement): ForStatement = js.native
  def createFor(initializer: ForInitializer, condition: Expression, incrementor: Unit, statement: Statement): ForStatement = js.native
  /** @deprecated Use `factory.createForStatement` or the factory supplied by your transformation context instead. */
  def createFor(initializer: ForInitializer, condition: Expression, incrementor: Expression, statement: Statement): ForStatement = js.native
  def createFor(
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: Unit,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def createFor(
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: Unit,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def createFor(
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  /** @deprecated Use `factory.createForStatement` or the factory supplied by your transformation context instead. */
  def createFor(
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  
  /** @deprecated Use `factory.createForInStatement` or the factory supplied by your transformation context instead. */
  def createForIn(initializer: ForInitializer, expression: Expression, statement: Statement): ForInStatement = js.native
  /** @deprecated Use `factory.createForInStatement` or the factory supplied by your transformation context instead. */
  def createForIn(
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInStatement = js.native
  
  def createForOf(awaitModifier: Unit, initializer: ForInitializer, expression: Expression, statement: Statement): ForOfStatement = js.native
  def createForOf(
    awaitModifier: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForOfStatement = js.native
  /** @deprecated Use `factory.createForOfStatement` or the factory supplied by your transformation context instead. */
  def createForOf(
    awaitModifier: AwaitKeyword,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
  ): ForOfStatement = js.native
  /** @deprecated Use `factory.createForOfStatement` or the factory supplied by your transformation context instead. */
  def createForOf(
    awaitModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AwaitKeyword,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForOfStatement = js.native
  
  /** @deprecated Use `factory.createFunctionDeclaration` or the factory supplied by your transformation context instead. */
  def createFunctionDeclaration(
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    asteriskToken: js.UndefOr[AsteriskToken],
    name: js.UndefOr[String | Identifier],
    typeParameters: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: js.UndefOr[TypeNode],
    body: js.UndefOr[Block]
  ): FunctionDeclaration = js.native
  /** @deprecated Use `factory.createFunctionDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createFunctionDeclaration")
  def createFunctionDeclaration_FunctionDeclaration(
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    asteriskToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken],
    name: js.UndefOr[String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier],
    typeParameters: js.UndefOr[Array[TypeParameterDeclaration]],
    parameters: Array[ParameterDeclaration],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    body: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionDeclaration = js.native
  
  /** @deprecated Use `factory.createFunctionExpression` or the factory supplied by your transformation context instead. */
  def createFunctionExpression(
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    asteriskToken: js.UndefOr[AsteriskToken],
    name: js.UndefOr[String | Identifier],
    typeParameters: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]],
    parameters: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]],
    `type`: js.UndefOr[TypeNode],
    body: Block
  ): FunctionExpression = js.native
  /** @deprecated Use `factory.createFunctionExpression` or the factory supplied by your transformation context instead. */
  def createFunctionExpression(
    modifiers: js.UndefOr[Array[Modifier]],
    asteriskToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken],
    name: js.UndefOr[String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier],
    typeParameters: js.UndefOr[Array[TypeParameterDeclaration]],
    parameters: js.UndefOr[Array[ParameterDeclaration]],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  
  def createFunctionTypeNode(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): FunctionTypeNode = js.native
  def createFunctionTypeNode(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionTypeNode = js.native
  /** @deprecated Use `factory.createFunctionTypeNode` or the factory supplied by your transformation context instead. */
  def createFunctionTypeNode(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): FunctionTypeNode = js.native
  /** @deprecated Use `factory.createFunctionTypeNode` or the factory supplied by your transformation context instead. */
  def createFunctionTypeNode(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionTypeNode = js.native
  
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  /** @deprecated Use `factory.createGetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def createGetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  @JSName("createGetAccessor")
  def createGetAccessor_GetAccessorDeclaration(decorators: Unit, modifiers: Unit, name: String, parameters: Array[ParameterDeclaration]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  @JSName("createGetAccessor")
  def createGetAccessor_GetAccessorDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  @JSName("createGetAccessor")
  def createGetAccessor_GetAccessorDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  /** @deprecated Use `factory.createGetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createGetAccessor")
  def createGetAccessor_GetAccessorDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  
  /** @deprecated Use `factory.createHeritageClause` or the factory supplied by your transformation context instead. */
  def createHeritageClause(token: ExtendsKeyword, types: Array[ExpressionWithTypeArguments]): typings.typescriptNn5FuAjk.ts.HeritageClause = js.native
  def createHeritageClause(token: ImplementsKeyword, types: Array[ExpressionWithTypeArguments]): typings.typescriptNn5FuAjk.ts.HeritageClause = js.native
  /** @deprecated Use `factory.createHeritageClause` or the factory supplied by your transformation context instead. */
  def createHeritageClause(
    token: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.ExtendsKeyword,
    types: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments]
  ): HeritageClause = js.native
  def createHeritageClause(
    token: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.ImplementsKeyword,
    types: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments]
  ): HeritageClause = js.native
  
  /** @deprecated Use `factory.createIdentifier` or the factory supplied by your transformation context instead. */
  def createIdentifier(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.createIdentifier` or the factory supplied by your transformation context instead. */
  @JSName("createIdentifier")
  def createIdentifier_Identifier(text: String): Identifier = js.native
  
  /** @deprecated Use `factory.createIfStatement` or the factory supplied by your transformation context instead. */
  def createIf(expression: Expression, thenStatement: Statement): IfStatement = js.native
  def createIf(expression: Expression, thenStatement: Statement, elseStatement: Statement): IfStatement = js.native
  /** @deprecated Use `factory.createIfStatement` or the factory supplied by your transformation context instead. */
  def createIf(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    thenStatement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IfStatement = js.native
  def createIf(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    thenStatement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement,
    elseStatement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IfStatement = js.native
  
  /** @deprecated Use `factory.createImmediatelyInvokedArrowFunction` or the factory supplied by your transformation context instead. */
  def createImmediatelyInvokedArrowFunction(statements: Array[Statement]): CallExpression = js.native
  /** @deprecated Use `factory.createImmediatelyInvokedArrowFunction` or the factory supplied by your transformation context instead. */
  def createImmediatelyInvokedArrowFunction(
    statements: Array[Statement],
    param: typings.typescriptNn5FuAjk.ts.ParameterDeclaration,
    paramValue: Expression
  ): CallExpression = js.native
  /** @deprecated Use `factory.createImmediatelyInvokedArrowFunction` or the factory supplied by your transformation context instead. */
  def createImmediatelyInvokedArrowFunction(
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    param: ParameterDeclaration,
    paramValue: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  /** @deprecated Use `factory.createImmediatelyInvokedArrowFunction` or the factory supplied by your transformation context instead. */
  @JSName("createImmediatelyInvokedArrowFunction")
  def createImmediatelyInvokedArrowFunction_CallExpression(statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  
  /** @deprecated Use `factory.createImmediatelyInvokedFunctionExpression` or the factory supplied by your transformation context instead. */
  def createImmediatelyInvokedFunctionExpression(statements: Array[Statement]): CallExpression = js.native
  /** @deprecated Use `factory.createImmediatelyInvokedFunctionExpression` or the factory supplied by your transformation context instead. */
  def createImmediatelyInvokedFunctionExpression(
    statements: Array[Statement],
    param: typings.typescriptNn5FuAjk.ts.ParameterDeclaration,
    paramValue: Expression
  ): CallExpression = js.native
  /** @deprecated Use `factory.createImmediatelyInvokedFunctionExpression` or the factory supplied by your transformation context instead. */
  def createImmediatelyInvokedFunctionExpression(
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    param: ParameterDeclaration,
    paramValue: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  /** @deprecated Use `factory.createImmediatelyInvokedFunctionExpression` or the factory supplied by your transformation context instead. */
  @JSName("createImmediatelyInvokedFunctionExpression")
  def createImmediatelyInvokedFunctionExpression_CallExpression(statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  
  /** @deprecated Use `factory.createImportClause` or the factory supplied by your transformation context instead. */
  def createImportClause(): ImportClause = js.native
  def createImportClause(name: Unit, namedBindings: Unit, isTypeOnly: Any): ImportClause = js.native
  def createImportClause(name: Unit, namedBindings: NamedImportBindings): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def createImportClause(name: Unit, namedBindings: NamedImportBindings, isTypeOnly: Any): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def createImportClause(name: Unit, namedBindings: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImportBindings): ImportClause = js.native
  def createImportClause(
    name: Unit,
    namedBindings: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImportBindings,
    isTypeOnly: Any
  ): ImportClause = js.native
  def createImportClause(name: Identifier): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def createImportClause(name: Identifier, namedBindings: Unit, isTypeOnly: Any): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def createImportClause(name: Identifier, namedBindings: NamedImportBindings): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def createImportClause(name: Identifier, namedBindings: NamedImportBindings, isTypeOnly: Any): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def createImportClause(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): ImportClause = js.native
  def createImportClause(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    namedBindings: Unit,
    isTypeOnly: Any
  ): ImportClause = js.native
  def createImportClause(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    namedBindings: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImportBindings
  ): ImportClause = js.native
  def createImportClause(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    namedBindings: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImportBindings,
    isTypeOnly: Any
  ): ImportClause = js.native
  /** @deprecated Use `factory.createImportClause` or the factory supplied by your transformation context instead. */
  @JSName("createImportClause")
  def createImportClause_ImportClause(): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  @JSName("createImportClause")
  def createImportClause_ImportClause(name: Unit, namedBindings: Unit, isTypeOnly: Any): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  
  def createImportDeclaration(decorators: Unit, modifiers: Unit, importClause: Unit, moduleSpecifier: Expression): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  /** @deprecated Use `factory.createImportDeclaration` or the factory supplied by your transformation context instead. */
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  /** @deprecated Use `factory.createImportDeclaration` or the factory supplied by your transformation context instead. */
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def createImportDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: String,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: String,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isTypeOnly: Boolean,
    name: String,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    isTypeOnly: Boolean,
    name: String,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: String,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: String,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  /** @deprecated Use `factory.createImportEqualsDeclaration` or the factory supplied by your transformation context instead. */
  def createImportEqualsDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isTypeOnly: Boolean,
    name: String,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  /** @deprecated Use `factory.createImportEqualsDeclaration` or the factory supplied by your transformation context instead. */
  def createImportEqualsDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    isTypeOnly: Boolean,
    name: String,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def createImportEqualsDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  
  def createImportSpecifier(isTypeOnly: Boolean, propertyName: Unit, name: Identifier): ImportSpecifier = js.native
  def createImportSpecifier(
    isTypeOnly: Boolean,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier = js.native
  /** @deprecated Use `factory.createImportSpecifier` or the factory supplied by your transformation context instead. */
  def createImportSpecifier(isTypeOnly: Boolean, propertyName: Identifier, name: Identifier): ImportSpecifier = js.native
  /** @deprecated Use `factory.createImportSpecifier` or the factory supplied by your transformation context instead. */
  def createImportSpecifier(
    isTypeOnly: Boolean,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier = js.native
  
  /** @deprecated Use `factory.createImportTypeNode` or the factory supplied by your transformation context instead. */
  def createImportTypeNode(argument: TypeNode): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, assertions: Unit, qualifier: Unit, typeArguments: Unit, isTypeOf: Boolean): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, assertions: Unit, qualifier: Unit, typeArguments: Array[TypeNode]): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, assertions: Unit, qualifier: EntityName): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: Unit,
    qualifier: EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, assertions: Unit, qualifier: EntityName, typeArguments: Array[TypeNode]): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: Unit,
    qualifier: EntityName,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, assertions: ImportTypeAssertionContainer): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[TypeNode]
  ): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, assertions: ImportTypeAssertionContainer, qualifier: EntityName): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName,
    typeArguments: Array[TypeNode]
  ): ImportTypeNode = js.native
  def createImportTypeNode(
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: Unit, typeArguments: Unit, isTypeOf: Boolean): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: Unit, typeArguments: Array[TypeNode]): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: Unit, typeArguments: Array[TypeNode], isTypeOf: Boolean): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: EntityName): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: EntityName, typeArguments: Unit, isTypeOf: Boolean): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: EntityName, typeArguments: Array[TypeNode]): ImportTypeNode = js.native
  def createImportTypeNode(argument: TypeNode, qualifier: EntityName, typeArguments: Array[TypeNode], isTypeOf: Boolean): ImportTypeNode = js.native
  /** @deprecated Use `factory.createImportTypeNode` or the factory supplied by your transformation context instead. */
  def createImportTypeNode(argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def createImportTypeNode(
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  
  def createIncrementalCompilerHost(options: CompilerOptions): typings.typescriptNn5FuAjk.ts.CompilerHost = js.native
  def createIncrementalCompilerHost(options: CompilerOptions, system: System): typings.typescriptNn5FuAjk.ts.CompilerHost = js.native
  def createIncrementalCompilerHost(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions): CompilerHost = js.native
  def createIncrementalCompilerHost(
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System
  ): CompilerHost = js.native
  
  def createIncrementalProgram[T /* <: BuilderProgram */](
    hasRootNamesOptionsConfigFileParsingDiagnosticsProjectReferencesHostCreateProgram: IncrementalProgramOptions[T]
  ): T = js.native
  def createIncrementalProgram[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    hasRootNamesOptionsConfigFileParsingDiagnosticsProjectReferencesHostCreateProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IncrementalProgramOptions[T]
  ): T = js.native
  
  def createIndexSignature(
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  def createIndexSignature(
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  def createIndexSignature(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  def createIndexSignature(
    decorators: Unit,
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  def createIndexSignature(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  def createIndexSignature(
    decorators: Array[Decorator],
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  /** @deprecated Use `factory.createIndexSignature` or the factory supplied by your transformation context instead. */
  def createIndexSignature(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  /** @deprecated Use `factory.createIndexSignature` or the factory supplied by your transformation context instead. */
  def createIndexSignature(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  
  /** @deprecated Use `factory.createIndexedAccessTypeNode` or the factory supplied by your transformation context instead. */
  def createIndexedAccessTypeNode(objectType: TypeNode, indexType: TypeNode): IndexedAccessTypeNode = js.native
  /** @deprecated Use `factory.createIndexedAccessTypeNode` or the factory supplied by your transformation context instead. */
  def createIndexedAccessTypeNode(
    objectType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    indexType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexedAccessTypeNode = js.native
  
  /** @deprecated Use `factory.createInferTypeNode` or the factory supplied by your transformation context instead. */
  def createInferTypeNode(typeParameter: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration): InferTypeNode = js.native
  /** @deprecated Use `factory.createInferTypeNode` or the factory supplied by your transformation context instead. */
  def createInferTypeNode(typeParameter: TypeParameterDeclaration): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InferTypeNode = js.native
  
  def createInputFiles(javascriptText: String, declarationText: String): InputFiles = js.native
  def createInputFiles(javascriptText: String, declarationText: String, javascriptMapPath: String): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String,
    declarationMapPath: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String,
    declarationMapPath: String,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String,
    declarationMapPath: Unit,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: Unit,
    declarationMapPath: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: Unit,
    declarationMapPath: String,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: Unit,
    declarationMapPath: Unit,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String,
    declarationMapPath: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String,
    declarationMapPath: String,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String,
    declarationMapPath: Unit,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: Unit,
    declarationMapPath: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: Unit,
    declarationMapPath: String,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: Unit,
    declarationMapPath: Unit,
    declarationMapText: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String,
    declarationMapPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String,
    declarationMapPath: String,
    buildInfoPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String,
    declarationMapPath: Unit,
    buildInfoPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String,
    declarationMapPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String,
    declarationMapPath: String,
    buildInfoPath: String
  ): InputFiles = js.native
  def createInputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String,
    declarationMapPath: Unit,
    buildInfoPath: String
  ): InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(javascriptText: String, declarationText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(javascriptText: String, declarationText: String, javascriptMapPath: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String,
    declarationMapPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String,
    declarationMapPath: String,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: String,
    declarationMapPath: Unit,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: Unit,
    declarationMapPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: Unit,
    declarationMapPath: String,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: String,
    javascriptMapText: Unit,
    declarationMapPath: Unit,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String,
    declarationMapPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String,
    declarationMapPath: String,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: String,
    declarationMapPath: Unit,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: Unit,
    declarationMapPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: Unit,
    declarationMapPath: String,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    javascriptText: String,
    declarationText: String,
    javascriptMapPath: Unit,
    javascriptMapText: Unit,
    declarationMapPath: Unit,
    declarationMapText: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String,
    declarationMapPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String,
    declarationMapPath: String,
    buildInfoPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: String,
    declarationPath: String,
    declarationMapPath: Unit,
    buildInfoPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String,
    declarationMapPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String,
    declarationMapPath: String,
    buildInfoPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  @JSName("createInputFiles")
  def createInputFiles_InputFiles(
    readFileText: js.Function1[/* path */ String, js.UndefOr[String]],
    javascriptPath: String,
    javascriptMapPath: Unit,
    declarationPath: String,
    declarationMapPath: Unit,
    buildInfoPath: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles = js.native
  
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  /** @deprecated Use `factory.createInterfaceDeclaration` or the factory supplied by your transformation context instead. */
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def createInterfaceDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  /** @deprecated Use `factory.createInterfaceDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createInterfaceDeclaration")
  def createInterfaceDeclaration_InterfaceDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  
  /** @deprecated Use `factory.createIntersectionTypeNode` or the factory supplied by your transformation context instead. */
  def createIntersectionTypeNode(types: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]): IntersectionTypeNode = js.native
  /** @deprecated Use `factory.createIntersectionTypeNode` or the factory supplied by your transformation context instead. */
  @JSName("createIntersectionTypeNode")
  def createIntersectionTypeNode_IntersectionTypeNode(types: Array[TypeNode]): typings.typescriptNn5FuAjk.ts.IntersectionTypeNode = js.native
  
  def createJSDocAugmentsTag(tagName: Unit, className: ExpressionWithTypeArgumen): JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(tagName: Unit, className: ExpressionWithTypeArgumenDecorators): typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(tagName: Unit, className: ExpressionWithTypeArgumenDecorators, comment: String): typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(tagName: Unit, className: ExpressionWithTypeArgumenDecorators, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(tagName: Unit, className: ExpressionWithTypeArgumen, comment: String): JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(
    tagName: Unit,
    className: ExpressionWithTypeArgumen,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocAugmentsTag = js.native
  /** @deprecated Use `factory.createJSDocAugmentsTag` or the factory supplied by your transformation context instead. */
  def createJSDocAugmentsTag(tagName: Identifier, className: ExpressionWithTypeArgumenDecorators): typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(tagName: Identifier, className: ExpressionWithTypeArgumenDecorators, comment: String): typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(
    tagName: Identifier,
    className: ExpressionWithTypeArgumenDecorators,
    comment: NodeArray[JSDocComment]
  ): typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag = js.native
  /** @deprecated Use `factory.createJSDocAugmentsTag` or the factory supplied by your transformation context instead. */
  def createJSDocAugmentsTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    className: ExpressionWithTypeArgumen
  ): JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    className: ExpressionWithTypeArgumen,
    comment: String
  ): JSDocAugmentsTag = js.native
  def createJSDocAugmentsTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    className: ExpressionWithTypeArgumen,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocAugmentsTag = js.native
  
  /** @deprecated Use `factory.createJSDocAuthorTag` or the factory supplied by your transformation context instead. */
  def createJSDocAuthorTag(): JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: Unit, comment: String): JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: Unit, comment: NodeArray[JSDocComment]): JSDocAuthorTag = js.native
  def createJSDocAuthorTag(
    tagName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: Identifier): JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: Identifier, comment: String): JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: Identifier, comment: NodeArray[JSDocComment]): JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAuthorTag = js.native
  def createJSDocAuthorTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAuthorTag = js.native
  def createJSDocAuthorTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAuthorTag = js.native
  /** @deprecated Use `factory.createJSDocAuthorTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocAuthorTag")
  def createJSDocAuthorTag_JSDocAuthorTag(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAuthorTag = js.native
  @JSName("createJSDocAuthorTag")
  def createJSDocAuthorTag_JSDocAuthorTag(tagName: Unit, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocAuthorTag = js.native
  
  def createJSDocCallbackTag(tagName: Unit, typeExpression: JSDocSignature): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Unit, typeExpression: JSDocSignature, fullName: Unit, comment: String): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Unit, typeExpression: JSDocSignature, fullName: Unit, comment: NodeArray[JSDocComment]): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Unit, typeExpression: JSDocSignature, fullName: Identifier): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Unit, typeExpression: JSDocSignature, fullName: Identifier, comment: String): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: JSDocSignature,
    fullName: Identifier,
    comment: NodeArray[JSDocComment]
  ): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Unit, typeExpression: JSDocSignature, fullName: JSDocNamespaceDeclaration): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: JSDocSignature,
    fullName: JSDocNamespaceDeclaration,
    comment: String
  ): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: JSDocSignature,
    fullName: JSDocNamespaceDeclaration,
    comment: NodeArray[JSDocComment]
  ): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Unit, typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  /** @deprecated Use `factory.createJSDocCallbackTag` or the factory supplied by your transformation context instead. */
  def createJSDocCallbackTag(tagName: Identifier, typeExpression: JSDocSignature): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Identifier, typeExpression: JSDocSignature, fullName: Unit, comment: String): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Identifier,
    typeExpression: JSDocSignature,
    fullName: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Identifier, typeExpression: JSDocSignature, fullName: Identifier): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Identifier, typeExpression: JSDocSignature, fullName: Identifier, comment: String): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Identifier,
    typeExpression: JSDocSignature,
    fullName: Identifier,
    comment: NodeArray[JSDocComment]
  ): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(tagName: Identifier, typeExpression: JSDocSignature, fullName: JSDocNamespaceDeclaration): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Identifier,
    typeExpression: JSDocSignature,
    fullName: JSDocNamespaceDeclaration,
    comment: String
  ): JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: Identifier,
    typeExpression: JSDocSignature,
    fullName: JSDocNamespaceDeclaration,
    comment: NodeArray[JSDocComment]
  ): JSDocCallbackTag = js.native
  /** @deprecated Use `factory.createJSDocCallbackTag` or the factory supplied by your transformation context instead. */
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  def createJSDocCallbackTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature,
    fullName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocCallbackTag = js.native
  
  /** @deprecated Use `factory.createJSDocClassTag` or the factory supplied by your transformation context instead. */
  def createJSDocClassTag(): JSDocClassTag = js.native
  def createJSDocClassTag(tagName: Unit, comment: String): JSDocClassTag = js.native
  def createJSDocClassTag(tagName: Unit, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocClassTag = js.native
  def createJSDocClassTag(
    tagName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocClassTag = js.native
  def createJSDocClassTag(tagName: Identifier): typings.typescriptNn5FuAjk.ts.JSDocClassTag = js.native
  def createJSDocClassTag(tagName: Identifier, comment: String): typings.typescriptNn5FuAjk.ts.JSDocClassTag = js.native
  def createJSDocClassTag(tagName: Identifier, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocClassTag = js.native
  def createJSDocClassTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): JSDocClassTag = js.native
  def createJSDocClassTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): JSDocClassTag = js.native
  def createJSDocClassTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocClassTag = js.native
  /** @deprecated Use `factory.createJSDocClassTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocClassTag")
  def createJSDocClassTag_JSDocClassTag(): typings.typescriptNn5FuAjk.ts.JSDocClassTag = js.native
  @JSName("createJSDocClassTag")
  def createJSDocClassTag_JSDocClassTag(tagName: Unit, comment: String): typings.typescriptNn5FuAjk.ts.JSDocClassTag = js.native
  
  /** @deprecated Use `factory.createJSDocComment` or the factory supplied by your transformation context instead. */
  def createJSDocComment(): JSDoc = js.native
  def createJSDocComment(comment: String): JSDoc = js.native
  def createJSDocComment(comment: String, tags: Array[JSDocTag]): JSDoc = js.native
  def createJSDocComment(comment: Unit, tags: Array[JSDocTag]): JSDoc = js.native
  def createJSDocComment(comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDoc = js.native
  def createJSDocComment(comment: NodeArray[JSDocComment], tags: Array[typings.typescriptNn5FuAjk.ts.JSDocTag]): typings.typescriptNn5FuAjk.ts.JSDoc = js.native
  def createJSDocComment(
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDoc = js.native
  def createJSDocComment(
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment],
    tags: Array[JSDocTag]
  ): JSDoc = js.native
  /** @deprecated Use `factory.createJSDocComment` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocComment")
  def createJSDocComment_JSDoc(): typings.typescriptNn5FuAjk.ts.JSDoc = js.native
  @JSName("createJSDocComment")
  def createJSDocComment_JSDoc(comment: String): typings.typescriptNn5FuAjk.ts.JSDoc = js.native
  @JSName("createJSDocComment")
  def createJSDocComment_JSDoc(comment: String, tags: Array[typings.typescriptNn5FuAjk.ts.JSDocTag]): typings.typescriptNn5FuAjk.ts.JSDoc = js.native
  @JSName("createJSDocComment")
  def createJSDocComment_JSDoc(comment: Unit, tags: Array[typings.typescriptNn5FuAjk.ts.JSDocTag]): typings.typescriptNn5FuAjk.ts.JSDoc = js.native
  
  def createJSDocEnumTag(tagName: Unit, typeExpression: JSDocTypeExpression): JSDocEnumTag = js.native
  def createJSDocEnumTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: String): JSDocEnumTag = js.native
  def createJSDocEnumTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocEnumTag = js.native
  def createJSDocEnumTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag = js.native
  def createJSDocEnumTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag = js.native
  def createJSDocEnumTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag = js.native
  /** @deprecated Use `factory.createJSDocEnumTag` or the factory supplied by your transformation context instead. */
  def createJSDocEnumTag(tagName: Identifier, typeExpression: JSDocTypeExpression): JSDocEnumTag = js.native
  def createJSDocEnumTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: String): JSDocEnumTag = js.native
  def createJSDocEnumTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocEnumTag = js.native
  /** @deprecated Use `factory.createJSDocEnumTag` or the factory supplied by your transformation context instead. */
  def createJSDocEnumTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag = js.native
  def createJSDocEnumTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag = js.native
  def createJSDocEnumTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag = js.native
  
  def createJSDocImplementsTag(tagName: Unit, className: ExpressionWithTypeArgumen): JSDocImplementsTag = js.native
  def createJSDocImplementsTag(tagName: Unit, className: ExpressionWithTypeArgumenDecorators): typings.typescriptNn5FuAjk.ts.JSDocImplementsTag = js.native
  def createJSDocImplementsTag(tagName: Unit, className: ExpressionWithTypeArgumenDecorators, comment: String): typings.typescriptNn5FuAjk.ts.JSDocImplementsTag = js.native
  def createJSDocImplementsTag(tagName: Unit, className: ExpressionWithTypeArgumenDecorators, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocImplementsTag = js.native
  def createJSDocImplementsTag(tagName: Unit, className: ExpressionWithTypeArgumen, comment: String): JSDocImplementsTag = js.native
  def createJSDocImplementsTag(
    tagName: Unit,
    className: ExpressionWithTypeArgumen,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocImplementsTag = js.native
  /** @deprecated Use `factory.createJSDocImplementsTag` or the factory supplied by your transformation context instead. */
  def createJSDocImplementsTag(tagName: Identifier, className: ExpressionWithTypeArgumenDecorators): typings.typescriptNn5FuAjk.ts.JSDocImplementsTag = js.native
  def createJSDocImplementsTag(tagName: Identifier, className: ExpressionWithTypeArgumenDecorators, comment: String): typings.typescriptNn5FuAjk.ts.JSDocImplementsTag = js.native
  def createJSDocImplementsTag(
    tagName: Identifier,
    className: ExpressionWithTypeArgumenDecorators,
    comment: NodeArray[JSDocComment]
  ): typings.typescriptNn5FuAjk.ts.JSDocImplementsTag = js.native
  /** @deprecated Use `factory.createJSDocImplementsTag` or the factory supplied by your transformation context instead. */
  def createJSDocImplementsTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    className: ExpressionWithTypeArgumen
  ): JSDocImplementsTag = js.native
  def createJSDocImplementsTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    className: ExpressionWithTypeArgumen,
    comment: String
  ): JSDocImplementsTag = js.native
  def createJSDocImplementsTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    className: ExpressionWithTypeArgumen,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocImplementsTag = js.native
  
  /** @deprecated Use `factory.createJSDocParameterTag` or the factory supplied by your transformation context instead. */
  def createJSDocParamTag(name: EntityName, isBracketed: Boolean): JSDocParameterTag = js.native
  def createJSDocParamTag(name: EntityName, isBracketed: Boolean, typeExpression: Unit, comment: String): JSDocParameterTag = js.native
  def createJSDocParamTag(name: EntityName, isBracketed: Boolean, typeExpression: JSDocTypeExpression): JSDocParameterTag = js.native
  def createJSDocParamTag(name: EntityName, isBracketed: Boolean, typeExpression: JSDocTypeExpression, comment: String): JSDocParameterTag = js.native
  /** @deprecated Use `factory.createJSDocParameterTag` or the factory supplied by your transformation context instead. */
  def createJSDocParamTag(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName, isBracketed: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParamTag(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParamTag(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParamTag(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  
  def createJSDocParameterTag(tagName: Unit, name: EntityName, isBracketed: Boolean): JSDocParameterTag = js.native
  def createJSDocParameterTag(tagName: Unit, name: EntityName, isBracketed: Boolean, typeExpression: Unit, isNameFirst: Boolean): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(tagName: Unit, name: EntityName, isBracketed: Boolean, typeExpression: JSDocTypeExpression): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  /** @deprecated Use `factory.createJSDocParameterTag` or the factory supplied by your transformation context instead. */
  def createJSDocParameterTag(tagName: Identifier, name: EntityName, isBracketed: Boolean): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(tagName: Identifier, name: EntityName, isBracketed: Boolean, typeExpression: JSDocTypeExpression): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocParameterTag = js.native
  /** @deprecated Use `factory.createJSDocParameterTag` or the factory supplied by your transformation context instead. */
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  def createJSDocParameterTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag = js.native
  
  /** @deprecated Use `factory.createJSDocPrivateTag` or the factory supplied by your transformation context instead. */
  def createJSDocPrivateTag(): JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: Unit, comment: String): JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: Unit, comment: NodeArray[JSDocComment]): JSDocPrivateTag = js.native
  def createJSDocPrivateTag(
    tagName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: Identifier): JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: Identifier, comment: String): JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: Identifier, comment: NodeArray[JSDocComment]): JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag = js.native
  def createJSDocPrivateTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag = js.native
  def createJSDocPrivateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag = js.native
  /** @deprecated Use `factory.createJSDocPrivateTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocPrivateTag")
  def createJSDocPrivateTag_JSDocPrivateTag(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag = js.native
  @JSName("createJSDocPrivateTag")
  def createJSDocPrivateTag_JSDocPrivateTag(tagName: Unit, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag = js.native
  
  def createJSDocPropertyTag(tagName: Unit, name: EntityName, isBracketed: Boolean): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(tagName: Unit, name: EntityName, isBracketed: Boolean, typeExpression: Unit, isNameFirst: Boolean): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(tagName: Unit, name: EntityName, isBracketed: Boolean, typeExpression: JSDocTypeExpression): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  /** @deprecated Use `factory.createJSDocPropertyTag` or the factory supplied by your transformation context instead. */
  def createJSDocPropertyTag(tagName: Identifier, name: EntityName, isBracketed: Boolean): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(tagName: Identifier, name: EntityName, isBracketed: Boolean, typeExpression: JSDocTypeExpression): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: Identifier,
    name: EntityName,
    isBracketed: Boolean,
    typeExpression: JSDocTypeExpression,
    isNameFirst: Unit,
    comment: NodeArray[JSDocComment]
  ): JSDocPropertyTag = js.native
  /** @deprecated Use `factory.createJSDocPropertyTag` or the factory supplied by your transformation context instead. */
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: Unit,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Boolean,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  def createJSDocPropertyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    isBracketed: Boolean,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    isNameFirst: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPropertyTag = js.native
  
  /** @deprecated Use `factory.createJSDocProtectedTag` or the factory supplied by your transformation context instead. */
  def createJSDocProtectedTag(): JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: Unit, comment: String): JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: Unit, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocProtectedTag = js.native
  def createJSDocProtectedTag(
    tagName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: Identifier): typings.typescriptNn5FuAjk.ts.JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: Identifier, comment: String): typings.typescriptNn5FuAjk.ts.JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: Identifier, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): JSDocProtectedTag = js.native
  def createJSDocProtectedTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): JSDocProtectedTag = js.native
  def createJSDocProtectedTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocProtectedTag = js.native
  /** @deprecated Use `factory.createJSDocProtectedTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocProtectedTag")
  def createJSDocProtectedTag_JSDocProtectedTag(): typings.typescriptNn5FuAjk.ts.JSDocProtectedTag = js.native
  @JSName("createJSDocProtectedTag")
  def createJSDocProtectedTag_JSDocProtectedTag(tagName: Unit, comment: String): typings.typescriptNn5FuAjk.ts.JSDocProtectedTag = js.native
  
  /** @deprecated Use `factory.createJSDocPublicTag` or the factory supplied by your transformation context instead. */
  def createJSDocPublicTag(): JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: Unit, comment: String): JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: Unit, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocPublicTag = js.native
  def createJSDocPublicTag(
    tagName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: Identifier): typings.typescriptNn5FuAjk.ts.JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: Identifier, comment: String): typings.typescriptNn5FuAjk.ts.JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: Identifier, comment: NodeArray[JSDocComment]): typings.typescriptNn5FuAjk.ts.JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): JSDocPublicTag = js.native
  def createJSDocPublicTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): JSDocPublicTag = js.native
  def createJSDocPublicTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocPublicTag = js.native
  /** @deprecated Use `factory.createJSDocPublicTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocPublicTag")
  def createJSDocPublicTag_JSDocPublicTag(): typings.typescriptNn5FuAjk.ts.JSDocPublicTag = js.native
  @JSName("createJSDocPublicTag")
  def createJSDocPublicTag_JSDocPublicTag(tagName: Unit, comment: String): typings.typescriptNn5FuAjk.ts.JSDocPublicTag = js.native
  
  /** @deprecated Use `factory.createJSDocReadonlyTag` or the factory supplied by your transformation context instead. */
  def createJSDocReadonlyTag(): JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: Unit, comment: String): JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: Unit, comment: NodeArray[JSDocComment]): JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(
    tagName: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: Identifier): JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: Identifier, comment: String): JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: Identifier, comment: NodeArray[JSDocComment]): JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag = js.native
  def createJSDocReadonlyTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag = js.native
  /** @deprecated Use `factory.createJSDocReadonlyTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocReadonlyTag")
  def createJSDocReadonlyTag_JSDocReadonlyTag(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag = js.native
  @JSName("createJSDocReadonlyTag")
  def createJSDocReadonlyTag_JSDocReadonlyTag(tagName: Unit, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag = js.native
  
  /** @deprecated Use `factory.createJSDocReturnTag` or the factory supplied by your transformation context instead. */
  def createJSDocReturnTag(): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Unit, typeExpression: Unit, comment: String): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Unit, typeExpression: Unit, comment: NodeArray[JSDocComment]): JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: Unit,
    typeExpression: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Unit, typeExpression: JSDocTypeExpression): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: String): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Identifier): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Identifier, typeExpression: Unit, comment: String): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Identifier, typeExpression: Unit, comment: NodeArray[JSDocComment]): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Identifier, typeExpression: JSDocTypeExpression): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: String): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocReturnTag = js.native
  def createJSDocReturnTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: Unit,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: Unit,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  def createJSDocReturnTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  /** @deprecated Use `factory.createJSDocReturnTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocReturnTag")
  def createJSDocReturnTag_JSDocReturnTag(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  @JSName("createJSDocReturnTag")
  def createJSDocReturnTag_JSDocReturnTag(tagName: Unit, typeExpression: Unit, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag = js.native
  
  def createJSDocSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature = js.native
  def createJSDocSignature(typeParameters: Unit, parameters: Array[JSDocParameterTag], `type`: JSDocReturnTag): JSDocSignature = js.native
  def createJSDocSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature = js.native
  /** @deprecated Use `factory.createJSDocSignature` or the factory supplied by your transformation context instead. */
  def createJSDocSignature(
    typeParameters: Array[JSDocTemplateTag],
    parameters: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature = js.native
  def createJSDocSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.JSDocTemplateTag],
    parameters: Array[JSDocParameterTag],
    `type`: JSDocReturnTag
  ): JSDocSignature = js.native
  def createJSDocSignature(
    typeParameters: Array[JSDocTemplateTag],
    parameters: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocSignature = js.native
  @JSName("createJSDocSignature")
  def createJSDocSignature_JSDocSignature(typeParameters: Unit, parameters: Array[JSDocParameterTag]): JSDocSignature = js.native
  /** @deprecated Use `factory.createJSDocSignature` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocSignature")
  def createJSDocSignature_JSDocSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.JSDocTemplateTag],
    parameters: Array[JSDocParameterTag]
  ): JSDocSignature = js.native
  
  /** @deprecated Use `factory.createJSDocUnknownTag` or the factory supplied by your transformation context instead. */
  def createJSDocTag(tagName: Identifier): JSDocUnknownTag = js.native
  def createJSDocTag(tagName: Identifier, comment: String): JSDocUnknownTag = js.native
  def createJSDocTag(tagName: Identifier, comment: NodeArray[JSDocComment]): JSDocUnknownTag = js.native
  /** @deprecated Use `factory.createJSDocUnknownTag` or the factory supplied by your transformation context instead. */
  def createJSDocTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocUnknownTag = js.native
  def createJSDocTag(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, comment: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocUnknownTag = js.native
  def createJSDocTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocUnknownTag = js.native
  
  def createJSDocTemplateTag(tagName: Unit, constraint: Unit, typeParameters: Array[TypeParameterDeclaration]): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(tagName: Unit, constraint: Unit, typeParameters: Array[TypeParameterDeclaration], comment: String): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: NodeArray[JSDocComment]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: JSDocTypeExpression,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: JSDocTypeExpression,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: String
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: JSDocTypeExpression,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: NodeArray[JSDocComment]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    typeParameters: Array[TypeParameterDeclaration]
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    typeParameters: Array[TypeParameterDeclaration],
    comment: String
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Unit,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    typeParameters: Array[TypeParameterDeclaration],
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Identifier,
    constraint: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Identifier,
    constraint: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: String
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Identifier,
    constraint: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: NodeArray[JSDocComment]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  /** @deprecated Use `factory.createJSDocTemplateTag` or the factory supplied by your transformation context instead. */
  def createJSDocTemplateTag(
    tagName: Identifier,
    constraint: JSDocTypeExpression,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Identifier,
    constraint: JSDocTypeExpression,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: String
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: Identifier,
    constraint: JSDocTypeExpression,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: NodeArray[JSDocComment]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    typeParameters: Array[TypeParameterDeclaration]
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    comment: String
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocTemplateTag = js.native
  /** @deprecated Use `factory.createJSDocTemplateTag` or the factory supplied by your transformation context instead. */
  def createJSDocTemplateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    typeParameters: Array[TypeParameterDeclaration]
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    typeParameters: Array[TypeParameterDeclaration],
    comment: String
  ): JSDocTemplateTag = js.native
  def createJSDocTemplateTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    typeParameters: Array[TypeParameterDeclaration],
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): JSDocTemplateTag = js.native
  @JSName("createJSDocTemplateTag")
  def createJSDocTemplateTag_JSDocTemplateTag(
    tagName: Unit,
    constraint: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  @JSName("createJSDocTemplateTag")
  def createJSDocTemplateTag_JSDocTemplateTag(
    tagName: Unit,
    constraint: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    comment: String
  ): typings.typescriptNn5FuAjk.ts.JSDocTemplateTag = js.native
  
  def createJSDocThisTag(tagName: Unit, typeExpression: JSDocTypeExpression): JSDocThisTag = js.native
  def createJSDocThisTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: String): JSDocThisTag = js.native
  def createJSDocThisTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocThisTag = js.native
  def createJSDocThisTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag = js.native
  def createJSDocThisTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag = js.native
  def createJSDocThisTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag = js.native
  /** @deprecated Use `factory.createJSDocThisTag` or the factory supplied by your transformation context instead. */
  def createJSDocThisTag(tagName: Identifier, typeExpression: JSDocTypeExpression): JSDocThisTag = js.native
  def createJSDocThisTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: String): JSDocThisTag = js.native
  def createJSDocThisTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocThisTag = js.native
  /** @deprecated Use `factory.createJSDocThisTag` or the factory supplied by your transformation context instead. */
  def createJSDocThisTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag = js.native
  def createJSDocThisTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag = js.native
  def createJSDocThisTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag = js.native
  
  /** @deprecated Use `factory.createJSDocTypeExpression` or the factory supplied by your transformation context instead. */
  def createJSDocTypeExpression(`type`: TypeNode): JSDocTypeExpression = js.native
  /** @deprecated Use `factory.createJSDocTypeExpression` or the factory supplied by your transformation context instead. */
  def createJSDocTypeExpression(`type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression = js.native
  
  /** @deprecated Use `factory.createJSDocTypeLiteral` or the factory supplied by your transformation context instead. */
  def createJSDocTypeLiteral(): JSDocTypeLiteral = js.native
  def createJSDocTypeLiteral(jsDocPropertyTags: Unit, isArrayType: Boolean): JSDocTypeLiteral = js.native
  def createJSDocTypeLiteral(jsDocPropertyTags: Array[JSDocPropertyLikeTag]): JSDocTypeLiteral = js.native
  def createJSDocTypeLiteral(jsDocPropertyTags: Array[JSDocPropertyLikeTag], isArrayType: Boolean): JSDocTypeLiteral = js.native
  /** @deprecated Use `factory.createJSDocTypeLiteral` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocTypeLiteral")
  def createJSDocTypeLiteral_JSDocTypeLiteral(): typings.typescriptNn5FuAjk.ts.JSDocTypeLiteral = js.native
  @JSName("createJSDocTypeLiteral")
  def createJSDocTypeLiteral_JSDocTypeLiteral(jsDocPropertyTags: Unit, isArrayType: Boolean): typings.typescriptNn5FuAjk.ts.JSDocTypeLiteral = js.native
  @JSName("createJSDocTypeLiteral")
  def createJSDocTypeLiteral_JSDocTypeLiteral(jsDocPropertyTags: Array[typings.typescriptNn5FuAjk.ts.JSDocPropertyLikeTag]): typings.typescriptNn5FuAjk.ts.JSDocTypeLiteral = js.native
  @JSName("createJSDocTypeLiteral")
  def createJSDocTypeLiteral_JSDocTypeLiteral(jsDocPropertyTags: Array[typings.typescriptNn5FuAjk.ts.JSDocPropertyLikeTag], isArrayType: Boolean): typings.typescriptNn5FuAjk.ts.JSDocTypeLiteral = js.native
  
  def createJSDocTypeTag(tagName: Unit, typeExpression: JSDocTypeExpression): JSDocTypeTag = js.native
  def createJSDocTypeTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: String): JSDocTypeTag = js.native
  def createJSDocTypeTag(tagName: Unit, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocTypeTag = js.native
  def createJSDocTypeTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag = js.native
  def createJSDocTypeTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag = js.native
  def createJSDocTypeTag(
    tagName: Unit,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag = js.native
  /** @deprecated Use `factory.createJSDocTypeTag` or the factory supplied by your transformation context instead. */
  def createJSDocTypeTag(tagName: Identifier, typeExpression: JSDocTypeExpression): JSDocTypeTag = js.native
  def createJSDocTypeTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: String): JSDocTypeTag = js.native
  def createJSDocTypeTag(tagName: Identifier, typeExpression: JSDocTypeExpression, comment: NodeArray[JSDocComment]): JSDocTypeTag = js.native
  /** @deprecated Use `factory.createJSDocTypeTag` or the factory supplied by your transformation context instead. */
  def createJSDocTypeTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag = js.native
  def createJSDocTypeTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag = js.native
  def createJSDocTypeTag(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression,
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag = js.native
  
  /** @deprecated Use `factory.createJSDocTypedefTag` or the factory supplied by your transformation context instead. */
  def createJSDocTypedefTag(
    tagName: js.UndefOr[Identifier],
    typeExpression: js.UndefOr[typings.typescriptNn5FuAjk.ts.JSDocTypeLiteral | JSDocTypeExpression],
    fullName: js.UndefOr[Identifier | JSDocNamespaceDeclaration],
    comment: js.UndefOr[String | NodeArray[JSDocComment]]
  ): JSDocTypedefTag = js.native
  /** @deprecated Use `factory.createJSDocTypedefTag` or the factory supplied by your transformation context instead. */
  @JSName("createJSDocTypedefTag")
  def createJSDocTypedefTag_JSDocTypedefTag(
    tagName: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier],
    typeExpression: js.UndefOr[
      JSDocTypeLiteral | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeExpression
    ],
    fullName: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocNamespaceDeclaration
    ],
    comment: js.UndefOr[
      String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypedefTag = js.native
  
  /** @deprecated Use `factory.createJsxAttribute` or the factory supplied by your transformation context instead. */
  def createJsxAttribute(name: Identifier): JsxAttribute = js.native
  def createJsxAttribute(name: Identifier, initializer: JsxExpression): JsxAttribute = js.native
  def createJsxAttribute(name: Identifier, initializer: StringLiteral): JsxAttribute = js.native
  /** @deprecated Use `factory.createJsxAttribute` or the factory supplied by your transformation context instead. */
  def createJsxAttribute(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute = js.native
  def createJsxAttribute(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute = js.native
  def createJsxAttribute(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute = js.native
  
  /** @deprecated Use `factory.createJsxAttributes` or the factory supplied by your transformation context instead. */
  def createJsxAttributes(properties: Array[JsxAttributeLike]): JsxAttributes = js.native
  /** @deprecated Use `factory.createJsxAttributes` or the factory supplied by your transformation context instead. */
  @JSName("createJsxAttributes")
  def createJsxAttributes_JsxAttributes(properties: Array[typings.typescriptNn5FuAjk.ts.JsxAttributeLike]): typings.typescriptNn5FuAjk.ts.JsxAttributes = js.native
  
  /** @deprecated Use `factory.createJsxClosingElement` or the factory supplied by your transformation context instead. */
  def createJsxClosingElement(tagName: JsxTagNameExpression): JsxClosingElement = js.native
  /** @deprecated Use `factory.createJsxClosingElement` or the factory supplied by your transformation context instead. */
  def createJsxClosingElement(tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingElement = js.native
  
  /** @deprecated Use `factory.createJsxElement` or the factory supplied by your transformation context instead. */
  def createJsxElement(openingElement: JsxOpeningElement, children: Array[JsxChild], closingElement: JsxClosingElement): JsxElement = js.native
  /** @deprecated Use `factory.createJsxElement` or the factory supplied by your transformation context instead. */
  def createJsxElement(
    openingElement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement,
    children: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxChild],
    closingElement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingElement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxElement = js.native
  
  /** @deprecated Use `factory.createJsxExpression` or the factory supplied by your transformation context instead. */
  def createJsxExpression(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression = js.native
  def createJsxExpression(dotDotDotToken: Unit, expression: Expression): JsxExpression = js.native
  def createJsxExpression(dotDotDotToken: Unit, expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression = js.native
  def createJsxExpression(dotDotDotToken: DotDotDotToken): JsxExpression = js.native
  def createJsxExpression(dotDotDotToken: DotDotDotToken, expression: Expression): JsxExpression = js.native
  def createJsxExpression(dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression = js.native
  def createJsxExpression(
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression = js.native
  /** @deprecated Use `factory.createJsxExpression` or the factory supplied by your transformation context instead. */
  @JSName("createJsxExpression")
  def createJsxExpression_JsxExpression(): JsxExpression = js.native
  
  /** @deprecated Use `factory.createJsxFragment` or the factory supplied by your transformation context instead. */
  def createJsxFragment(
    openingFragment: JsxOpeningFragment,
    children: Array[JsxChild],
    closingFragment: JsxClosingFragment
  ): JsxFragment = js.native
  /** @deprecated Use `factory.createJsxFragment` or the factory supplied by your transformation context instead. */
  def createJsxFragment(
    openingFragment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningFragment,
    children: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxChild],
    closingFragment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingFragment
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxFragment = js.native
  
  /** @deprecated Use `factory.createJsxJsxClosingFragment` or the factory supplied by your transformation context instead. */
  def createJsxJsxClosingFragment(): JsxClosingFragment = js.native
  /** @deprecated Use `factory.createJsxJsxClosingFragment` or the factory supplied by your transformation context instead. */
  @JSName("createJsxJsxClosingFragment")
  def createJsxJsxClosingFragment_JsxClosingFragment(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingFragment = js.native
  
  def createJsxOpeningElement(
    tagName: JsxTagNameExpression,
    typeArguments: Unit,
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxOpeningElement = js.native
  /** @deprecated Use `factory.createJsxOpeningElement` or the factory supplied by your transformation context instead. */
  def createJsxOpeningElement(
    tagName: JsxTagNameExpression,
    typeArguments: Array[TypeNode],
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxOpeningElement = js.native
  def createJsxOpeningElement(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Unit,
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement = js.native
  /** @deprecated Use `factory.createJsxOpeningElement` or the factory supplied by your transformation context instead. */
  def createJsxOpeningElement(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement = js.native
  
  /** @deprecated Use `factory.createJsxOpeningFragment` or the factory supplied by your transformation context instead. */
  def createJsxOpeningFragment(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningFragment = js.native
  /** @deprecated Use `factory.createJsxOpeningFragment` or the factory supplied by your transformation context instead. */
  @JSName("createJsxOpeningFragment")
  def createJsxOpeningFragment_JsxOpeningFragment(): JsxOpeningFragment = js.native
  
  def createJsxSelfClosingElement(
    tagName: JsxTagNameExpression,
    typeArguments: Unit,
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxSelfClosingElement = js.native
  /** @deprecated Use `factory.createJsxSelfClosingElement` or the factory supplied by your transformation context instead. */
  def createJsxSelfClosingElement(
    tagName: JsxTagNameExpression,
    typeArguments: Array[TypeNode],
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxSelfClosingElement = js.native
  def createJsxSelfClosingElement(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Unit,
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSelfClosingElement = js.native
  /** @deprecated Use `factory.createJsxSelfClosingElement` or the factory supplied by your transformation context instead. */
  def createJsxSelfClosingElement(
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSelfClosingElement = js.native
  
  /** @deprecated Use `factory.createJsxSpreadAttribute` or the factory supplied by your transformation context instead. */
  def createJsxSpreadAttribute(expression: Expression): JsxSpreadAttribute = js.native
  /** @deprecated Use `factory.createJsxSpreadAttribute` or the factory supplied by your transformation context instead. */
  def createJsxSpreadAttribute(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSpreadAttribute = js.native
  
  /** @deprecated Use `factory.createJsxText` or the factory supplied by your transformation context instead. */
  def createJsxText(text: String): JsxText = js.native
  def createJsxText(text: String, containsOnlyTriviaWhiteSpaces: Boolean): JsxText = js.native
  /** @deprecated Use `factory.createJsxText` or the factory supplied by your transformation context instead. */
  @JSName("createJsxText")
  def createJsxText_JsxText(text: String): typings.typescriptNn5FuAjk.ts.JsxText = js.native
  @JSName("createJsxText")
  def createJsxText_JsxText(text: String, containsOnlyTriviaWhiteSpaces: Boolean): typings.typescriptNn5FuAjk.ts.JsxText = js.native
  
  /** @deprecated Use `factory.createKeywordTypeNode` or the factory supplied by your transformation context instead. */
  def createKeywordTypeNode[TKind /* <: KeywordTypeSyntaxKind */](kind: TKind): KeywordTypeNode[TKind] = js.native
  /** @deprecated Use `factory.createKeywordTypeNode` or the factory supplied by your transformation context instead. */
  @JSName("createKeywordTypeNode")
  def createKeywordTypeNode_TKind_KeywordTypeSyntaxKind_KeywordTypeNode[TKind /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.KeywordTypeSyntaxKind */](kind: TKind): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.KeywordTypeNode[TKind] = js.native
  
  /** @deprecated Use `factory.createLabelStatement` or the factory supplied by your transformation context instead. */
  def createLabel(label: String, statement: Statement): LabeledStatement = js.native
  /** @deprecated Use `factory.createLabelStatement` or the factory supplied by your transformation context instead. */
  def createLabel(label: String, statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LabeledStatement = js.native
  def createLabel(label: Identifier, statement: Statement): LabeledStatement = js.native
  def createLabel(
    label: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LabeledStatement = js.native
  
  def createLanguageService(host: LanguageServiceHost): LanguageService = js.native
  def createLanguageService(host: LanguageServiceHost, documentRegistry: Unit, syntaxOnlyOrLanguageServiceMode: Boolean): LanguageService = js.native
  def createLanguageService(
    host: LanguageServiceHost,
    documentRegistry: Unit,
    syntaxOnlyOrLanguageServiceMode: LanguageServiceMode
  ): LanguageService = js.native
  def createLanguageService(host: LanguageServiceHost, documentRegistry: typings.typescriptNn5FuAjk.ts.DocumentRegistry): LanguageService = js.native
  def createLanguageService(
    host: LanguageServiceHost,
    documentRegistry: typings.typescriptNn5FuAjk.ts.DocumentRegistry,
    syntaxOnlyOrLanguageServiceMode: Boolean
  ): LanguageService = js.native
  def createLanguageService(
    host: LanguageServiceHost,
    documentRegistry: typings.typescriptNn5FuAjk.ts.DocumentRegistry,
    syntaxOnlyOrLanguageServiceMode: LanguageServiceMode
  ): LanguageService = js.native
  def createLanguageService(host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceHost): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageService = js.native
  def createLanguageService(
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceHost,
    documentRegistry: Unit,
    syntaxOnlyOrLanguageServiceMode: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageService = js.native
  def createLanguageService(
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceHost,
    documentRegistry: Unit,
    syntaxOnlyOrLanguageServiceMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceMode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageService = js.native
  def createLanguageService(
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceHost,
    documentRegistry: DocumentRegistry
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageService = js.native
  def createLanguageService(
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceHost,
    documentRegistry: DocumentRegistry,
    syntaxOnlyOrLanguageServiceMode: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageService = js.native
  def createLanguageService(
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceHost,
    documentRegistry: DocumentRegistry,
    syntaxOnlyOrLanguageServiceMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageServiceMode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageService = js.native
  
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: IScriptSnapshot,
    scriptTargetOrOptions: CreateSourceFileOptions,
    version: String,
    setNodeParents: Boolean
  ): SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: IScriptSnapshot,
    scriptTargetOrOptions: CreateSourceFileOptions,
    version: String,
    setNodeParents: Boolean,
    scriptKind: ScriptKind
  ): SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: IScriptSnapshot,
    scriptTargetOrOptions: ScriptTarget,
    version: String,
    setNodeParents: Boolean
  ): SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: IScriptSnapshot,
    scriptTargetOrOptions: ScriptTarget,
    version: String,
    setNodeParents: Boolean,
    scriptKind: ScriptKind
  ): SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    scriptTargetOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateSourceFileOptions,
    version: String,
    setNodeParents: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    scriptTargetOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateSourceFileOptions,
    version: String,
    setNodeParents: Boolean,
    scriptKind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptKind
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    scriptTargetOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    version: String,
    setNodeParents: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createLanguageServiceSourceFile(
    fileName: String,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    scriptTargetOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    version: String,
    setNodeParents: Boolean,
    scriptKind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptKind
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  
  /** @deprecated Use `factory.createLessThan` or the factory supplied by your transformation context instead. */
  def createLessThan(left: Expression, right: Expression): Expression = js.native
  /** @deprecated Use `factory.createLessThan` or the factory supplied by your transformation context instead. */
  def createLessThan(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression = js.native
  
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  def createLiteral(value: String): StringLiteral = js.native
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  def createLiteral(value: Boolean): BooleanLiteral = js.native
  def createLiteral(value: Double): PrimaryExpression = js.native
  def createLiteral(value: Identifier): StringLiteral = js.native
  def createLiteral(value: NoSubstitutionTemplateLiteral): StringLiteral = js.native
  def createLiteral(value: NumericLiteral): StringLiteral = js.native
  def createLiteral(value: PseudoBigInt): NumericLiteral = js.native
  def createLiteral(value: StringLiteral): StringLiteral = js.native
  def createLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  def createLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NoSubstitutionTemplateLiteral): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  def createLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  def createLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PseudoBigInt): PrimaryExpression = js.native
  def createLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  
  def createLiteralTypeNode(literal: BooleanLiteral): LiteralTypeNode = js.native
  /** @deprecated Use `factory.createLiteralTypeNode` or the factory supplied by your transformation context instead. */
  def createLiteralTypeNode(literal: LiteralExpression): LiteralTypeNode = js.native
  def createLiteralTypeNode(literal: NullLiteral): LiteralTypeNode = js.native
  def createLiteralTypeNode(literal: PrefixUnaryExpression): LiteralTypeNode = js.native
  def createLiteralTypeNode(literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BooleanLiteral): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  /** @deprecated Use `factory.createLiteralTypeNode` or the factory supplied by your transformation context instead. */
  def createLiteralTypeNode(literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralExpression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  def createLiteralTypeNode(literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NullLiteral): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  def createLiteralTypeNode(literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryExpression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  @JSName("createLiteral")
  def createLiteral_BooleanLiteral(value: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BooleanLiteral = js.native
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  @JSName("createLiteral")
  def createLiteral_NumericLiteral(value: Double): NumericLiteral = js.native
  @JSName("createLiteral")
  def createLiteral_NumericLiteral(value: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PseudoBigInt): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral = js.native
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  @JSName("createLiteral")
  def createLiteral_NumericLiteral_NumericLiteral(value: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral = js.native
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  @JSName("createLiteral")
  def createLiteral_PrimaryExpression(value: String): PrimaryExpression = js.native
  @JSName("createLiteral")
  def createLiteral_PrimaryExpression(value: Boolean): PrimaryExpression = js.native
  @JSName("createLiteral")
  def createLiteral_PrimaryExpression(value: Double): typings.typescriptNn5FuAjk.ts.PrimaryExpression = js.native
  @JSName("createLiteral")
  def createLiteral_PrimaryExpression(value: PseudoBigInt): typings.typescriptNn5FuAjk.ts.PrimaryExpression = js.native
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  @JSName("createLiteral")
  def createLiteral_PrimaryExpression_PrimaryExpression(value: String): typings.typescriptNn5FuAjk.ts.PrimaryExpression = js.native
  @JSName("createLiteral")
  def createLiteral_PrimaryExpression_PrimaryExpression(value: Boolean): typings.typescriptNn5FuAjk.ts.PrimaryExpression = js.native
  /** @deprecated Use `factory.createStringLiteral`, `factory.createStringLiteralFromNode`, `factory.createNumericLiteral`, `factory.createBigIntLiteral`, `factory.createTrue`, `factory.createFalse`, or the factory supplied by your transformation context instead. */
  @JSName("createLiteral")
  def createLiteral_StringLiteral(value: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  
  /** @deprecated Use `factory.createLogicalAnd` or the factory supplied by your transformation context instead. */
  def createLogicalAnd(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createLogicalAnd` or the factory supplied by your transformation context instead. */
  def createLogicalAnd(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createLogicalNot` or the factory supplied by your transformation context instead. */
  def createLogicalNot(operand: Expression): PrefixUnaryExpression = js.native
  /** @deprecated Use `factory.createLogicalNot` or the factory supplied by your transformation context instead. */
  def createLogicalNot(operand: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryExpression = js.native
  
  /** @deprecated Use `factory.createLogicalOr` or the factory supplied by your transformation context instead. */
  def createLogicalOr(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createLogicalOr` or the factory supplied by your transformation context instead. */
  def createLogicalOr(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createLoopVariable` or the factory supplied by your transformation context instead. */
  def createLoopVariable(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  def createLoopVariable(reservedInNestedScopes: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.createLoopVariable` or the factory supplied by your transformation context instead. */
  @JSName("createLoopVariable")
  def createLoopVariable_Identifier(): Identifier = js.native
  @JSName("createLoopVariable")
  def createLoopVariable_Identifier(reservedInNestedScopes: Boolean): Identifier = js.native
  
  /** @deprecated Use `factory.createMappedTypeNode` or the factory supplied by your transformation context instead. */
  def createMappedTypeNode(
    readonlyToken: js.UndefOr[ReadonlyKeyword | PlusToken | MinusToken],
    typeParameter: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    nameType: js.UndefOr[TypeNode],
    questionToken: js.UndefOr[QuestionToken | PlusToken | MinusToken],
    `type`: js.UndefOr[TypeNode],
    members: js.UndefOr[NodeArray[typings.typescriptNn5FuAjk.ts.TypeElement]]
  ): MappedTypeNode = js.native
  /** @deprecated Use `factory.createMappedTypeNode` or the factory supplied by your transformation context instead. */
  def createMappedTypeNode(
    readonlyToken: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReadonlyKeyword | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PlusToken | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MinusToken
    ],
    typeParameter: TypeParameterDeclaration,
    nameType: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    questionToken: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PlusToken | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MinusToken
    ],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    members: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeElement]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MappedTypeNode = js.native
  
  /** @deprecated Use `factory.createMetaProperty` or the factory supplied by your transformation context instead. */
  def createMetaProperty(keywordToken: ImportKeyword, name: Identifier): MetaProperty = js.native
  def createMetaProperty(keywordToken: NewKeyword, name: Identifier): MetaProperty = js.native
  /** @deprecated Use `factory.createMetaProperty` or the factory supplied by your transformation context instead. */
  def createMetaProperty(
    keywordToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.ImportKeyword,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MetaProperty = js.native
  def createMetaProperty(
    keywordToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.NewKeyword,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MetaProperty = js.native
  
  /** @deprecated Use `factory.createMethodDeclaration` or the factory supplied by your transformation context instead. */
  def createMethod(
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    asteriskToken: js.UndefOr[AsteriskToken],
    name: String | PropertyName,
    questionToken: js.UndefOr[QuestionToken],
    typeParameters: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: js.UndefOr[TypeNode],
    body: js.UndefOr[Block]
  ): MethodDeclaration = js.native
  
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: String
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: String,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: String
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: String,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: String
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: String,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  /** @deprecated Use `factory.createMethodSignature` or the factory supplied by your transformation context instead. */
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: String
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: String,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName
  ): MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  /** @deprecated Use `factory.createMethodSignature` or the factory supplied by your transformation context instead. */
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def createMethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  @JSName("createMethodSignature")
  def createMethodSignature_MethodSignature(typeParameters: Unit, parameters: Array[ParameterDeclaration], `type`: Unit, name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  @JSName("createMethodSignature")
  def createMethodSignature_MethodSignature(
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    name: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  
  /** @deprecated Use `factory.createMethodDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createMethod")
  def createMethod_MethodDeclaration(
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    asteriskToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken],
    name: String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken],
    typeParameters: js.UndefOr[Array[TypeParameterDeclaration]],
    parameters: Array[ParameterDeclaration],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    body: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodDeclaration = js.native
  
  /** @deprecated Use `factory.createModifier` or the factory supplied by your transformation context instead. */
  def createModifier[T /* <: ModifierSyntaxKind */](kind: T): ModifierToken[T] = js.native
  /** @deprecated Use `factory.createModifier` or the factory supplied by your transformation context instead. */
  @JSName("createModifier")
  def createModifier_T_ModifierSyntaxKind_ModifierToken[T /* <: typings.typescriptNn5FuAjk.ts.ModifierSyntaxKind */](kind: T): typings.typescriptNn5FuAjk.ts.ModifierToken[T] = js.native
  
  /** @deprecated Use `factory.createModifiersFromModifierFlags` or the factory supplied by your transformation context instead. */
  def createModifiersFromModifierFlags(flags: ModifierFlags): js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]] = js.native
  /** @deprecated Use `factory.createModifiersFromModifierFlags` or the factory supplied by your transformation context instead. */
  def createModifiersFromModifierFlags(flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModifierFlags): js.UndefOr[Array[Modifier]] = js.native
  
  /** @deprecated Use `factory.createModuleBlock` or the factory supplied by your transformation context instead. */
  def createModuleBlock(statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): ModuleBlock = js.native
  /** @deprecated Use `factory.createModuleBlock` or the factory supplied by your transformation context instead. */
  @JSName("createModuleBlock")
  def createModuleBlock_ModuleBlock(statements: Array[Statement]): typings.typescriptNn5FuAjk.ts.ModuleBlock = js.native
  
  def createModuleDeclaration(decorators: Unit, modifiers: Unit, name: ModuleName): ModuleDeclaration = js.native
  def createModuleDeclaration(decorators: Unit, modifiers: Unit, name: ModuleName, body: Unit, flags: NodeFlags): ModuleDeclaration = js.native
  def createModuleDeclaration(decorators: Unit, modifiers: Unit, name: ModuleName, body: ModuleBody): ModuleDeclaration = js.native
  def createModuleDeclaration(decorators: Unit, modifiers: Unit, name: ModuleName, body: ModuleBody, flags: NodeFlags): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: Unit,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(decorators: Unit, modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: ModuleName): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: Unit,
    flags: NodeFlags
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: ModuleBody
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: ModuleBody,
    flags: NodeFlags
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: Unit,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator], modifiers: Unit, name: ModuleName): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: ModuleName,
    body: Unit,
    flags: NodeFlags
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: ModuleName,
    body: ModuleBody
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: ModuleName,
    body: ModuleBody,
    flags: NodeFlags
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: Unit,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  /** @deprecated Use `factory.createModuleDeclaration` or the factory supplied by your transformation context instead. */
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: Unit,
    flags: NodeFlags
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: ModuleBody
  ): ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: ModuleBody,
    flags: NodeFlags
  ): ModuleDeclaration = js.native
  /** @deprecated Use `factory.createModuleDeclaration` or the factory supplied by your transformation context instead. */
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: Unit,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def createModuleDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody,
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  
  def createModuleResolutionCache(currentDirectory: String, getCanonicalFileName: js.Function1[/* s */ String, String]): ModuleResolutionCache = js.native
  def createModuleResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: CompilerOptions
  ): typings.typescriptNn5FuAjk.ts.ModuleResolutionCache = js.native
  def createModuleResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): ModuleResolutionCache = js.native
  @JSName("createModuleResolutionCache")
  def createModuleResolutionCache_ModuleResolutionCache(currentDirectory: String, getCanonicalFileName: js.Function1[/* s */ String, String]): typings.typescriptNn5FuAjk.ts.ModuleResolutionCache = js.native
  
  /** @deprecated Use `factory.createNamedExports` or the factory supplied by your transformation context instead. */
  def createNamedExports(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier]): NamedExports = js.native
  /** @deprecated Use `factory.createNamedExports` or the factory supplied by your transformation context instead. */
  @JSName("createNamedExports")
  def createNamedExports_NamedExports(elements: Array[ExportSpecifier]): typings.typescriptNn5FuAjk.ts.NamedExports = js.native
  
  /** @deprecated Use `factory.createNamedImports` or the factory supplied by your transformation context instead. */
  def createNamedImports(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier]): NamedImports = js.native
  /** @deprecated Use `factory.createNamedImports` or the factory supplied by your transformation context instead. */
  @JSName("createNamedImports")
  def createNamedImports_NamedImports(elements: Array[ImportSpecifier]): typings.typescriptNn5FuAjk.ts.NamedImports = js.native
  
  /** @deprecated Use `factory.createNamespaceExport` or the factory supplied by your transformation context instead. */
  def createNamespaceExport(name: Identifier): NamespaceExport = js.native
  /** @deprecated Use `factory.createNamespaceExport` or the factory supplied by your transformation context instead. */
  def createNamespaceExport(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExport = js.native
  
  /** @deprecated Use `factory.createNamespaceExportDeclaration` or the factory supplied by your transformation context instead. */
  def createNamespaceExportDeclaration(name: String): NamespaceExportDeclaration = js.native
  def createNamespaceExportDeclaration(name: Identifier): NamespaceExportDeclaration = js.native
  def createNamespaceExportDeclaration(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExportDeclaration = js.native
  /** @deprecated Use `factory.createNamespaceExportDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createNamespaceExportDeclaration")
  def createNamespaceExportDeclaration_NamespaceExportDeclaration(name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExportDeclaration = js.native
  
  /** @deprecated Use `factory.createNamespaceImport` or the factory supplied by your transformation context instead. */
  def createNamespaceImport(name: Identifier): NamespaceImport = js.native
  /** @deprecated Use `factory.createNamespaceImport` or the factory supplied by your transformation context instead. */
  def createNamespaceImport(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceImport = js.native
  
  /** @deprecated Use `factory.createNewExpression` or the factory supplied by your transformation context instead. */
  def createNew(expression: Expression): NewExpression = js.native
  def createNew(expression: Expression, typeArguments: Unit, argumentsArray: Array[Expression]): NewExpression = js.native
  def createNew(expression: Expression, typeArguments: Array[TypeNode]): NewExpression = js.native
  def createNew(expression: Expression, typeArguments: Array[TypeNode], argumentsArray: Array[Expression]): NewExpression = js.native
  /** @deprecated Use `factory.createNewExpression` or the factory supplied by your transformation context instead. */
  def createNew(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  def createNew(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  def createNew(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  def createNew(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  
  /** @deprecated Use `factory.createNoSubstitutionTemplateLiteral` or the factory supplied by your transformation context instead. */
  def createNoSubstitutionTemplateLiteral(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NoSubstitutionTemplateLiteral = js.native
  def createNoSubstitutionTemplateLiteral(text: String, rawText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NoSubstitutionTemplateLiteral = js.native
  def createNoSubstitutionTemplateLiteral(text: Unit, rawText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NoSubstitutionTemplateLiteral = js.native
  /** @deprecated Use `factory.createNoSubstitutionTemplateLiteral` or the factory supplied by your transformation context instead. */
  @JSName("createNoSubstitutionTemplateLiteral")
  def createNoSubstitutionTemplateLiteral_NoSubstitutionTemplateLiteral(text: String): NoSubstitutionTemplateLiteral = js.native
  @JSName("createNoSubstitutionTemplateLiteral")
  def createNoSubstitutionTemplateLiteral_NoSubstitutionTemplateLiteral(text: String, rawText: String): NoSubstitutionTemplateLiteral = js.native
  @JSName("createNoSubstitutionTemplateLiteral")
  def createNoSubstitutionTemplateLiteral_NoSubstitutionTemplateLiteral(text: Unit, rawText: String): NoSubstitutionTemplateLiteral = js.native
  
  /** @deprecated Use an appropriate `factory` method instead. */
  def createNode(kind: SyntaxKind): Node = js.native
  def createNode(kind: SyntaxKind, pos: Any): Node = js.native
  def createNode(kind: SyntaxKind, pos: Any, end: Any): Node = js.native
  def createNode(kind: SyntaxKind, pos: Unit, end: Any): Node = js.native
  /** @deprecated Use an appropriate `factory` method instead. */
  def createNode(kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node = js.native
  def createNode(kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind, pos: Any): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node = js.native
  def createNode(kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind, pos: Any, end: Any): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node = js.native
  def createNode(kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind, pos: Unit, end: Any): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node = js.native
  
  /** @deprecated Use `factory.createNodeArray` or the factory supplied by your transformation context instead. */
  def createNodeArray[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def createNodeArray[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](elements: Unit, hasTrailingComma: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def createNodeArray[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](elements: Array[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def createNodeArray[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](elements: Array[T], hasTrailingComma: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  /** @deprecated Use `factory.createNodeArray` or the factory supplied by your transformation context instead. */
  @JSName("createNodeArray")
  def createNodeArray_T_Node_NodeArray[T /* <: Node */](): NodeArray[T] = js.native
  @JSName("createNodeArray")
  def createNodeArray_T_Node_NodeArray[T /* <: Node */](elements: Unit, hasTrailingComma: Boolean): NodeArray[T] = js.native
  @JSName("createNodeArray")
  def createNodeArray_T_Node_NodeArray[T /* <: Node */](elements: Array[T]): NodeArray[T] = js.native
  @JSName("createNodeArray")
  def createNodeArray_T_Node_NodeArray[T /* <: Node */](elements: Array[T], hasTrailingComma: Boolean): NodeArray[T] = js.native
  
  /** @deprecated Use `factory.createNonNullChain` or the factory supplied by your transformation context instead. */
  def createNonNullChain(expression: Expression): NonNullChain = js.native
  /** @deprecated Use `factory.createNonNullChain` or the factory supplied by your transformation context instead. */
  def createNonNullChain(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonNullChain = js.native
  
  /** @deprecated Use `factory.createNonNullExpression` or the factory supplied by your transformation context instead. */
  def createNonNullExpression(expression: Expression): NonNullExpression = js.native
  /** @deprecated Use `factory.createNonNullExpression` or the factory supplied by your transformation context instead. */
  def createNonNullExpression(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonNullExpression = js.native
  
  /** @deprecated Use `factory.createNotEmittedStatement` or the factory supplied by your transformation context instead. */
  def createNotEmittedStatement(original: Node): NotEmittedStatement = js.native
  /** @deprecated Use `factory.createNotEmittedStatement` or the factory supplied by your transformation context instead. */
  def createNotEmittedStatement(original: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NotEmittedStatement = js.native
  
  /** @deprecated Use `factory.createNull` or the factory supplied by your transformation context instead. */
  def createNull(): NullLiteral = js.native
  /** @deprecated Use `factory.createNull` or the factory supplied by your transformation context instead. */
  @JSName("createNull")
  def createNull_NullLiteral(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NullLiteral = js.native
  
  /** @deprecated Use `factory.createNumericLiteral` or the factory supplied by your transformation context instead. */
  def createNumericLiteral(value: String): NumericLiteral = js.native
  def createNumericLiteral(value: String, numericLiteralFlags: TokenFlags): NumericLiteral = js.native
  def createNumericLiteral(value: String, numericLiteralFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral = js.native
  def createNumericLiteral(value: Double): NumericLiteral = js.native
  def createNumericLiteral(value: Double, numericLiteralFlags: TokenFlags): NumericLiteral = js.native
  def createNumericLiteral(value: Double, numericLiteralFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral = js.native
  /** @deprecated Use `factory.createNumericLiteral` or the factory supplied by your transformation context instead. */
  @JSName("createNumericLiteral")
  def createNumericLiteral_NumericLiteral(value: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral = js.native
  @JSName("createNumericLiteral")
  def createNumericLiteral_NumericLiteral(value: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NumericLiteral = js.native
  
  /** @deprecated Use `factory.createObjectBindingPattern` or the factory supplied by your transformation context instead. */
  def createObjectBindingPattern(elements: Array[BindingElement]): ObjectBindingPattern = js.native
  /** @deprecated Use `factory.createObjectBindingPattern` or the factory supplied by your transformation context instead. */
  @JSName("createObjectBindingPattern")
  def createObjectBindingPattern_ObjectBindingPattern(elements: Array[typings.typescriptNn5FuAjk.ts.BindingElement]): typings.typescriptNn5FuAjk.ts.ObjectBindingPattern = js.native
  
  /** @deprecated Use `factory.createObjectLiteralExpression` or the factory supplied by your transformation context instead. */
  def createObjectLiteral(): ObjectLiteralExpression = js.native
  def createObjectLiteral(properties: Unit, multiLine: Boolean): ObjectLiteralExpression = js.native
  def createObjectLiteral(properties: Array[ObjectLiteralElementLike]): ObjectLiteralExpression = js.native
  def createObjectLiteral(properties: Array[ObjectLiteralElementLike], multiLine: Boolean): ObjectLiteralExpression = js.native
  /** @deprecated Use `factory.createObjectLiteralExpression` or the factory supplied by your transformation context instead. */
  @JSName("createObjectLiteral")
  def createObjectLiteral_ObjectLiteralExpression(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralExpression = js.native
  @JSName("createObjectLiteral")
  def createObjectLiteral_ObjectLiteralExpression(properties: Unit, multiLine: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralExpression = js.native
  @JSName("createObjectLiteral")
  def createObjectLiteral_ObjectLiteralExpression(properties: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralElementLike]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralExpression = js.native
  @JSName("createObjectLiteral")
  def createObjectLiteral_ObjectLiteralExpression(
    properties: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralElementLike],
    multiLine: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralExpression = js.native
  
  /** @deprecated Use `factory.createOmittedExpression` or the factory supplied by your transformation context instead. */
  def createOmittedExpression(): OmittedExpression = js.native
  /** @deprecated Use `factory.createOmittedExpression` or the factory supplied by your transformation context instead. */
  @JSName("createOmittedExpression")
  def createOmittedExpression_OmittedExpression(): typings.typescriptNn5FuAjk.ts.OmittedExpression = js.native
  
  /** @deprecated Use `factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic)` or the factory supplied by your transformation context instead. */
  def createOptimisticUniqueName(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic)` or the factory supplied by your transformation context instead. */
  @JSName("createOptimisticUniqueName")
  def createOptimisticUniqueName_Identifier(text: String): Identifier = js.native
  
  /** @deprecated Use `factory.createOptionalTypeNode` or the factory supplied by your transformation context instead. */
  def createOptionalTypeNode(`type`: TypeNode): OptionalTypeNode = js.native
  /** @deprecated Use `factory.createOptionalTypeNode` or the factory supplied by your transformation context instead. */
  def createOptionalTypeNode(`type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.OptionalTypeNode = js.native
  
  /** @deprecated Use `factory.createParameterDeclaration` or the factory supplied by your transformation context instead. */
  def createParameter(
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    dotDotDotToken: js.UndefOr[DotDotDotToken],
    name: String | BindingName,
    questionToken: js.UndefOr[QuestionToken],
    `type`: js.UndefOr[TypeNode],
    initializer: js.UndefOr[Expression]
  ): typings.typescriptNn5FuAjk.ts.ParameterDeclaration = js.native
  /** @deprecated Use `factory.createParameterDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createParameter")
  def createParameter_ParameterDeclaration(
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    dotDotDotToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken],
    name: String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    questionToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    initializer: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): ParameterDeclaration = js.native
  
  /** @deprecated Use `factory.createParenthesizedExpression` or the factory supplied by your transformation context instead. */
  def createParen(expression: Expression): ParenthesizedExpression = js.native
  /** @deprecated Use `factory.createParenthesizedExpression` or the factory supplied by your transformation context instead. */
  def createParen(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParenthesizedExpression = js.native
  
  /** @deprecated Use `factory.createParenthesizedType` or the factory supplied by your transformation context instead. */
  def createParenthesizedType(`type`: TypeNode): ParenthesizedTypeNode = js.native
  /** @deprecated Use `factory.createParenthesizedType` or the factory supplied by your transformation context instead. */
  def createParenthesizedType(`type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParenthesizedTypeNode = js.native
  
  /** @deprecated Use `factory.createPartiallyEmittedExpression` or the factory supplied by your transformation context instead. */
  def createPartiallyEmittedExpression(expression: Expression): PartiallyEmittedExpression = js.native
  def createPartiallyEmittedExpression(expression: Expression, original: Node): PartiallyEmittedExpression = js.native
  /** @deprecated Use `factory.createPartiallyEmittedExpression` or the factory supplied by your transformation context instead. */
  def createPartiallyEmittedExpression(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PartiallyEmittedExpression = js.native
  def createPartiallyEmittedExpression(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    original: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PartiallyEmittedExpression = js.native
  
  /** @deprecated Use `factory.createPostfixUnaryExpression` or the factory supplied by your transformation context instead. */
  def createPostfix(operand: Expression, operator: PostfixUnaryOperator): PostfixUnaryExpression = js.native
  /** @deprecated Use `factory.createPostfixUnaryExpression` or the factory supplied by your transformation context instead. */
  def createPostfix(
    operand: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PostfixUnaryOperator
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PostfixUnaryExpression = js.native
  
  /** @deprecated Use `factory.createPostfixIncrement` or the factory supplied by your transformation context instead. */
  def createPostfixIncrement(operand: Expression): PostfixUnaryExpression = js.native
  /** @deprecated Use `factory.createPostfixIncrement` or the factory supplied by your transformation context instead. */
  def createPostfixIncrement(operand: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PostfixUnaryExpression = js.native
  
  /** @deprecated Use `factory.createPrefixExpression` or the factory supplied by your transformation context instead. */
  def createPrefix(operator: PrefixUnaryOperator, operand: Expression): PrefixUnaryExpression = js.native
  /** @deprecated Use `factory.createPrefixExpression` or the factory supplied by your transformation context instead. */
  def createPrefix(
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryOperator,
    operand: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryExpression = js.native
  
  def createPrinter(): Printer = js.native
  def createPrinter(printerOptions: Unit, handlers: PrintHandlers): Printer = js.native
  def createPrinter(printerOptions: Unit, handlers: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrintHandlers): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Printer = js.native
  def createPrinter(printerOptions: PrinterOptions): Printer = js.native
  def createPrinter(printerOptions: PrinterOptions, handlers: PrintHandlers): Printer = js.native
  def createPrinter(printerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrinterOptions): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Printer = js.native
  def createPrinter(
    printerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrinterOptions,
    handlers: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrintHandlers
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Printer = js.native
  @JSName("createPrinter")
  def createPrinter_Printer(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Printer = js.native
  
  /** @deprecated Use `factory.createPrivateIdentifier` or the factory supplied by your transformation context instead. */
  def createPrivateIdentifier(text: String): PrivateIdentifier = js.native
  /** @deprecated Use `factory.createPrivateIdentifier` or the factory supplied by your transformation context instead. */
  @JSName("createPrivateIdentifier")
  def createPrivateIdentifier_PrivateIdentifier(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrivateIdentifier = js.native
  
  def createProgram(createProgramOptions: CreateProgramOptions): Program = js.native
  def createProgram(createProgramOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateProgramOptions): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(rootNames: Array[String], options: CompilerOptions): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: CompilerOptions,
    host: Unit,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): Program = js.native
  def createProgram(rootNames: Array[String], options: CompilerOptions, host: Unit, oldProgram: Program): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: CompilerOptions,
    host: Unit,
    oldProgram: Program,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: CompilerOptions,
    host: typings.typescriptNn5FuAjk.ts.CompilerHost
  ): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: CompilerOptions,
    host: typings.typescriptNn5FuAjk.ts.CompilerHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: CompilerOptions,
    host: typings.typescriptNn5FuAjk.ts.CompilerHost,
    oldProgram: Program
  ): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: CompilerOptions,
    host: typings.typescriptNn5FuAjk.ts.CompilerHost,
    oldProgram: Program,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: Unit,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: Unit,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: Unit,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: CompilerHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: CompilerHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: CompilerHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  def createProgram(
    rootNames: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: CompilerHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program = js.native
  
  /** @deprecated Use `factory.createPropertyDeclaration` or the factory supplied by your transformation context instead. */
  def createProperty(
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    name: String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionOrExclamationToken: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken | ExclamationToken
    ],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    initializer: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): PropertyDeclaration = js.native
  
  /** @deprecated Use `factory.createPropertyAccessExpression` or the factory supplied by your transformation context instead. */
  def createPropertyAccess(expression: Expression, name: String): PropertyAccessExpression = js.native
  def createPropertyAccess(expression: Expression, name: MemberName): PropertyAccessExpression = js.native
  /** @deprecated Use `factory.createPropertyAccessExpression` or the factory supplied by your transformation context instead. */
  def createPropertyAccess(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression, name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessExpression = js.native
  def createPropertyAccess(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MemberName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessExpression = js.native
  
  def createPropertyAccessChain(expression: Expression, questionDotToken: Unit, name: String): PropertyAccessChain = js.native
  def createPropertyAccessChain(expression: Expression, questionDotToken: Unit, name: MemberName): PropertyAccessChain = js.native
  /** @deprecated Use `factory.createPropertyAccessChain` or the factory supplied by your transformation context instead. */
  def createPropertyAccessChain(expression: Expression, questionDotToken: QuestionDotToken, name: String): PropertyAccessChain = js.native
  def createPropertyAccessChain(expression: Expression, questionDotToken: QuestionDotToken, name: MemberName): PropertyAccessChain = js.native
  def createPropertyAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    name: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain = js.native
  def createPropertyAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MemberName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain = js.native
  /** @deprecated Use `factory.createPropertyAccessChain` or the factory supplied by your transformation context instead. */
  def createPropertyAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    name: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain = js.native
  def createPropertyAccessChain(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MemberName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain = js.native
  
  /** @deprecated Use `factory.createPropertyAssignment` or the factory supplied by your transformation context instead. */
  def createPropertyAssignment(name: String, initializer: Expression): PropertyAssignment = js.native
  /** @deprecated Use `factory.createPropertyAssignment` or the factory supplied by your transformation context instead. */
  def createPropertyAssignment(name: String, initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAssignment = js.native
  def createPropertyAssignment(name: PropertyName, initializer: Expression): PropertyAssignment = js.native
  def createPropertyAssignment(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAssignment = js.native
  
  def createPropertySignature(modifiers: Unit, name: String): PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: String, questionToken: Unit, `type`: Unit, initializer: Expression): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: String, questionToken: Unit, `type`: TypeNode): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: String, questionToken: Unit, `type`: TypeNode, initializer: Expression): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: String, questionToken: QuestionToken): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: String, questionToken: QuestionToken, `type`: Unit, initializer: Expression): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: String, questionToken: QuestionToken, `type`: TypeNode): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: QuestionToken,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: PropertyName): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: PropertyName, questionToken: Unit, `type`: Unit, initializer: Expression): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: PropertyName, questionToken: Unit, `type`: TypeNode): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: PropertyName, questionToken: QuestionToken): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: PropertyName, questionToken: QuestionToken, `type`: TypeNode): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(modifiers: Unit, name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(modifiers: Array[Modifier], name: String): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: Unit,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: Unit,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: Unit,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: QuestionToken
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: QuestionToken,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: QuestionToken,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    questionToken: QuestionToken,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: String,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  /** @deprecated Use `factory.createPropertySignature` or the factory supplied by your transformation context instead. */
  def createPropertySignature(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: PropertyName): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  /** @deprecated Use `factory.createPropertySignature` or the factory supplied by your transformation context instead. */
  def createPropertySignature(modifiers: Array[Modifier], name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def createPropertySignature(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  @JSName("createPropertySignature")
  def createPropertySignature_PropertySignature(modifiers: Unit, name: String): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  @JSName("createPropertySignature")
  def createPropertySignature_PropertySignature(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: String): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  
  /** @deprecated Use `factory.createPropertyDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createProperty")
  def createProperty_PropertyDeclaration(
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    name: String | PropertyName,
    questionOrExclamationToken: js.UndefOr[QuestionToken | typings.typescriptNn5FuAjk.ts.ExclamationToken],
    `type`: js.UndefOr[TypeNode],
    initializer: js.UndefOr[Expression]
  ): typings.typescriptNn5FuAjk.ts.PropertyDeclaration = js.native
  
  /** @deprecated Use `factory.createQualifiedName` or the factory supplied by your transformation context instead. */
  def createQualifiedName(left: EntityName, right: String): QualifiedName = js.native
  def createQualifiedName(left: EntityName, right: Identifier): QualifiedName = js.native
  /** @deprecated Use `factory.createQualifiedName` or the factory supplied by your transformation context instead. */
  def createQualifiedName(left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName, right: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QualifiedName = js.native
  def createQualifiedName(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QualifiedName = js.native
  
  /** @deprecated Use `factory.createRegularExpressionLiteral` or the factory supplied by your transformation context instead. */
  def createRegularExpressionLiteral(text: String): RegularExpressionLiteral = js.native
  /** @deprecated Use `factory.createRegularExpressionLiteral` or the factory supplied by your transformation context instead. */
  @JSName("createRegularExpressionLiteral")
  def createRegularExpressionLiteral_RegularExpressionLiteral(text: String): typings.typescriptNn5FuAjk.ts.RegularExpressionLiteral = js.native
  
  /** @deprecated Use `factory.createRestTypeNode` or the factory supplied by your transformation context instead. */
  def createRestTypeNode(`type`: TypeNode): RestTypeNode = js.native
  /** @deprecated Use `factory.createRestTypeNode` or the factory supplied by your transformation context instead. */
  def createRestTypeNode(`type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.RestTypeNode = js.native
  
  /** @deprecated Use `factory.createReturnStatement` or the factory supplied by your transformation context instead. */
  def createReturn(): ReturnStatement = js.native
  def createReturn(expression: Expression): ReturnStatement = js.native
  def createReturn(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReturnStatement = js.native
  /** @deprecated Use `factory.createReturnStatement` or the factory supplied by your transformation context instead. */
  @JSName("createReturn")
  def createReturn_ReturnStatement(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReturnStatement = js.native
  
  def createScanner(languageVersion: ScriptTarget, skipTrivia: Boolean): Scanner = js.native
  def createScanner(languageVersion: ScriptTarget, skipTrivia: Boolean, languageVariant: Unit, textInitial: String): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: Unit,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: Unit,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: Unit,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: ErrorCallback
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: ErrorCallback,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: ErrorCallback,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: ErrorCallback,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: Unit,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: Unit,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: Unit,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: ErrorCallback
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: ErrorCallback,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: ErrorCallback,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: ErrorCallback,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(languageVersion: ScriptTarget, skipTrivia: Boolean, languageVariant: LanguageVariant): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: Unit,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: Unit,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: Unit,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: ErrorCallback
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: ErrorCallback,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: ErrorCallback,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: String,
    onError: ErrorCallback,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: Unit,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: Unit,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: Unit,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: ErrorCallback
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: ErrorCallback,
    start: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: ErrorCallback,
    start: Double,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: LanguageVariant,
    textInitial: Unit,
    onError: ErrorCallback,
    start: Unit,
    length: Double
  ): Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: Unit,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: Unit,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: Unit,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: Unit,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: Unit,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: Unit,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: Unit,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: Unit,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: Unit,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: Unit,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: String,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: Unit,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: Unit,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: Unit,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Double,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  def createScanner(
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    skipTrivia: Boolean,
    languageVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant,
    textInitial: Unit,
    onError: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ErrorCallback,
    start: Unit,
    length: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Scanner = js.native
  
  /**
    * Create the builder to manage semantic diagnostics and cache them
    */
  def createSemanticDiagnosticsBuilderProgram(newProgram: Program, host: BuilderProgramHost): SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(newProgram: Program, host: BuilderProgramHost, oldProgram: SemanticDiagnosticsBuilderProgram): SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(
    newProgram: Program,
    host: BuilderProgramHost,
    oldProgram: SemanticDiagnosticsBuilderProgram,
    configFileParsingDiagnostics: Array[Diagnostic]
  ): SemanticDiagnosticsBuilderProgram = js.native
  /**
    * Create the builder to manage semantic diagnostics and cache them
    */
  def createSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: Unit,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(
    newProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgramHost,
    oldProgram: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram,
    configFileParsingDiagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram = js.native
  def createSemanticDiagnosticsBuilderProgram(
    rootNames: js.UndefOr[Array[String]],
    options: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions],
    host: js.UndefOr[CompilerHost],
    oldProgram: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram
    ],
    configFileParsingDiagnostics: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]],
    projectReferences: js.UndefOr[Array[ProjectReference]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemanticDiagnosticsBuilderProgram = js.native
  @JSName("createSemanticDiagnosticsBuilderProgram")
  def createSemanticDiagnosticsBuilderProgram_SemanticDiagnosticsBuilderProgram(
    rootNames: js.UndefOr[Array[String]],
    options: js.UndefOr[CompilerOptions],
    host: js.UndefOr[typings.typescriptNn5FuAjk.ts.CompilerHost],
    oldProgram: js.UndefOr[SemanticDiagnosticsBuilderProgram],
    configFileParsingDiagnostics: js.UndefOr[Array[Diagnostic]],
    projectReferences: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.ProjectReference]]
  ): SemanticDiagnosticsBuilderProgram = js.native
  
  /** @deprecated Use `factory.createSemicolonClassElement` or the factory supplied by your transformation context instead. */
  def createSemicolonClassElement(): SemicolonClassElement = js.native
  /** @deprecated Use `factory.createSemicolonClassElement` or the factory supplied by your transformation context instead. */
  @JSName("createSemicolonClassElement")
  def createSemicolonClassElement_SemicolonClassElement(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SemicolonClassElement = js.native
  
  def createSetAccessor(decorators: Unit, modifiers: Unit, name: String, parameters: Array[ParameterDeclaration]): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  /** @deprecated Use `factory.createSetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def createSetAccessor(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  @JSName("createSetAccessor")
  def createSetAccessor_SetAccessorDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  @JSName("createSetAccessor")
  def createSetAccessor_SetAccessorDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  @JSName("createSetAccessor")
  def createSetAccessor_SetAccessorDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  /** @deprecated Use `factory.createSetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createSetAccessor")
  def createSetAccessor_SetAccessorDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  
  /** @deprecated Use `factory.createShorthandPropertyAssignment` or the factory supplied by your transformation context instead. */
  def createShorthandPropertyAssignment(name: String): ShorthandPropertyAssignment = js.native
  def createShorthandPropertyAssignment(name: String, objectAssignmentInitializer: Expression): typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment = js.native
  def createShorthandPropertyAssignment(
    name: String,
    objectAssignmentInitializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ShorthandPropertyAssignment = js.native
  def createShorthandPropertyAssignment(name: Identifier): typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment = js.native
  def createShorthandPropertyAssignment(name: Identifier, objectAssignmentInitializer: Expression): typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment = js.native
  def createShorthandPropertyAssignment(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): ShorthandPropertyAssignment = js.native
  def createShorthandPropertyAssignment(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    objectAssignmentInitializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ShorthandPropertyAssignment = js.native
  /** @deprecated Use `factory.createShorthandPropertyAssignment` or the factory supplied by your transformation context instead. */
  @JSName("createShorthandPropertyAssignment")
  def createShorthandPropertyAssignment_ShorthandPropertyAssignment(name: String): typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment = js.native
  
  def createSolutionBuilder[T /* <: BuilderProgram */](host: SolutionBuilderHost[T], rootNames: Array[String], defaultOptions: BuildOptions): SolutionBuilder[T] = js.native
  def createSolutionBuilder[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T],
    rootNames: Array[String],
    defaultOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuildOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilder[T] = js.native
  
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](system: Unit, createProgram: CreateProgram_[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](system: System): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](system: System, createProgram: Unit, reportDiagnostic: DiagnosticReporter): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](system: System, createProgram: CreateProgram[T]): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](system: System, createProgram: CreateProgram[T], reportDiagnostic: DiagnosticReporter): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System, createProgram: CreateProgram_[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  def createSolutionBuilderHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportErrorSummary: ReportEmitErrorSummary
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](system: Unit, createProgram: Unit, reportDiagnostic: DiagnosticReporter): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](system: Unit, createProgram: CreateProgram[T]): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](system: Unit, createProgram: CreateProgram[T], reportDiagnostic: DiagnosticReporter): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderHost[T] = js.native
  @JSName("createSolutionBuilderHost")
  def createSolutionBuilderHost_T_BuilderProgram_SolutionBuilderHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportErrorSummary: typings.typescriptNn5FuAjk.ts.ReportEmitErrorSummary
  ): SolutionBuilderHost[T] = js.native
  
  def createSolutionBuilderWithWatch[T /* <: BuilderProgram */](host: SolutionBuilderWithWatchHost[T], rootNames: Array[String], defaultOptions: BuildOptions): SolutionBuilder[T] = js.native
  def createSolutionBuilderWithWatch[T /* <: BuilderProgram */](
    host: SolutionBuilderWithWatchHost[T],
    rootNames: Array[String],
    defaultOptions: BuildOptions,
    baseWatchOptions: WatchOptions
  ): SolutionBuilder[T] = js.native
  def createSolutionBuilderWithWatch[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T],
    rootNames: Array[String],
    defaultOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuildOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilder[T] = js.native
  def createSolutionBuilderWithWatch[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T],
    rootNames: Array[String],
    defaultOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuildOptions,
    baseWatchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilder[T] = js.native
  
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: Unit, createProgram: Unit, reportDiagnostic: DiagnosticReporter): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: Unit, createProgram: CreateProgram[T]): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: Unit, createProgram: CreateProgram[T], reportDiagnostic: DiagnosticReporter): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: System): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: System, createProgram: Unit, reportDiagnostic: DiagnosticReporter): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: System, createProgram: CreateProgram[T]): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](system: System, createProgram: CreateProgram[T], reportDiagnostic: DiagnosticReporter): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: BuilderProgram */](
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportSolutionBuilderStatus: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System, createProgram: CreateProgram_[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  def createSolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](system: Unit, createProgram: CreateProgram_[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  @JSName("createSolutionBuilderWithWatchHost")
  def createSolutionBuilderWithWatchHost_T_BuilderProgram_SolutionBuilderWithWatchHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    system: Unit,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportSolutionBuilderStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SolutionBuilderWithWatchHost[T] = js.native
  
  def createSourceFile(fileName: String, sourceText: String, languageVersionOrOptions: CreateSourceFileOptions): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: CreateSourceFileOptions,
    setParentNodes: Boolean
  ): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: CreateSourceFileOptions,
    setParentNodes: Boolean,
    scriptKind: ScriptKind
  ): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: CreateSourceFileOptions,
    setParentNodes: Unit,
    scriptKind: ScriptKind
  ): SourceFile = js.native
  def createSourceFile(fileName: String, sourceText: String, languageVersionOrOptions: ScriptTarget): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: ScriptTarget,
    setParentNodes: Boolean
  ): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: ScriptTarget,
    setParentNodes: Boolean,
    scriptKind: ScriptKind
  ): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: ScriptTarget,
    setParentNodes: Unit,
    scriptKind: ScriptKind
  ): SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateSourceFileOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateSourceFileOptions,
    setParentNodes: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateSourceFileOptions,
    setParentNodes: Boolean,
    scriptKind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptKind
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CreateSourceFileOptions,
    setParentNodes: Unit,
    scriptKind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptKind
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    setParentNodes: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    setParentNodes: Boolean,
    scriptKind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptKind
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def createSourceFile(
    fileName: String,
    sourceText: String,
    languageVersionOrOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    setParentNodes: Unit,
    scriptKind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptKind
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  
  /**
    * Create an external source map source file reference
    */
  def createSourceMapSource(fileName: String, text: String): SourceMapSource = js.native
  def createSourceMapSource(fileName: String, text: String, skipTrivia: js.Function1[/* pos */ Double, Double]): SourceMapSource = js.native
  /**
    * Create an external source map source file reference
    */
  @JSName("createSourceMapSource")
  def createSourceMapSource_SourceMapSource(fileName: String, text: String): typings.typescriptNn5FuAjk.ts.SourceMapSource = js.native
  @JSName("createSourceMapSource")
  def createSourceMapSource_SourceMapSource(fileName: String, text: String, skipTrivia: js.Function1[/* pos */ Double, Double]): typings.typescriptNn5FuAjk.ts.SourceMapSource = js.native
  
  /** @deprecated Use `factory.createSpreadExpression` or the factory supplied by your transformation context instead. */
  def createSpread(expression: Expression): SpreadElement = js.native
  /** @deprecated Use `factory.createSpreadExpression` or the factory supplied by your transformation context instead. */
  def createSpread(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SpreadElement = js.native
  
  /** @deprecated Use `factory.createSpreadAssignment` or the factory supplied by your transformation context instead. */
  def createSpreadAssignment(expression: Expression): SpreadAssignment = js.native
  /** @deprecated Use `factory.createSpreadAssignment` or the factory supplied by your transformation context instead. */
  def createSpreadAssignment(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SpreadAssignment = js.native
  
  /** @deprecated Use `factory.createExpressionStatement` or the factory supplied by your transformation context instead. */
  def createStatement(expression: Expression): ExpressionStatement = js.native
  /** @deprecated Use `factory.createExpressionStatement` or the factory supplied by your transformation context instead. */
  def createStatement(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionStatement = js.native
  
  /** @deprecated Use `factory.createStrictEquality` or the factory supplied by your transformation context instead. */
  def createStrictEquality(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createStrictEquality` or the factory supplied by your transformation context instead. */
  def createStrictEquality(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createStrictInequality` or the factory supplied by your transformation context instead. */
  def createStrictInequality(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createStrictInequality` or the factory supplied by your transformation context instead. */
  def createStrictInequality(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createStringLiteral` or the factory supplied by your transformation context instead. */
  def createStringLiteral(text: String): StringLiteral = js.native
  def createStringLiteral(text: String, isSingleQuote: Boolean): StringLiteral = js.native
  def createStringLiteral(text: String, isSingleQuote: Boolean, hasExtendedUnicodeEscape: Boolean): StringLiteral = js.native
  def createStringLiteral(text: String, isSingleQuote: Unit, hasExtendedUnicodeEscape: Boolean): StringLiteral = js.native
  
  /** @deprecated Use `factory.createStringLiteralFromNode` or the factory supplied by your transformation context instead. */
  def createStringLiteralFromNode(sourceNode: PropertyNameLiteral): StringLiteral = js.native
  def createStringLiteralFromNode(sourceNode: PropertyNameLiteral, isSingleQuote: Boolean): StringLiteral = js.native
  /** @deprecated Use `factory.createStringLiteralFromNode` or the factory supplied by your transformation context instead. */
  def createStringLiteralFromNode(sourceNode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyNameLiteral): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  def createStringLiteralFromNode(
    sourceNode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyNameLiteral,
    isSingleQuote: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  
  /** @deprecated Use `factory.createStringLiteral` or the factory supplied by your transformation context instead. */
  @JSName("createStringLiteral")
  def createStringLiteral_StringLiteral(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  @JSName("createStringLiteral")
  def createStringLiteral_StringLiteral(text: String, isSingleQuote: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  @JSName("createStringLiteral")
  def createStringLiteral_StringLiteral(text: String, isSingleQuote: Boolean, hasExtendedUnicodeEscape: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  @JSName("createStringLiteral")
  def createStringLiteral_StringLiteral(text: String, isSingleQuote: Unit, hasExtendedUnicodeEscape: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral = js.native
  
  /** @deprecated Use `factory.createSubtract` or the factory supplied by your transformation context instead. */
  def createSubtract(left: Expression, right: Expression): BinaryExpression = js.native
  /** @deprecated Use `factory.createSubtract` or the factory supplied by your transformation context instead. */
  def createSubtract(
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  /** @deprecated Use `factory.createSuper` or the factory supplied by your transformation context instead. */
  def createSuper(): SuperExpression = js.native
  /** @deprecated Use `factory.createSuper` or the factory supplied by your transformation context instead. */
  @JSName("createSuper")
  def createSuper_SuperExpression(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SuperExpression = js.native
  
  /** @deprecated Use `factory.createSwitchStatement` or the factory supplied by your transformation context instead. */
  def createSwitch(expression: Expression, caseBlock: CaseBlock): SwitchStatement = js.native
  /** @deprecated Use `factory.createSwitchStatement` or the factory supplied by your transformation context instead. */
  def createSwitch(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    caseBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseBlock
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SwitchStatement = js.native
  
  /** @deprecated Use `factory.createTaggedTemplate` or the factory supplied by your transformation context instead. */
  def createTaggedTemplate(tag: Expression, template: TemplateLiteral): TaggedTemplateExpression = js.native
  def createTaggedTemplate(tag: Expression, typeArguments: Unit, template: TemplateLiteral): TaggedTemplateExpression = js.native
  /** @deprecated Use `factory.createTaggedTemplate` or the factory supplied by your transformation context instead. */
  def createTaggedTemplate(tag: Expression, typeArguments: Array[TypeNode], template: TemplateLiteral): TaggedTemplateExpression = js.native
  /** @deprecated Use `factory.createTaggedTemplate` or the factory supplied by your transformation context instead. */
  def createTaggedTemplate(
    tag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    template: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression = js.native
  def createTaggedTemplate(
    tag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Unit,
    template: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression = js.native
  /** @deprecated Use `factory.createTaggedTemplate` or the factory supplied by your transformation context instead. */
  def createTaggedTemplate(
    tag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    template: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression = js.native
  
  /** @deprecated Use `factory.createTempVariable` or the factory supplied by your transformation context instead. */
  def createTempVariable(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  def createTempVariable(
    recordTempVariable: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier, Unit]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.createTempVariable` or the factory supplied by your transformation context instead. */
  @JSName("createTempVariable")
  def createTempVariable_Identifier(): Identifier = js.native
  @JSName("createTempVariable")
  def createTempVariable_Identifier(recordTempVariable: js.Function1[/* node */ Identifier, Unit]): Identifier = js.native
  
  /** @deprecated Use `factory.createTemplateExpression` or the factory supplied by your transformation context instead. */
  def createTemplateExpression(head: TemplateHead, templateSpans: Array[TemplateSpan]): TemplateExpression = js.native
  /** @deprecated Use `factory.createTemplateExpression` or the factory supplied by your transformation context instead. */
  def createTemplateExpression(
    head: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead,
    templateSpans: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateExpression = js.native
  
  /** @deprecated Use `factory.createTemplateHead` or the factory supplied by your transformation context instead. */
  def createTemplateHead(text: String): TemplateHead = js.native
  def createTemplateHead(text: String, rawText: String): TemplateHead = js.native
  def createTemplateHead(text: String, rawText: String, templateFlags: TokenFlags): TemplateHead = js.native
  def createTemplateHead(
    text: String,
    rawText: String,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead = js.native
  def createTemplateHead(text: String, rawText: Unit, templateFlags: TokenFlags): TemplateHead = js.native
  def createTemplateHead(
    text: String,
    rawText: Unit,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead = js.native
  def createTemplateHead(text: Unit, rawText: String): TemplateHead = js.native
  def createTemplateHead(text: Unit, rawText: String, templateFlags: TokenFlags): TemplateHead = js.native
  def createTemplateHead(
    text: Unit,
    rawText: String,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead = js.native
  /** @deprecated Use `factory.createTemplateHead` or the factory supplied by your transformation context instead. */
  @JSName("createTemplateHead")
  def createTemplateHead_TemplateHead(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead = js.native
  @JSName("createTemplateHead")
  def createTemplateHead_TemplateHead(text: String, rawText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead = js.native
  @JSName("createTemplateHead")
  def createTemplateHead_TemplateHead(text: Unit, rawText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead = js.native
  
  /** @deprecated Use `factory.createTemplateMiddle` or the factory supplied by your transformation context instead. */
  def createTemplateMiddle(text: String): TemplateMiddle = js.native
  def createTemplateMiddle(text: String, rawText: String): TemplateMiddle = js.native
  def createTemplateMiddle(text: String, rawText: String, templateFlags: TokenFlags): typings.typescriptNn5FuAjk.ts.TemplateMiddle = js.native
  def createTemplateMiddle(
    text: String,
    rawText: String,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): TemplateMiddle = js.native
  def createTemplateMiddle(text: String, rawText: Unit, templateFlags: TokenFlags): typings.typescriptNn5FuAjk.ts.TemplateMiddle = js.native
  def createTemplateMiddle(
    text: String,
    rawText: Unit,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): TemplateMiddle = js.native
  def createTemplateMiddle(text: Unit, rawText: String): TemplateMiddle = js.native
  def createTemplateMiddle(text: Unit, rawText: String, templateFlags: TokenFlags): typings.typescriptNn5FuAjk.ts.TemplateMiddle = js.native
  def createTemplateMiddle(
    text: Unit,
    rawText: String,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): TemplateMiddle = js.native
  /** @deprecated Use `factory.createTemplateMiddle` or the factory supplied by your transformation context instead. */
  @JSName("createTemplateMiddle")
  def createTemplateMiddle_TemplateMiddle(text: String): typings.typescriptNn5FuAjk.ts.TemplateMiddle = js.native
  @JSName("createTemplateMiddle")
  def createTemplateMiddle_TemplateMiddle(text: String, rawText: String): typings.typescriptNn5FuAjk.ts.TemplateMiddle = js.native
  @JSName("createTemplateMiddle")
  def createTemplateMiddle_TemplateMiddle(text: Unit, rawText: String): typings.typescriptNn5FuAjk.ts.TemplateMiddle = js.native
  
  /** @deprecated Use `factory.createTemplateSpan` or the factory supplied by your transformation context instead. */
  def createTemplateSpan(expression: Expression, literal: typings.typescriptNn5FuAjk.ts.TemplateMiddle): TemplateSpan = js.native
  def createTemplateSpan(expression: Expression, literal: TemplateTail): TemplateSpan = js.native
  /** @deprecated Use `factory.createTemplateSpan` or the factory supplied by your transformation context instead. */
  def createTemplateSpan(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression, literal: TemplateMiddle): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan = js.native
  def createTemplateSpan(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan = js.native
  
  /** @deprecated Use `factory.createTemplateTail` or the factory supplied by your transformation context instead. */
  def createTemplateTail(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail = js.native
  def createTemplateTail(text: String, rawText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail = js.native
  def createTemplateTail(text: String, rawText: String, templateFlags: TokenFlags): TemplateTail = js.native
  def createTemplateTail(
    text: String,
    rawText: String,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail = js.native
  def createTemplateTail(text: String, rawText: Unit, templateFlags: TokenFlags): TemplateTail = js.native
  def createTemplateTail(
    text: String,
    rawText: Unit,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail = js.native
  def createTemplateTail(text: Unit, rawText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail = js.native
  def createTemplateTail(text: Unit, rawText: String, templateFlags: TokenFlags): TemplateTail = js.native
  def createTemplateTail(
    text: Unit,
    rawText: String,
    templateFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TokenFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail = js.native
  /** @deprecated Use `factory.createTemplateTail` or the factory supplied by your transformation context instead. */
  @JSName("createTemplateTail")
  def createTemplateTail_TemplateTail(text: String): TemplateTail = js.native
  @JSName("createTemplateTail")
  def createTemplateTail_TemplateTail(text: String, rawText: String): TemplateTail = js.native
  @JSName("createTemplateTail")
  def createTemplateTail_TemplateTail(text: Unit, rawText: String): TemplateTail = js.native
  
  def createTextChangeRange(span: TextSpan, newLength: Double): typings.typescriptNn5FuAjk.ts.TextChangeRange = js.native
  def createTextChangeRange(span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan, newLength: Double): TextChangeRange = js.native
  
  def createTextSpan(start: Double, length: Double): TextSpan = js.native
  
  def createTextSpanFromBounds(start: Double, end: Double): TextSpan = js.native
  @JSName("createTextSpanFromBounds")
  def createTextSpanFromBounds_TextSpan(start: Double, end: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan = js.native
  
  @JSName("createTextSpan")
  def createTextSpan_TextSpan(start: Double, length: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan = js.native
  
  /** @deprecated Use `factory.createThis` or the factory supplied by your transformation context instead. */
  def createThis(): ThisExpression = js.native
  
  /** @deprecated Use `factory.createThisTypeNode` or the factory supplied by your transformation context instead. */
  def createThisTypeNode(): ThisTypeNode = js.native
  /** @deprecated Use `factory.createThisTypeNode` or the factory supplied by your transformation context instead. */
  @JSName("createThisTypeNode")
  def createThisTypeNode_ThisTypeNode(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode = js.native
  
  /** @deprecated Use `factory.createThis` or the factory supplied by your transformation context instead. */
  @JSName("createThis")
  def createThis_ThisExpression(): typings.typescriptNn5FuAjk.ts.ThisExpression = js.native
  
  /** @deprecated Use `factory.createThrowStatement` or the factory supplied by your transformation context instead. */
  def createThrow(expression: Expression): ThrowStatement = js.native
  /** @deprecated Use `factory.createThrowStatement` or the factory supplied by your transformation context instead. */
  def createThrow(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThrowStatement = js.native
  
  /** @deprecated Use `factory.createToken` or the factory supplied by your transformation context instead. */
  def createToken[TKind /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind */](kind: TKind): Token[TKind] = js.native
  /** @deprecated Use `factory.createToken` or the factory supplied by your transformation context instead. */
  @JSName("createToken")
  def createToken_TKind_SyntaxKind_Token[TKind /* <: SyntaxKind */](kind: TKind): typings.typescriptNn5FuAjk.ts.Token[TKind] = js.native
  
  /** @deprecated Use `factory.createTrue` or the factory supplied by your transformation context instead. */
  def createTrue(): TrueLiteral = js.native
  /** @deprecated Use `factory.createTrue` or the factory supplied by your transformation context instead. */
  @JSName("createTrue")
  def createTrue_TrueLiteral(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TrueLiteral = js.native
  
  /** @deprecated Use `factory.createTryStatement` or the factory supplied by your transformation context instead. */
  def createTry(tryBlock: Block): TryStatement = js.native
  def createTry(tryBlock: Block, catchClause: Unit, finallyBlock: Block): TryStatement = js.native
  def createTry(tryBlock: Block, catchClause: CatchClause): TryStatement = js.native
  def createTry(tryBlock: Block, catchClause: CatchClause, finallyBlock: Block): TryStatement = js.native
  /** @deprecated Use `factory.createTryStatement` or the factory supplied by your transformation context instead. */
  def createTry(tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  def createTry(
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    catchClause: Unit,
    finallyBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  def createTry(
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    catchClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  def createTry(
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    catchClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause,
    finallyBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  
  /** @deprecated Use `factory.createTupleTypeNode` or the factory supplied by your transformation context instead. */
  def createTupleTypeNode(elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode | NamedTupleMember]): TupleTypeNode = js.native
  /** @deprecated Use `factory.createTupleTypeNode` or the factory supplied by your transformation context instead. */
  @JSName("createTupleTypeNode")
  def createTupleTypeNode_TupleTypeNode(elements: Array[TypeNode | typings.typescriptNn5FuAjk.ts.NamedTupleMember]): typings.typescriptNn5FuAjk.ts.TupleTypeNode = js.native
  
  def createTypeAliasDeclaration(decorators: Unit, modifiers: Unit, name: String, typeParameters: Unit, `type`: TypeNode): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(decorators: Unit, modifiers: Unit, name: Identifier, typeParameters: Unit, `type`: TypeNode): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  /** @deprecated Use `factory.createTypeAliasDeclaration` or the factory supplied by your transformation context instead. */
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  /** @deprecated Use `factory.createTypeAliasDeclaration` or the factory supplied by your transformation context instead. */
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: String,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def createTypeAliasDeclaration(
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  
  /** @deprecated Use `factory.createTypeAssertion` or the factory supplied by your transformation context instead. */
  def createTypeAssertion(`type`: TypeNode, expression: Expression): TypeAssertion = js.native
  /** @deprecated Use `factory.createTypeAssertion` or the factory supplied by your transformation context instead. */
  def createTypeAssertion(
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAssertion = js.native
  
  /** @deprecated Use `factory.createTypeLiteralNode` or the factory supplied by your transformation context instead. */
  def createTypeLiteralNode(): TypeLiteralNode = js.native
  def createTypeLiteralNode(members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]): TypeLiteralNode = js.native
  /** @deprecated Use `factory.createTypeLiteralNode` or the factory supplied by your transformation context instead. */
  @JSName("createTypeLiteralNode")
  def createTypeLiteralNode_TypeLiteralNode(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeLiteralNode = js.native
  @JSName("createTypeLiteralNode")
  def createTypeLiteralNode_TypeLiteralNode(members: Array[TypeElement]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeLiteralNode = js.native
  
  /** @deprecated Use `factory.createTypeOfExpression` or the factory supplied by your transformation context instead. */
  def createTypeOf(expression: Expression): TypeOfExpression = js.native
  /** @deprecated Use `factory.createTypeOfExpression` or the factory supplied by your transformation context instead. */
  def createTypeOf(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOfExpression = js.native
  
  /** @deprecated Use `factory.createTypeOperatorNode` or the factory supplied by your transformation context instead. */
  def createTypeOperatorNode(operator: KeyOfKeyword, `type`: TypeNode): TypeOperatorNode = js.native
  def createTypeOperatorNode(operator: typings.typescriptNn5FuAjk.ts.SyntaxKind.ReadonlyKeyword, `type`: TypeNode): TypeOperatorNode = js.native
  def createTypeOperatorNode(operator: UniqueKeyword, `type`: TypeNode): TypeOperatorNode = js.native
  /** @deprecated Use `factory.createTypeOperatorNode` or the factory supplied by your transformation context instead. */
  def createTypeOperatorNode(
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.KeyOfKeyword,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOperatorNode = js.native
  def createTypeOperatorNode(
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.ReadonlyKeyword,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOperatorNode = js.native
  def createTypeOperatorNode(
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind.UniqueKeyword,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOperatorNode = js.native
  /** @deprecated Use `factory.createTypeOperatorNode` or the factory supplied by your transformation context instead. */
  def createTypeOperatorNode(`type`: TypeNode): TypeOperatorNode = js.native
  /** @deprecated Use `factory.createTypeOperatorNode` or the factory supplied by your transformation context instead. */
  def createTypeOperatorNode(`type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOperatorNode = js.native
  
  def createTypeParameterDeclaration(modifiers: Unit, name: String): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: String, constraint: Unit, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Unit,
    name: String,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: String, constraint: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: String, constraint: TypeNode, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Unit,
    name: String,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Unit,
    name: String,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: Identifier): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: Identifier, constraint: Unit, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: Identifier, constraint: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: Identifier, constraint: TypeNode, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Unit, name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.createTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  def createTypeParameterDeclaration(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: String): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    constraint: Unit,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[Modifier],
    name: String,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: String, constraint: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: String,
    constraint: TypeNode,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[Modifier],
    name: String,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[Modifier],
    name: String,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: Identifier): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    constraint: Unit,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], name: Identifier, constraint: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    constraint: TypeNode,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(modifiers: Array[Modifier], name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.createTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  def createTypeParameterDeclaration(name: String): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: String, constraint: Unit, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    name: String,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: String, constraint: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: String, constraint: TypeNode, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: String, constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    name: String,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: Identifier): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: Identifier, constraint: Unit, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: Identifier, constraint: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: Identifier, constraint: TypeNode, defaultType: TypeNode): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def createTypeParameterDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  @JSName("createTypeParameterDeclaration")
  def createTypeParameterDeclaration_TypeParameterDeclaration(modifiers: Unit, name: String): TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.createTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createTypeParameterDeclaration")
  def createTypeParameterDeclaration_TypeParameterDeclaration(modifiers: Array[Modifier], name: String): TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.createTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createTypeParameterDeclaration")
  def createTypeParameterDeclaration_TypeParameterDeclaration(name: String): TypeParameterDeclaration = js.native
  
  def createTypePredicateNode(parameterName: String, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNode(parameterName: String, `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  /** @deprecated Use `factory.createTypePredicateNode` or the factory supplied by your transformation context instead. */
  def createTypePredicateNode(parameterName: Identifier, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNode(parameterName: ThisTypeNode, `type`: TypeNode): TypePredicateNode = js.native
  /** @deprecated Use `factory.createTypePredicateNode` or the factory supplied by your transformation context instead. */
  def createTypePredicateNode(
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNode(
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: String): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: String, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: Unit,
    parameterName: String,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: Identifier): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: Identifier, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: ThisTypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: ThisTypeNode, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: Unit, parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  /** @deprecated Use `factory.createTypePredicateNode` or the factory supplied by your transformation context instead. */
  def createTypePredicateNodeWithModifier(assertsModifier: AssertsKeyword, parameterName: String): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: AssertsKeyword, parameterName: String, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: AssertsKeyword, parameterName: Identifier): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: AssertsKeyword, parameterName: Identifier, `type`: TypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: AssertsKeyword, parameterName: ThisTypeNode): TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(assertsModifier: AssertsKeyword, parameterName: ThisTypeNode, `type`: TypeNode): TypePredicateNode = js.native
  /** @deprecated Use `factory.createTypePredicateNode` or the factory supplied by your transformation context instead. */
  def createTypePredicateNodeWithModifier(
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: String,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def createTypePredicateNodeWithModifier(
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  @JSName("createTypePredicateNodeWithModifier")
  def createTypePredicateNodeWithModifier_TypePredicateNode(assertsModifier: Unit, parameterName: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  
  /** @deprecated Use `factory.createTypeQueryNode` or the factory supplied by your transformation context instead. */
  def createTypeQueryNode(exprName: EntityName): TypeQueryNode = js.native
  def createTypeQueryNode(exprName: EntityName, typeArguments: Array[TypeNode]): TypeQueryNode = js.native
  /** @deprecated Use `factory.createTypeQueryNode` or the factory supplied by your transformation context instead. */
  def createTypeQueryNode(exprName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeQueryNode = js.native
  def createTypeQueryNode(
    exprName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeQueryNode = js.native
  
  def createTypeReferenceDirectiveResolutionCache(currentDirectory: String, getCanonicalFileName: js.Function1[/* s */ String, String]): TypeReferenceDirectiveResolutionCache = js.native
  def createTypeReferenceDirectiveResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: Unit,
    packageJsonInfoCache: PackageJsonInfoCache
  ): typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache = js.native
  def createTypeReferenceDirectiveResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: Unit,
    packageJsonInfoCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PackageJsonInfoCache
  ): TypeReferenceDirectiveResolutionCache = js.native
  def createTypeReferenceDirectiveResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: CompilerOptions
  ): typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache = js.native
  def createTypeReferenceDirectiveResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: CompilerOptions,
    packageJsonInfoCache: PackageJsonInfoCache
  ): typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache = js.native
  def createTypeReferenceDirectiveResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): TypeReferenceDirectiveResolutionCache = js.native
  def createTypeReferenceDirectiveResolutionCache(
    currentDirectory: String,
    getCanonicalFileName: js.Function1[/* s */ String, String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    packageJsonInfoCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PackageJsonInfoCache
  ): TypeReferenceDirectiveResolutionCache = js.native
  @JSName("createTypeReferenceDirectiveResolutionCache")
  def createTypeReferenceDirectiveResolutionCache_TypeReferenceDirectiveResolutionCache(currentDirectory: String, getCanonicalFileName: js.Function1[/* s */ String, String]): typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache = js.native
  
  /** @deprecated Use `factory.createTypeReferenceNode` or the factory supplied by your transformation context instead. */
  def createTypeReferenceNode(typeName: String): TypeReferenceNode = js.native
  def createTypeReferenceNode(typeName: String, typeArguments: Array[TypeNode]): TypeReferenceNode = js.native
  def createTypeReferenceNode(typeName: EntityName): TypeReferenceNode = js.native
  def createTypeReferenceNode(typeName: EntityName, typeArguments: Array[TypeNode]): TypeReferenceNode = js.native
  def createTypeReferenceNode(typeName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode = js.native
  def createTypeReferenceNode(
    typeName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode = js.native
  /** @deprecated Use `factory.createTypeReferenceNode` or the factory supplied by your transformation context instead. */
  @JSName("createTypeReferenceNode")
  def createTypeReferenceNode_TypeReferenceNode(typeName: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode = js.native
  @JSName("createTypeReferenceNode")
  def createTypeReferenceNode_TypeReferenceNode(typeName: String, typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode = js.native
  
  /** @deprecated Use `factory.createUnionTypeNode` or the factory supplied by your transformation context instead. */
  def createUnionTypeNode(types: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]): UnionTypeNode = js.native
  /** @deprecated Use `factory.createUnionTypeNode` or the factory supplied by your transformation context instead. */
  @JSName("createUnionTypeNode")
  def createUnionTypeNode_UnionTypeNode(types: Array[TypeNode]): typings.typescriptNn5FuAjk.ts.UnionTypeNode = js.native
  
  /** @deprecated Use `factory.createUniqueName` or the factory supplied by your transformation context instead. */
  def createUniqueName(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  def createUniqueName(text: String, flags: GeneratedIdentifierFlags): Identifier = js.native
  def createUniqueName(text: String, flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GeneratedIdentifierFlags): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.createUniqueName` or the factory supplied by your transformation context instead. */
  @JSName("createUniqueName")
  def createUniqueName_Identifier(text: String): Identifier = js.native
  
  def createUnparsedSourceFile(inputFile: InputFiles, `type`: js_ | dts): UnparsedSource = js.native
  def createUnparsedSourceFile(inputFile: InputFiles, `type`: js_ | dts, stripInternal: Boolean): UnparsedSource = js.native
  def createUnparsedSourceFile(inputFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles, `type`: js_ | dts): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource = js.native
  def createUnparsedSourceFile(
    inputFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles,
    `type`: js_ | dts,
    stripInternal: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource = js.native
  def createUnparsedSourceFile(text: String): UnparsedSource = js.native
  def createUnparsedSourceFile(text: String, mapPath: String): UnparsedSource = js.native
  def createUnparsedSourceFile(text: String, mapPath: String, map: String): UnparsedSource = js.native
  def createUnparsedSourceFile(text: String, mapPath: Unit, map: String): UnparsedSource = js.native
  @JSName("createUnparsedSourceFile")
  def createUnparsedSourceFile_UnparsedSource(text: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource = js.native
  @JSName("createUnparsedSourceFile")
  def createUnparsedSourceFile_UnparsedSource(text: String, mapPath: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource = js.native
  @JSName("createUnparsedSourceFile")
  def createUnparsedSourceFile_UnparsedSource(text: String, mapPath: String, map: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource = js.native
  @JSName("createUnparsedSourceFile")
  def createUnparsedSourceFile_UnparsedSource(text: String, mapPath: Unit, map: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource = js.native
  
  /** @deprecated Use `factory.createVariableDeclaration` or the factory supplied by your transformation context instead. */
  def createVariableDeclaration(name: String): VariableDeclaration = js.native
  def createVariableDeclaration(name: String, exclamationToken: Unit, `type`: Unit, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(name: String, exclamationToken: Unit, `type`: TypeNode): VariableDeclaration = js.native
  def createVariableDeclaration(name: String, exclamationToken: Unit, `type`: TypeNode, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(name: String, exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: Unit,
    initializer: Expression
  ): VariableDeclaration = js.native
  def createVariableDeclaration(name: String, exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken, `type`: TypeNode): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: TypeNode,
    initializer: Expression
  ): VariableDeclaration = js.native
  def createVariableDeclaration(name: String, exclamationToken: ExclamationToken): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: ExclamationToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: ExclamationToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    exclamationToken: ExclamationToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(name: String, `type`: Unit, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(name: String, `type`: TypeNode): VariableDeclaration = js.native
  def createVariableDeclaration(name: String, `type`: TypeNode, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(name: String, `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: String,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, exclamationToken: Unit, `type`: Unit, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, exclamationToken: Unit, `type`: TypeNode): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, exclamationToken: Unit, `type`: TypeNode, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: Unit,
    initializer: Expression
  ): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: TypeNode
  ): VariableDeclaration = js.native
  def createVariableDeclaration(
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: TypeNode,
    initializer: Expression
  ): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, `type`: Unit, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, `type`: TypeNode): VariableDeclaration = js.native
  def createVariableDeclaration(name: BindingName, `type`: TypeNode, initializer: Expression): VariableDeclaration = js.native
  def createVariableDeclaration(name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def createVariableDeclaration(
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  
  /** @deprecated Use `factory.createVariableDeclarationList` or the factory supplied by your transformation context instead. */
  def createVariableDeclarationList(declarations: Array[VariableDeclaration]): VariableDeclarationList = js.native
  def createVariableDeclarationList(declarations: Array[VariableDeclaration], flags: NodeFlags): VariableDeclarationList = js.native
  def createVariableDeclarationList(
    declarations: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration],
    flags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList = js.native
  /** @deprecated Use `factory.createVariableDeclarationList` or the factory supplied by your transformation context instead. */
  @JSName("createVariableDeclarationList")
  def createVariableDeclarationList_VariableDeclarationList(declarations: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList = js.native
  
  /** @deprecated Use `factory.createVariableDeclaration` or the factory supplied by your transformation context instead. */
  @JSName("createVariableDeclaration")
  def createVariableDeclaration_VariableDeclaration(name: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  
  def createVariableStatement(
    modifiers: Unit,
    declarationList: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration]
  ): VariableStatement = js.native
  def createVariableStatement(modifiers: Unit, declarationList: VariableDeclarationList): typings.typescriptNn5FuAjk.ts.VariableStatement = js.native
  def createVariableStatement(
    modifiers: Unit,
    declarationList: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList
  ): VariableStatement = js.native
  def createVariableStatement(
    modifiers: Array[Modifier],
    declarationList: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration]
  ): VariableStatement = js.native
  /** @deprecated Use `factory.createVariableStatement` or the factory supplied by your transformation context instead. */
  def createVariableStatement(modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier], declarationList: VariableDeclarationList): typings.typescriptNn5FuAjk.ts.VariableStatement = js.native
  /** @deprecated Use `factory.createVariableStatement` or the factory supplied by your transformation context instead. */
  def createVariableStatement(
    modifiers: Array[Modifier],
    declarationList: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList
  ): VariableStatement = js.native
  @JSName("createVariableStatement")
  def createVariableStatement_VariableStatement(modifiers: Unit, declarationList: Array[VariableDeclaration]): typings.typescriptNn5FuAjk.ts.VariableStatement = js.native
  @JSName("createVariableStatement")
  def createVariableStatement_VariableStatement(
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    declarationList: Array[VariableDeclaration]
  ): typings.typescriptNn5FuAjk.ts.VariableStatement = js.native
  
  /** @deprecated Use `factory.createVoidExpression` or the factory supplied by your transformation context instead. */
  def createVoid(expression: Expression): VoidExpression = js.native
  /** @deprecated Use `factory.createVoidExpression` or the factory supplied by your transformation context instead. */
  def createVoid(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VoidExpression = js.native
  
  /** @deprecated Use `factory.createVoidZero` or the factory supplied by your transformation context instead. */
  def createVoidZero(): VoidExpression = js.native
  /** @deprecated Use `factory.createVoidZero` or the factory supplied by your transformation context instead. */
  @JSName("createVoidZero")
  def createVoidZero_VoidExpression(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VoidExpression = js.native
  
  /**
    * Create the watch compiler host for either configFile or fileNames and its options
    */
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    configFileName: String,
    optionsToExtend: js.UndefOr[CompilerOptions],
    system: System,
    createProgram: js.UndefOr[CreateProgram[T]],
    reportDiagnostic: js.UndefOr[DiagnosticReporter],
    reportWatchStatus: js.UndefOr[WatchStatusReporter],
    watchOptionsToExtend: js.UndefOr[WatchOptions],
    extraFileExtensions: js.UndefOr[Array[FileExtensionInfo]]
  ): WatchCompilerHostOfConfigFile[T] = js.native
  /**
    * Create the watch compiler host for either configFile or fileNames and its options
    */
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    configFileName: String,
    optionsToExtend: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions],
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: js.UndefOr[CreateProgram_[T]],
    reportDiagnostic: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter],
    reportWatchStatus: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter],
    watchOptionsToExtend: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions],
    extraFileExtensions: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfConfigFile[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](rootFiles: Array[String], options: CompilerOptions, system: System): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: Unit,
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: Unit,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference]
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: BuilderProgram */](
    rootFiles: Array[String],
    options: CompilerOptions,
    system: System,
    createProgram: CreateProgram[T],
    reportDiagnostic: DiagnosticReporter,
    reportWatchStatus: WatchStatusReporter,
    projectReferences: Array[typings.typescriptNn5FuAjk.ts.ProjectReference],
    watchOptions: WatchOptions
  ): WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: Unit,
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: Unit,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: Unit,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Unit,
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  def createWatchCompilerHost[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    rootFiles: Array[String],
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    system: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System,
    createProgram: CreateProgram_[T],
    reportDiagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticReporter,
    reportWatchStatus: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchStatusReporter,
    projectReferences: Array[ProjectReference],
    watchOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T] = js.native
  
  /**
    * Creates the watch from the host for config file
    */
  def createWatchProgram[T /* <: BuilderProgram */](host: WatchCompilerHostOfConfigFile[T]): WatchOfConfigFile[T] = js.native
  /**
    * Creates the watch from the host for root files and compiler options
    */
  def createWatchProgram[T /* <: BuilderProgram */](host: WatchCompilerHostOfFilesAndCompilerOptions[T]): WatchOfFilesAndCompilerOptions[T] = js.native
  /**
    * Creates the watch from the host for config file
    */
  def createWatchProgram[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfConfigFile[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOfConfigFile[T] = js.native
  /**
    * Creates the watch from the host for root files and compiler options
    */
  def createWatchProgram[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BuilderProgram */](
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchCompilerHostOfFilesAndCompilerOptions[T]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOfFilesAndCompilerOptions[T] = js.native
  
  /** @deprecated Use `factory.createWhileStatement` or the factory supplied by your transformation context instead. */
  def createWhile(expression: Expression, statement: Statement): WhileStatement = js.native
  /** @deprecated Use `factory.createWhileStatement` or the factory supplied by your transformation context instead. */
  def createWhile(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WhileStatement = js.native
  
  /** @deprecated Use `factory.createWithStatement` or the factory supplied by your transformation context instead. */
  def createWith(expression: Expression, statement: Statement): WithStatement = js.native
  /** @deprecated Use `factory.createWithStatement` or the factory supplied by your transformation context instead. */
  def createWith(
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WithStatement = js.native
  
  /** @deprecated Use `factory.createYield` or the factory supplied by your transformation context instead. */
  def createYield(): YieldExpression = js.native
  def createYield(asteriskToken: Unit, expression: Expression): YieldExpression = js.native
  def createYield(asteriskToken: Unit, expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  /** @deprecated Use `factory.createYield` or the factory supplied by your transformation context instead. */
  def createYield(asteriskToken: AsteriskToken, expression: Expression): YieldExpression = js.native
  /** @deprecated Use `factory.createYield` or the factory supplied by your transformation context instead. */
  def createYield(
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  def createYield(expression: Expression): YieldExpression = js.native
  def createYield(expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  /** @deprecated Use `factory.createYield` or the factory supplied by your transformation context instead. */
  @JSName("createYield")
  def createYield_YieldExpression(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  
  def decodedTextSpanIntersectsWith(start1: Double, length1: Double, start2: Double, length2: Double): Boolean = js.native
  
  def displayPartsToString(): String = js.native
  def displayPartsToString(
    displayParts: Array[
      SymbolDisplayPart | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SymbolDisplayPart
    ]
  ): String = js.native
  
  /**
    * Clears any `EmitNode` entries from parse-tree nodes.
    * @param sourceFile A source file.
    */
  def disposeEmitNodes(): Unit = js.native
  def disposeEmitNodes(sourceFile: SourceFile): Unit = js.native
  def disposeEmitNodes(sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile): Unit = js.native
  
  /** Add an extra underscore to identifiers that start with two underscores to avoid issues with magic names like '__proto__' */
  def escapeLeadingUnderscores(identifier: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.String = js.native
  /** Add an extra underscore to identifiers that start with two underscores to avoid issues with magic names like '__proto__' */
  @JSName("escapeLeadingUnderscores")
  def escapeLeadingUnderscores_String(identifier: String): typings.typescriptNn5FuAjk.ts.String = js.native
  
  val factory: NodeFactory & typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFactory = js.native
  
  def findAncestor[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    callback: js.Function1[
      /* element */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, 
      /* is T */ Boolean
    ]
  ): js.UndefOr[T] = js.native
  /**
    * Iterates through the parent chain of a node and performs the callback on each parent until the callback
    * returns a truthy value, then returns that value.
    * If no such value is found, it applies the callback until the parent pointer is undefined or the callback returns "quit"
    * At that point findAncestor returns undefined.
    */
  def findAncestor[T /* <: Node */](node: Node, callback: js.Function1[/* element */ Node, /* is T */ Boolean]): js.UndefOr[T] = js.native
  /**
    * Iterates through the parent chain of a node and performs the callback on each parent until the callback
    * returns a truthy value, then returns that value.
    * If no such value is found, it applies the callback until the parent pointer is undefined or the callback returns "quit"
    * At that point findAncestor returns undefined.
    */
  def findAncestor[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    callback: js.Function1[
      /* element */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, 
      /* is T */ Boolean
    ]
  ): js.UndefOr[T] = js.native
  @JSName("findAncestor")
  def findAncestor_T_Node[T /* <: Node */](node: Unit, callback: js.Function1[/* element */ Node, /* is T */ Boolean]): js.UndefOr[T] = js.native
  @JSName("findAncestor")
  def findAncestor_quit(
    node: Unit,
    callback: js.Function1[
      (/* element */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node) | (/* element */ Node), 
      Boolean | quit
    ]
  ): js.UndefOr[Node] = js.native
  @JSName("findAncestor")
  def findAncestor_quit(node: Node, callback: js.Function1[/* element */ Node, Boolean | quit]): js.UndefOr[Node] = js.native
  @JSName("findAncestor")
  def findAncestor_quit(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    callback: js.Function1[
      /* element */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, 
      Boolean | quit
    ]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node] = js.native
  
  def findConfigFile(searchPath: String, fileExists: js.Function1[/* fileName */ String, Boolean]): js.UndefOr[String] = js.native
  def findConfigFile(searchPath: String, fileExists: js.Function1[/* fileName */ String, Boolean], configName: String): js.UndefOr[String] = js.native
  
  def flattenDiagnosticMessageText(diag: String, newLine: String): String = js.native
  def flattenDiagnosticMessageText(diag: String, newLine: String, indent: Double): String = js.native
  def flattenDiagnosticMessageText(diag: Unit, newLine: String): String = js.native
  def flattenDiagnosticMessageText(diag: Unit, newLine: String, indent: Double): String = js.native
  def flattenDiagnosticMessageText(diag: DiagnosticMessageChain, newLine: String): String = js.native
  def flattenDiagnosticMessageText(diag: DiagnosticMessageChain, newLine: String, indent: Double): String = js.native
  def flattenDiagnosticMessageText(diag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticMessageChain, newLine: String): String = js.native
  def flattenDiagnosticMessageText(
    diag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DiagnosticMessageChain,
    newLine: String,
    indent: Double
  ): String = js.native
  
  def forEachChild[T](node: Node, cbNode: js.Function1[/* node */ Node, js.UndefOr[T]]): js.UndefOr[T] = js.native
  def forEachChild[T](
    node: Node,
    cbNode: js.Function1[/* node */ Node, js.UndefOr[T]],
    cbNodes: js.Function1[/* nodes */ NodeArray[Node], js.UndefOr[T]]
  ): js.UndefOr[T] = js.native
  def forEachChild[T](
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    cbNode: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, js.UndefOr[T]]
  ): js.UndefOr[T] = js.native
  def forEachChild[T](
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    cbNode: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, js.UndefOr[T]],
    cbNodes: js.Function1[
      /* nodes */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], 
      js.UndefOr[T]
    ]
  ): js.UndefOr[T] = js.native
  
  def forEachLeadingCommentRange[U](
    text: String,
    pos: Double,
    cb: js.Function4[
      /* pos */ Double, 
      /* end */ Double, 
      (/* kind */ CommentKind) | (/* kind */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommentKind), 
      /* hasTrailingNewLine */ Boolean, 
      U
    ]
  ): js.UndefOr[U] = js.native
  def forEachLeadingCommentRange[T, U](
    text: String,
    pos: Double,
    cb: js.Function5[
      /* pos */ Double, 
      /* end */ Double, 
      (/* kind */ CommentKind) | (/* kind */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommentKind), 
      /* hasTrailingNewLine */ Boolean, 
      /* state */ T, 
      U
    ],
    state: T
  ): js.UndefOr[U] = js.native
  
  def forEachTrailingCommentRange[U](
    text: String,
    pos: Double,
    cb: js.Function4[
      /* pos */ Double, 
      /* end */ Double, 
      (/* kind */ CommentKind) | (/* kind */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommentKind), 
      /* hasTrailingNewLine */ Boolean, 
      U
    ]
  ): js.UndefOr[U] = js.native
  def forEachTrailingCommentRange[T, U](
    text: String,
    pos: Double,
    cb: js.Function5[
      /* pos */ Double, 
      /* end */ Double, 
      (/* kind */ CommentKind) | (/* kind */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommentKind), 
      /* hasTrailingNewLine */ Boolean, 
      /* state */ T, 
      U
    ],
    state: T
  ): js.UndefOr[U] = js.native
  
  def formatDiagnostic(diagnostic: Diagnostic, host: FormatDiagnosticsHost): String = js.native
  def formatDiagnostic(
    diagnostic: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FormatDiagnosticsHost
  ): String = js.native
  
  def formatDiagnostics(diagnostics: Array[Diagnostic], host: FormatDiagnosticsHost): String = js.native
  def formatDiagnostics(
    diagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic],
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FormatDiagnosticsHost
  ): String = js.native
  
  def formatDiagnosticsWithColorAndContext(diagnostics: Array[Diagnostic], host: FormatDiagnosticsHost): String = js.native
  def formatDiagnosticsWithColorAndContext(
    diagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic],
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FormatDiagnosticsHost
  ): String = js.native
  
  /** Gets all JSDoc tags that match a specified predicate */
  def getAllJSDocTags[T /* <: typings.typescriptNn5FuAjk.ts.JSDocTag */](
    node: Node,
    predicate: js.Function1[/* tag */ typings.typescriptNn5FuAjk.ts.JSDocTag, /* is T */ Boolean]
  ): Array[T] = js.native
  /** Gets all JSDoc tags that match a specified predicate */
  def getAllJSDocTags[T /* <: JSDocTag */](
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    predicate: js.Function1[/* tag */ JSDocTag, /* is T */ Boolean]
  ): Array[T] = js.native
  
  /** Gets all JSDoc tags of a specified kind */
  def getAllJSDocTagsOfKind(node: Node, kind: SyntaxKind): Array[typings.typescriptNn5FuAjk.ts.JSDocTag] = js.native
  /** Gets all JSDoc tags of a specified kind */
  def getAllJSDocTagsOfKind(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind
  ): Array[JSDocTag] = js.native
  
  def getAutomaticTypeDirectiveNames(options: CompilerOptions, host: ModuleResolutionHost): Array[String] = js.native
  def getAutomaticTypeDirectiveNames(
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost
  ): Array[String] = js.native
  
  def getCombinedModifierFlags(node: Declaration): ModifierFlags = js.native
  def getCombinedModifierFlags(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Declaration): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModifierFlags = js.native
  
  def getCombinedNodeFlags(node: Node): NodeFlags = js.native
  def getCombinedNodeFlags(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeFlags = js.native
  
  /**
    * Gets a custom text range to use when emitting comments.
    */
  def getCommentRange(node: Node): TextRange = js.native
  /**
    * Gets a custom text range to use when emitting comments.
    */
  def getCommentRange(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextRange = js.native
  
  def getConfigFileParsingDiagnostics(configFileParseResult: ParsedCommandLine): Array[Diagnostic] = js.native
  def getConfigFileParsingDiagnostics(configFileParseResult: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine): Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic] = js.native
  
  /**
    * Gets the constant value to emit for an expression representing an enum.
    */
  def getConstantValue(node: AccessExpression): js.UndefOr[String | Double] = js.native
  /**
    * Gets the constant value to emit for an expression representing an enum.
    */
  def getConstantValue(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AccessExpression): js.UndefOr[String | Double] = js.native
  
  def getDefaultCompilerOptions(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions = js.native
  @JSName("getDefaultCompilerOptions")
  def getDefaultCompilerOptions_CompilerOptions(): CompilerOptions = js.native
  
  def getDefaultFormatCodeSettings(): FormatCodeSettings = js.native
  def getDefaultFormatCodeSettings(newLineCharacter: String): FormatCodeSettings = js.native
  @JSName("getDefaultFormatCodeSettings")
  def getDefaultFormatCodeSettings_FormatCodeSettings(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FormatCodeSettings = js.native
  @JSName("getDefaultFormatCodeSettings")
  def getDefaultFormatCodeSettings_FormatCodeSettings(newLineCharacter: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FormatCodeSettings = js.native
  
  def getDefaultLibFileName(options: CompilerOptions): String = js.native
  def getDefaultLibFileName(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions): String = js.native
  
  /**
    * Get the path of the default library files (lib.d.ts) as distributed with the typescript
    * node package.
    * The functionality is not supported if the ts module is consumed outside of a node module.
    */
  def getDefaultLibFilePath(options: CompilerOptions): String = js.native
  /**
    * Get the path of the default library files (lib.d.ts) as distributed with the typescript
    * node package.
    * The functionality is not supported if the ts module is consumed outside of a node module.
    */
  def getDefaultLibFilePath(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions): String = js.native
  
  def getEffectiveConstraintOfTypeParameter(node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration): js.UndefOr[TypeNode] = js.native
  def getEffectiveConstraintOfTypeParameter(node: TypeParameterDeclaration): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode] = js.native
  
  /**
    * Gets the effective type parameters. If the node was parsed in a
    * JavaScript file, gets the type parameters from the `@template` tag from JSDoc.
    */
  def getEffectiveTypeParameterDeclarations(node: DeclarationWithTypeParameters): Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration] = js.native
  /**
    * Gets the effective type parameters. If the node was parsed in a
    * JavaScript file, gets the type parameters from the `@template` tag from JSDoc.
    */
  def getEffectiveTypeParameterDeclarations(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DeclarationWithTypeParameters): Array[TypeParameterDeclaration] = js.native
  
  def getEffectiveTypeRoots(options: CompilerOptions, host: GetEffectiveTypeRootsHost): js.UndefOr[Array[String]] = js.native
  def getEffectiveTypeRoots(
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetEffectiveTypeRootsHost
  ): js.UndefOr[Array[String]] = js.native
  
  /**
    * Gets the EmitHelpers of a node.
    */
  def getEmitHelpers(node: Node): js.UndefOr[Array[EmitHelper]] = js.native
  /**
    * Gets the EmitHelpers of a node.
    */
  def getEmitHelpers(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitHelper]] = js.native
  
  /** @deprecated Use `factory.getGeneratedNameForNode` or the factory supplied by your transformation context instead. */
  def getGeneratedNameForNode(): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  def getGeneratedNameForNode(node: Node): Identifier = js.native
  def getGeneratedNameForNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier = js.native
  /** @deprecated Use `factory.getGeneratedNameForNode` or the factory supplied by your transformation context instead. */
  @JSName("getGeneratedNameForNode")
  def getGeneratedNameForNode_Identifier(): Identifier = js.native
  
  def getImpliedNodeFormatForFile(fileName: Path, packageJsonInfoCache: Unit, host: ModuleResolutionHost, options: CompilerOptions): js.UndefOr[ESNext | CommonJS] = js.native
  def getImpliedNodeFormatForFile(
    fileName: Path,
    packageJsonInfoCache: PackageJsonInfoCache,
    host: ModuleResolutionHost,
    options: CompilerOptions
  ): js.UndefOr[ESNext | CommonJS] = js.native
  def getImpliedNodeFormatForFile(
    fileName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Path,
    packageJsonInfoCache: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ] = js.native
  def getImpliedNodeFormatForFile(
    fileName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Path,
    packageJsonInfoCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PackageJsonInfoCache,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ] = js.native
  
  /** Gets the JSDoc augments tag for the node if present */
  def getJSDocAugmentsTag(node: Node): js.UndefOr[typings.typescriptNn5FuAjk.ts.JSDocAugmentsTag] = js.native
  /** Gets the JSDoc augments tag for the node if present */
  def getJSDocAugmentsTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[JSDocAugmentsTag] = js.native
  
  /** Gets the JSDoc class tag for the node if present */
  def getJSDocClassTag(node: Node): js.UndefOr[typings.typescriptNn5FuAjk.ts.JSDocClassTag] = js.native
  /** Gets the JSDoc class tag for the node if present */
  def getJSDocClassTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[JSDocClassTag] = js.native
  
  /** Gets the JSDoc deprecated tag for the node if present */
  def getJSDocDeprecatedTag(node: Node): js.UndefOr[JSDocDeprecatedTag] = js.native
  /** Gets the JSDoc deprecated tag for the node if present */
  def getJSDocDeprecatedTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocDeprecatedTag] = js.native
  
  /** Gets the JSDoc enum tag for the node if present */
  def getJSDocEnumTag(node: Node): js.UndefOr[JSDocEnumTag] = js.native
  /** Gets the JSDoc enum tag for the node if present */
  def getJSDocEnumTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocEnumTag] = js.native
  
  /** Gets the JSDoc implements tags for the node if present */
  def getJSDocImplementsTags(node: Node): Array[typings.typescriptNn5FuAjk.ts.JSDocImplementsTag] = js.native
  /** Gets the JSDoc implements tags for the node if present */
  def getJSDocImplementsTags(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Array[JSDocImplementsTag] = js.native
  
  def getJSDocOverrideTagNoCache(node: Node): js.UndefOr[JSDocOverrideTag] = js.native
  def getJSDocOverrideTagNoCache(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocOverrideTag] = js.native
  
  /**
    * Gets the JSDoc parameter tags for the node if present.
    *
    * @remarks Returns any JSDoc param tag whose name matches the provided
    * parameter, whether a param tag on a containing function
    * expression, or a param tag on a variable declaration whose
    * initializer is the containing function. The tags closest to the
    * node are returned first, so in the previous example, the param
    * tag on the containing function expression would be first.
    *
    * For binding patterns, parameter tags are matched by position.
    */
  def getJSDocParameterTags(param: typings.typescriptNn5FuAjk.ts.ParameterDeclaration): Array[JSDocParameterTag] = js.native
  /**
    * Gets the JSDoc parameter tags for the node if present.
    *
    * @remarks Returns any JSDoc param tag whose name matches the provided
    * parameter, whether a param tag on a containing function
    * expression, or a param tag on a variable declaration whose
    * initializer is the containing function. The tags closest to the
    * node are returned first, so in the previous example, the param
    * tag on the containing function expression would be first.
    *
    * For binding patterns, parameter tags are matched by position.
    */
  def getJSDocParameterTags(param: ParameterDeclaration): Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocParameterTag] = js.native
  
  /** Gets the JSDoc private tag for the node if present */
  def getJSDocPrivateTag(node: Node): js.UndefOr[JSDocPrivateTag] = js.native
  /** Gets the JSDoc private tag for the node if present */
  def getJSDocPrivateTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocPrivateTag] = js.native
  
  /** Gets the JSDoc protected tag for the node if present */
  def getJSDocProtectedTag(node: Node): js.UndefOr[typings.typescriptNn5FuAjk.ts.JSDocProtectedTag] = js.native
  /** Gets the JSDoc protected tag for the node if present */
  def getJSDocProtectedTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[JSDocProtectedTag] = js.native
  
  /** Gets the JSDoc public tag for the node if present */
  def getJSDocPublicTag(node: Node): js.UndefOr[typings.typescriptNn5FuAjk.ts.JSDocPublicTag] = js.native
  /** Gets the JSDoc public tag for the node if present */
  def getJSDocPublicTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[JSDocPublicTag] = js.native
  
  /** Gets the JSDoc protected tag for the node if present */
  def getJSDocReadonlyTag(node: Node): js.UndefOr[JSDocReadonlyTag] = js.native
  /** Gets the JSDoc protected tag for the node if present */
  def getJSDocReadonlyTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReadonlyTag] = js.native
  
  /** Gets the JSDoc return tag for the node if present */
  def getJSDocReturnTag(node: Node): js.UndefOr[JSDocReturnTag] = js.native
  /** Gets the JSDoc return tag for the node if present */
  def getJSDocReturnTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocReturnTag] = js.native
  
  /**
    * Gets the return type node for the node if provided via JSDoc return tag or type tag.
    *
    * @remarks `getJSDocReturnTag` just gets the whole JSDoc tag. This function
    * gets the type from inside the braces, after the fat arrow, etc.
    */
  def getJSDocReturnType(node: Node): js.UndefOr[TypeNode] = js.native
  /**
    * Gets the return type node for the node if provided via JSDoc return tag or type tag.
    *
    * @remarks `getJSDocReturnTag` just gets the whole JSDoc tag. This function
    * gets the type from inside the braces, after the fat arrow, etc.
    */
  def getJSDocReturnType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode] = js.native
  
  /** Get all JSDoc tags related to a node, including those on parent nodes. */
  def getJSDocTags(node: Node): Array[typings.typescriptNn5FuAjk.ts.JSDocTag] = js.native
  /** Get all JSDoc tags related to a node, including those on parent nodes. */
  def getJSDocTags(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Array[JSDocTag] = js.native
  
  /** Gets the JSDoc template tag for the node if present */
  def getJSDocTemplateTag(node: Node): js.UndefOr[typings.typescriptNn5FuAjk.ts.JSDocTemplateTag] = js.native
  /** Gets the JSDoc template tag for the node if present */
  def getJSDocTemplateTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[JSDocTemplateTag] = js.native
  
  /** Gets the JSDoc this tag for the node if present */
  def getJSDocThisTag(node: Node): js.UndefOr[JSDocThisTag] = js.native
  /** Gets the JSDoc this tag for the node if present */
  def getJSDocThisTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocThisTag] = js.native
  
  /**
    * Gets the type node for the node if provided via JSDoc.
    *
    * @remarks The search includes any JSDoc param tag that relates
    * to the provided parameter, for example a type tag on the
    * parameter itself, or a param tag on a containing function
    * expression, or a param tag on a variable declaration whose
    * initializer is the containing function. The tags closest to the
    * node are examined first, so in the previous example, the type
    * tag directly on the node would be returned.
    */
  def getJSDocType(node: Node): js.UndefOr[TypeNode] = js.native
  /**
    * Gets the type node for the node if provided via JSDoc.
    *
    * @remarks The search includes any JSDoc param tag that relates
    * to the provided parameter, for example a type tag on the
    * parameter itself, or a param tag on a containing function
    * expression, or a param tag on a variable declaration whose
    * initializer is the containing function. The tags closest to the
    * node are examined first, so in the previous example, the type
    * tag directly on the node would be returned.
    */
  def getJSDocType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode] = js.native
  
  /**
    * Gets the JSDoc type parameter tags for the node if present.
    *
    * @remarks Returns any JSDoc template tag whose names match the provided
    * parameter, whether a template tag on a containing function
    * expression, or a template tag on a variable declaration whose
    * initializer is the containing function. The tags closest to the
    * node are returned first, so in the previous example, the template
    * tag on the containing function expression would be first.
    */
  def getJSDocTypeParameterTags(param: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration): Array[typings.typescriptNn5FuAjk.ts.JSDocTemplateTag] = js.native
  /**
    * Gets the JSDoc type parameter tags for the node if present.
    *
    * @remarks Returns any JSDoc template tag whose names match the provided
    * parameter, whether a template tag on a containing function
    * expression, or a template tag on a variable declaration whose
    * initializer is the containing function. The tags closest to the
    * node are returned first, so in the previous example, the template
    * tag on the containing function expression would be first.
    */
  def getJSDocTypeParameterTags(param: TypeParameterDeclaration): Array[JSDocTemplateTag] = js.native
  
  /** Gets the JSDoc type tag for the node if present and valid */
  def getJSDocTypeTag(node: Node): js.UndefOr[JSDocTypeTag] = js.native
  /** Gets the JSDoc type tag for the node if present and valid */
  def getJSDocTypeTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypeTag] = js.native
  
  def getLeadingCommentRanges(text: String, pos: Double): js.UndefOr[Array[CommentRange]] = js.native
  
  def getLineAndCharacterOfPosition(sourceFile: SourceFileLike, position: Double): LineAndCharacter = js.native
  def getLineAndCharacterOfPosition(sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFileLike, position: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LineAndCharacter = js.native
  
  /**
    * Creates a shallow, memberwise clone of a node ~for mutation~ with its `pos`, `end`, and `parent` set.
    *
    * NOTE: It is unsafe to change any properties of a `Node` that relate to its AST children, as those changes won't be
    * captured with respect to transformations.
    *
    * @deprecated Use an appropriate `factory.update...` method instead, use `setCommentRange` or `setSourceMapRange`, and avoid setting `parent`.
    */
  def getMutableClone[T /* <: Node */](node: T): T = js.native
  /**
    * Creates a shallow, memberwise clone of a node ~for mutation~ with its `pos`, `end`, and `parent` set.
    *
    * NOTE: It is unsafe to change any properties of a `Node` that relate to its AST children, as those changes won't be
    * captured with respect to transformations.
    *
    * @deprecated Use an appropriate `factory.update...` method instead, use `setCommentRange` or `setSourceMapRange`, and avoid setting `parent`.
    */
  @JSName("getMutableClone")
  def getMutableClone_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  
  def getNameOfDeclaration(): js.UndefOr[DeclarationName] = js.native
  def getNameOfDeclaration(declaration: Declaration): js.UndefOr[DeclarationName] = js.native
  def getNameOfDeclaration(declaration: Expression): js.UndefOr[DeclarationName] = js.native
  def getNameOfDeclaration(declaration: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Declaration): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DeclarationName] = js.native
  def getNameOfDeclaration(declaration: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DeclarationName] = js.native
  
  def getNameOfJSDocTypedef(declaration: JSDocTypedefTag): js.UndefOr[Identifier | PrivateIdentifier] = js.native
  def getNameOfJSDocTypedef(declaration: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocTypedefTag): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrivateIdentifier
  ] = js.native
  
  def getNodeMajorVersion(): js.UndefOr[Double] = js.native
  
  def getOriginalNode(): js.UndefOr[Node] = js.native
  def getOriginalNode(node: Node): js.UndefOr[Node] = js.native
  def getOriginalNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node = js.native
  def getOriginalNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    nodeTest: js.Function1[
      /* node */ js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], 
      /* is T */ Boolean
    ]
  ): js.UndefOr[T] = js.native
  def getOriginalNode[T /* <: Node */](node: Node, nodeTest: js.Function1[/* node */ Node, /* is T */ Boolean]): T = js.native
  def getOriginalNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    nodeTest: js.Function1[
      /* node */ js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], 
      /* is T */ Boolean
    ]
  ): js.UndefOr[T] = js.native
  @JSName("getOriginalNode")
  def getOriginalNode_Node(node: Node): Node = js.native
  @JSName("getOriginalNode")
  def getOriginalNode_T_Node[T /* <: Node */](node: Unit, nodeTest: js.Function1[/* node */ js.UndefOr[Node], /* is T */ Boolean]): js.UndefOr[T] = js.native
  @JSName("getOriginalNode")
  def getOriginalNode_T_Node_T[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    nodeTest: js.Function1[
      /* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, 
      /* is T */ Boolean
    ]
  ): T = js.native
  @JSName("getOriginalNode")
  def getOriginalNode_T_Node_Union[T /* <: Node */](node: Node, nodeTest: js.Function1[/* node */ js.UndefOr[Node], /* is T */ Boolean]): js.UndefOr[T] = js.native
  @JSName("getOriginalNode")
  def getOriginalNode_Union(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node] = js.native
  
  def getOutputFileNames(commandLine: ParsedCommandLine, inputFileName: String, ignoreCase: Boolean): Array[String] = js.native
  def getOutputFileNames(
    commandLine: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine,
    inputFileName: String,
    ignoreCase: Boolean
  ): Array[String] = js.native
  
  /**
    * Gets the original parse tree node for a node.
    *
    * @param node The original node.
    * @returns The original parse tree node if found; otherwise, undefined.
    */
  def getParseTreeNode(): js.UndefOr[Node] = js.native
  def getParseTreeNode(node: Node): js.UndefOr[Node] = js.native
  def getParseTreeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node] = js.native
  def getParseTreeNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): js.UndefOr[T] = js.native
  def getParseTreeNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    nodeTest: js.Function1[
      /* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, 
      /* is T */ Boolean
    ]
  ): js.UndefOr[T] = js.native
  def getParseTreeNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    nodeTest: js.Function1[
      /* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, 
      /* is T */ Boolean
    ]
  ): js.UndefOr[T] = js.native
  /**
    * Gets the original parse tree node for a node.
    *
    * @param node The original node.
    * @param nodeTest A callback used to ensure the correct type of parse tree node is returned.
    * @returns The original parse tree node if found; otherwise, undefined.
    */
  @JSName("getParseTreeNode")
  def getParseTreeNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](): js.UndefOr[T] = js.native
  @JSName("getParseTreeNode")
  def getParseTreeNode_T_Node[T /* <: Node */](node: T): js.UndefOr[T] = js.native
  @JSName("getParseTreeNode")
  def getParseTreeNode_T_Node[T /* <: Node */](node: T, nodeTest: js.Function1[/* node */ Node, /* is T */ Boolean]): js.UndefOr[T] = js.native
  @JSName("getParseTreeNode")
  def getParseTreeNode_T_Node[T /* <: Node */](node: Unit, nodeTest: js.Function1[/* node */ Node, /* is T */ Boolean]): js.UndefOr[T] = js.native
  /**
    * Gets the original parse tree node for a node.
    *
    * @param node The original node.
    * @param nodeTest A callback used to ensure the correct type of parse tree node is returned.
    * @returns The original parse tree node if found; otherwise, undefined.
    */
  @JSName("getParseTreeNode")
  def getParseTreeNode_T_Node_T_Node[T /* <: Node */](): js.UndefOr[T] = js.native
  
  def getParsedCommandLineOfConfigFile(configFileName: String, optionsToExtend: Unit, host: ParseConfigFileHost): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: WatchOptions
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: WatchOptions,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry],
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry],
    watchOptionsToExtend: WatchOptions
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry],
    watchOptionsToExtend: WatchOptions,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry],
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry],
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: Unit,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry],
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(configFileName: String, optionsToExtend: CompilerOptions, host: ParseConfigFileHost): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: WatchOptions
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: WatchOptions,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry],
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry],
    watchOptionsToExtend: WatchOptions
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache: Map[ExtendedConfigCacheEntry],
    watchOptionsToExtend: WatchOptions,
    extraFileExtensions: Array[FileExtensionInfo]
  ): js.UndefOr[ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: Unit,
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry],
    watchOptionsToExtend: Unit,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry],
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  def getParsedCommandLineOfConfigFile(
    configFileName: String,
    optionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigFileHost,
    extendedConfigCache: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry],
    watchOptionsToExtend: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions,
    extraFileExtensions: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine] = js.native
  
  def getPositionOfLineAndCharacter(sourceFile: SourceFileLike, line: Double, character: Double): Double = js.native
  def getPositionOfLineAndCharacter(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFileLike,
    line: Double,
    character: Double
  ): Double = js.native
  
  def getPreEmitDiagnostics(program: Program): Array[Diagnostic] = js.native
  def getPreEmitDiagnostics(program: Program, sourceFile: Unit, cancellationToken: CancellationToken): Array[Diagnostic] = js.native
  def getPreEmitDiagnostics(program: Program, sourceFile: SourceFile): Array[Diagnostic] = js.native
  def getPreEmitDiagnostics(program: Program, sourceFile: SourceFile, cancellationToken: CancellationToken): Array[Diagnostic] = js.native
  def getPreEmitDiagnostics(program: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program): Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic] = js.native
  def getPreEmitDiagnostics(
    program: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    sourceFile: Unit,
    cancellationToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CancellationToken
  ): Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic] = js.native
  def getPreEmitDiagnostics(
    program: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile
  ): Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic] = js.native
  def getPreEmitDiagnostics(
    program: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Program,
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    cancellationToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CancellationToken
  ): Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic] = js.native
  
  /** Optionally, get the shebang */
  def getShebang(text: String): js.UndefOr[String] = js.native
  
  /**
    * Gets a custom text range to use when emitting source maps.
    */
  def getSourceMapRange(node: Node): SourceMapRange = js.native
  /**
    * Gets a custom text range to use when emitting source maps.
    */
  def getSourceMapRange(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceMapRange = js.native
  
  def getSupportedCodeFixes(): Array[String] = js.native
  
  def getSyntheticLeadingComments(node: Node): js.UndefOr[Array[SynthesizedComment]] = js.native
  def getSyntheticLeadingComments(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SynthesizedComment]] = js.native
  
  def getSyntheticTrailingComments(node: Node): js.UndefOr[Array[SynthesizedComment]] = js.native
  def getSyntheticTrailingComments(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SynthesizedComment]] = js.native
  
  /** Gets the text of a jsdoc comment, flattening links to their text. */
  def getTextOfJSDocComment(): js.UndefOr[String] = js.native
  def getTextOfJSDocComment(comment: String): js.UndefOr[String] = js.native
  def getTextOfJSDocComment(comment: NodeArray[JSDocComment]): js.UndefOr[String] = js.native
  def getTextOfJSDocComment(
    comment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JSDocComment]
  ): js.UndefOr[String] = js.native
  
  /**
    * Gets the TextRange to use for source maps for a token of a node.
    */
  def getTokenSourceMapRange(node: Node, token: SyntaxKind): js.UndefOr[SourceMapRange] = js.native
  /**
    * Gets the TextRange to use for source maps for a token of a node.
    */
  def getTokenSourceMapRange(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    token: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceMapRange] = js.native
  
  def getTrailingCommentRanges(text: String, pos: Double): js.UndefOr[Array[CommentRange]] = js.native
  
  def getTsBuildInfoEmitOutputFilePath(options: CompilerOptions): js.UndefOr[String] = js.native
  def getTsBuildInfoEmitOutputFilePath(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions): js.UndefOr[String] = js.native
  
  def getTypeParameterOwner(d: Declaration): js.UndefOr[Declaration] = js.native
  def getTypeParameterOwner(d: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Declaration): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Declaration] = js.native
  
  /**
    * Return true if the node has JSDoc parameter tags.
    *
    * @remarks Includes parameter tags that are not directly on the node,
    * for example on a variable declaration whose initializer is a function expression.
    */
  def hasJSDocParameterTags(node: FunctionLikeDeclaration): Boolean = js.native
  def hasJSDocParameterTags(node: SignatureDeclaration): Boolean = js.native
  /**
    * Return true if the node has JSDoc parameter tags.
    *
    * @remarks Includes parameter tags that are not directly on the node,
    * for example on a variable declaration whose initializer is a function expression.
    */
  def hasJSDocParameterTags(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionLikeDeclaration): Boolean = js.native
  def hasJSDocParameterTags(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SignatureDeclaration): Boolean = js.native
  
  /** True if has initializer node attached to it. */
  def hasOnlyExpressionInitializer(node: Node): /* is .typescript-nn5FuAjk.ts.HasExpressionInitializer */ Boolean = js.native
  /** True if has initializer node attached to it. */
  def hasOnlyExpressionInitializer(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.HasExpressionInitializer */ Boolean = js.native
  
  def idText(identifierOrPrivateName: Identifier): String = js.native
  def idText(identifierOrPrivateName: PrivateIdentifier): String = js.native
  def idText(identifierOrPrivateName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): String = js.native
  def idText(identifierOrPrivateName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrivateIdentifier): String = js.native
  
  def isAccessor(node: Node): /* is .typescript-nn5FuAjk.ts.AccessorDeclaration */ Boolean = js.native
  def isAccessor(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AccessorDeclaration */ Boolean = js.native
  
  def isArrayBindingPattern(node: Node): /* is .typescript-nn5FuAjk.ts.ArrayBindingPattern */ Boolean = js.native
  def isArrayBindingPattern(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ArrayBindingPattern */ Boolean = js.native
  
  def isArrayLiteralExpression(node: Node): /* is .typescript-nn5FuAjk.ts.ArrayLiteralExpression */ Boolean = js.native
  def isArrayLiteralExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ArrayLiteralExpression */ Boolean = js.native
  
  def isArrayTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.ArrayTypeNode */ Boolean = js.native
  def isArrayTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ArrayTypeNode */ Boolean = js.native
  
  def isArrowFunction(node: Node): /* is .typescript-nn5FuAjk.ts.ArrowFunction */ Boolean = js.native
  def isArrowFunction(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ArrowFunction */ Boolean = js.native
  
  def isAsExpression(node: Node): /* is .typescript-nn5FuAjk.ts.AsExpression */ Boolean = js.native
  def isAsExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AsExpression */ Boolean = js.native
  
  def isAssertClause(node: Node): /* is .typescript-nn5FuAjk.ts.AssertClause */ Boolean = js.native
  def isAssertClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AssertClause */ Boolean = js.native
  
  def isAssertEntry(node: Node): /* is .typescript-nn5FuAjk.ts.AssertEntry */ Boolean = js.native
  def isAssertEntry(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AssertEntry */ Boolean = js.native
  
  def isAssertionExpression(node: Node): /* is .typescript-nn5FuAjk.ts.AssertionExpression */ Boolean = js.native
  def isAssertionExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AssertionExpression */ Boolean = js.native
  
  def isAssertionKey(node: Node): /* is .typescript-nn5FuAjk.ts.AssertionKey */ Boolean = js.native
  def isAssertionKey(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AssertionKey */ Boolean = js.native
  
  def isAsteriskToken(node: Node): /* is .typescript-nn5FuAjk.ts.AsteriskToken */ Boolean = js.native
  def isAsteriskToken(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AsteriskToken */ Boolean = js.native
  
  def isAwaitExpression(node: Node): /* is .typescript-nn5FuAjk.ts.AwaitExpression */ Boolean = js.native
  def isAwaitExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.AwaitExpression */ Boolean = js.native
  
  def isBigIntLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.BigIntLiteral */ Boolean = js.native
  def isBigIntLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BigIntLiteral */ Boolean = js.native
  
  def isBinaryExpression(node: Node): /* is .typescript-nn5FuAjk.ts.BinaryExpression */ Boolean = js.native
  def isBinaryExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BinaryExpression */ Boolean = js.native
  
  def isBindingElement(node: Node): /* is .typescript-nn5FuAjk.ts.BindingElement */ Boolean = js.native
  def isBindingElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BindingElement */ Boolean = js.native
  
  def isBindingName(node: Node): /* is .typescript-nn5FuAjk.ts.BindingName */ Boolean = js.native
  def isBindingName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BindingName */ Boolean = js.native
  
  def isBlock(node: Node): /* is .typescript-nn5FuAjk.ts.Block */ Boolean = js.native
  def isBlock(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.Block */ Boolean = js.native
  
  def isBreakOrContinueStatement(node: Node): /* is .typescript-nn5FuAjk.ts.BreakOrContinueStatement */ Boolean = js.native
  def isBreakOrContinueStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BreakOrContinueStatement */ Boolean = js.native
  
  def isBreakStatement(node: Node): /* is .typescript-nn5FuAjk.ts.BreakStatement */ Boolean = js.native
  def isBreakStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BreakStatement */ Boolean = js.native
  
  def isBundle(node: Node): /* is .typescript-nn5FuAjk.ts.Bundle */ Boolean = js.native
  def isBundle(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.Bundle */ Boolean = js.native
  
  def isCallChain(node: Node): /* is .typescript-nn5FuAjk.ts.CallChain */ Boolean = js.native
  def isCallChain(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CallChain */ Boolean = js.native
  
  def isCallExpression(node: Node): /* is .typescript-nn5FuAjk.ts.CallExpression */ Boolean = js.native
  def isCallExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CallExpression */ Boolean = js.native
  
  def isCallLikeExpression(node: Node): /* is .typescript-nn5FuAjk.ts.CallLikeExpression */ Boolean = js.native
  def isCallLikeExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CallLikeExpression */ Boolean = js.native
  
  def isCallOrNewExpression(node: Node): Boolean = js.native
  def isCallOrNewExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isCallSignatureDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.CallSignatureDeclaration */ Boolean = js.native
  def isCallSignatureDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CallSignatureDeclaration */ Boolean = js.native
  
  def isCaseBlock(node: Node): /* is .typescript-nn5FuAjk.ts.CaseBlock */ Boolean = js.native
  def isCaseBlock(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CaseBlock */ Boolean = js.native
  
  def isCaseClause(node: Node): /* is .typescript-nn5FuAjk.ts.CaseClause */ Boolean = js.native
  def isCaseClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CaseClause */ Boolean = js.native
  
  def isCaseOrDefaultClause(node: Node): /* is .typescript-nn5FuAjk.ts.CaseOrDefaultClause */ Boolean = js.native
  def isCaseOrDefaultClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CaseOrDefaultClause */ Boolean = js.native
  
  def isCatchClause(node: Node): /* is .typescript-nn5FuAjk.ts.CatchClause */ Boolean = js.native
  def isCatchClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CatchClause */ Boolean = js.native
  
  def isClassDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ClassDeclaration */ Boolean = js.native
  def isClassDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ClassDeclaration */ Boolean = js.native
  
  def isClassElement(node: Node): /* is .typescript-nn5FuAjk.ts.ClassElement */ Boolean = js.native
  def isClassElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ClassElement */ Boolean = js.native
  
  def isClassExpression(node: Node): /* is .typescript-nn5FuAjk.ts.ClassExpression */ Boolean = js.native
  def isClassExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ClassExpression */ Boolean = js.native
  
  def isClassLike(node: Node): /* is .typescript-nn5FuAjk.ts.ClassLikeDeclaration */ Boolean = js.native
  def isClassLike(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ClassLikeDeclaration */ Boolean = js.native
  
  def isClassOrTypeElement(node: Node): Boolean = js.native
  def isClassOrTypeElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isClassStaticBlockDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ClassStaticBlockDeclaration */ Boolean = js.native
  def isClassStaticBlockDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ClassStaticBlockDeclaration */ Boolean = js.native
  
  def isCommaListExpression(node: Node): /* is .typescript-nn5FuAjk.ts.CommaListExpression */ Boolean = js.native
  def isCommaListExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.CommaListExpression */ Boolean = js.native
  
  def isComputedPropertyName(node: Node): /* is .typescript-nn5FuAjk.ts.ComputedPropertyName */ Boolean = js.native
  def isComputedPropertyName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ComputedPropertyName */ Boolean = js.native
  
  def isConditionalExpression(node: Node): /* is .typescript-nn5FuAjk.ts.ConditionalExpression */ Boolean = js.native
  def isConditionalExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ConditionalExpression */ Boolean = js.native
  
  def isConditionalTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.ConditionalTypeNode */ Boolean = js.native
  def isConditionalTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ConditionalTypeNode */ Boolean = js.native
  
  def isConstTypeReference(node: Node): Boolean = js.native
  def isConstTypeReference(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isConstructSignatureDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ConstructSignatureDeclaration */ Boolean = js.native
  def isConstructSignatureDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ConstructSignatureDeclaration */ Boolean = js.native
  
  def isConstructorDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ConstructorDeclaration */ Boolean = js.native
  def isConstructorDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ConstructorDeclaration */ Boolean = js.native
  
  def isConstructorTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.ConstructorTypeNode */ Boolean = js.native
  def isConstructorTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ConstructorTypeNode */ Boolean = js.native
  
  def isContinueStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ContinueStatement */ Boolean = js.native
  def isContinueStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ContinueStatement */ Boolean = js.native
  
  def isDebuggerStatement(node: Node): /* is .typescript-nn5FuAjk.ts.DebuggerStatement */ Boolean = js.native
  def isDebuggerStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.DebuggerStatement */ Boolean = js.native
  
  def isDecorator(node: Node): /* is .typescript-nn5FuAjk.ts.Decorator */ Boolean = js.native
  def isDecorator(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.Decorator */ Boolean = js.native
  
  def isDefaultClause(node: Node): /* is .typescript-nn5FuAjk.ts.DefaultClause */ Boolean = js.native
  def isDefaultClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.DefaultClause */ Boolean = js.native
  
  def isDeleteExpression(node: Node): /* is .typescript-nn5FuAjk.ts.DeleteExpression */ Boolean = js.native
  def isDeleteExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.DeleteExpression */ Boolean = js.native
  
  def isDoStatement(node: Node): /* is .typescript-nn5FuAjk.ts.DoStatement */ Boolean = js.native
  def isDoStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.DoStatement */ Boolean = js.native
  
  def isDotDotDotToken(node: Node): /* is .typescript-nn5FuAjk.ts.DotDotDotToken */ Boolean = js.native
  def isDotDotDotToken(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.DotDotDotToken */ Boolean = js.native
  
  def isElementAccessChain(node: Node): /* is .typescript-nn5FuAjk.ts.ElementAccessChain */ Boolean = js.native
  def isElementAccessChain(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ElementAccessChain */ Boolean = js.native
  
  def isElementAccessExpression(node: Node): /* is .typescript-nn5FuAjk.ts.ElementAccessExpression */ Boolean = js.native
  def isElementAccessExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ElementAccessExpression */ Boolean = js.native
  
  def isEmptyBindingElement(node: typings.typescriptNn5FuAjk.ts.BindingElement): Boolean = js.native
  def isEmptyBindingElement(node: BindingElement): Boolean = js.native
  
  def isEmptyBindingPattern(node: BindingName): /* is .typescript-nn5FuAjk.ts.BindingPattern */ Boolean = js.native
  def isEmptyBindingPattern(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.BindingPattern */ Boolean = js.native
  
  def isEmptyStatement(node: Node): /* is .typescript-nn5FuAjk.ts.EmptyStatement */ Boolean = js.native
  def isEmptyStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.EmptyStatement */ Boolean = js.native
  
  def isEntityName(node: Node): /* is .typescript-nn5FuAjk.ts.EntityName */ Boolean = js.native
  def isEntityName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.EntityName */ Boolean = js.native
  
  def isEnumDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.EnumDeclaration */ Boolean = js.native
  def isEnumDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.EnumDeclaration */ Boolean = js.native
  
  def isEnumMember(node: Node): /* is .typescript-nn5FuAjk.ts.EnumMember */ Boolean = js.native
  def isEnumMember(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.EnumMember */ Boolean = js.native
  
  def isExportAssignment(node: Node): /* is .typescript-nn5FuAjk.ts.ExportAssignment */ Boolean = js.native
  def isExportAssignment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ExportAssignment */ Boolean = js.native
  
  def isExportDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ExportDeclaration */ Boolean = js.native
  def isExportDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ExportDeclaration */ Boolean = js.native
  
  def isExportSpecifier(node: Node): /* is .typescript-nn5FuAjk.ts.ExportSpecifier */ Boolean = js.native
  def isExportSpecifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ExportSpecifier */ Boolean = js.native
  
  def isExpressionStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ExpressionStatement */ Boolean = js.native
  def isExpressionStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ExpressionStatement */ Boolean = js.native
  
  def isExpressionWithTypeArguments(node: Node): /* is .typescript-nn5FuAjk.ts.ExpressionWithTypeArguments */ Boolean = js.native
  def isExpressionWithTypeArguments(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ExpressionWithTypeArguments */ Boolean = js.native
  
  def isExternalModule(file: SourceFile): Boolean = js.native
  def isExternalModule(file: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile): Boolean = js.native
  
  def isExternalModuleNameRelative(moduleName: String): Boolean = js.native
  
  def isExternalModuleReference(node: Node): /* is .typescript-nn5FuAjk.ts.ExternalModuleReference */ Boolean = js.native
  def isExternalModuleReference(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ExternalModuleReference */ Boolean = js.native
  
  def isForInStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ForInStatement */ Boolean = js.native
  def isForInStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ForInStatement */ Boolean = js.native
  
  def isForOfStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ForOfStatement */ Boolean = js.native
  def isForOfStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ForOfStatement */ Boolean = js.native
  
  def isForStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ForStatement */ Boolean = js.native
  def isForStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ForStatement */ Boolean = js.native
  
  def isFunctionDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.FunctionDeclaration */ Boolean = js.native
  def isFunctionDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.FunctionDeclaration */ Boolean = js.native
  
  def isFunctionExpression(node: Node): /* is .typescript-nn5FuAjk.ts.FunctionExpression */ Boolean = js.native
  def isFunctionExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.FunctionExpression */ Boolean = js.native
  
  def isFunctionLike(): /* is .typescript-nn5FuAjk.ts.SignatureDeclaration */ Boolean = js.native
  def isFunctionLike(node: Node): /* is .typescript-nn5FuAjk.ts.SignatureDeclaration */ Boolean = js.native
  def isFunctionLike(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SignatureDeclaration */ Boolean = js.native
  
  def isFunctionOrConstructorTypeNode(node: Node): Boolean = js.native
  def isFunctionOrConstructorTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isFunctionTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.FunctionTypeNode */ Boolean = js.native
  def isFunctionTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.FunctionTypeNode */ Boolean = js.native
  
  def isGetAccessor(node: Node): /* is .typescript-nn5FuAjk.ts.GetAccessorDeclaration */ Boolean = js.native
  def isGetAccessor(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.GetAccessorDeclaration */ Boolean = js.native
  
  def isGetAccessorDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.GetAccessorDeclaration */ Boolean = js.native
  def isGetAccessorDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.GetAccessorDeclaration */ Boolean = js.native
  
  def isHeritageClause(node: Node): /* is .typescript-nn5FuAjk.ts.HeritageClause */ Boolean = js.native
  def isHeritageClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.HeritageClause */ Boolean = js.native
  
  def isIdentifier(node: Node): /* is .typescript-nn5FuAjk.ts.Identifier */ Boolean = js.native
  def isIdentifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.Identifier */ Boolean = js.native
  
  /**
    * @deprecated Use `isMemberName` instead.
    */
  def isIdentifierOrPrivateIdentifier(node: Node): /* is .typescript-nn5FuAjk.ts.MemberName */ Boolean = js.native
  /**
    * @deprecated Use `isMemberName` instead.
    */
  def isIdentifierOrPrivateIdentifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MemberName */ Boolean = js.native
  
  def isIdentifierPart(ch: Double): Boolean = js.native
  def isIdentifierPart(ch: Double, languageVersion: Unit, identifierVariant: LanguageVariant): Boolean = js.native
  def isIdentifierPart(
    ch: Double,
    languageVersion: Unit,
    identifierVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant
  ): Boolean = js.native
  def isIdentifierPart(ch: Double, languageVersion: ScriptTarget): Boolean = js.native
  def isIdentifierPart(ch: Double, languageVersion: ScriptTarget, identifierVariant: LanguageVariant): Boolean = js.native
  def isIdentifierPart(ch: Double, languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget): Boolean = js.native
  def isIdentifierPart(
    ch: Double,
    languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget,
    identifierVariant: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LanguageVariant
  ): Boolean = js.native
  
  def isIdentifierStart(ch: Double): Boolean = js.native
  def isIdentifierStart(ch: Double, languageVersion: ScriptTarget): Boolean = js.native
  def isIdentifierStart(ch: Double, languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget): Boolean = js.native
  
  def isIfStatement(node: Node): /* is .typescript-nn5FuAjk.ts.IfStatement */ Boolean = js.native
  def isIfStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.IfStatement */ Boolean = js.native
  
  def isImportClause(node: Node): /* is .typescript-nn5FuAjk.ts.ImportClause */ Boolean = js.native
  def isImportClause(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ImportClause */ Boolean = js.native
  
  def isImportDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ImportDeclaration */ Boolean = js.native
  def isImportDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ImportDeclaration */ Boolean = js.native
  
  def isImportEqualsDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ImportEqualsDeclaration */ Boolean = js.native
  def isImportEqualsDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ImportEqualsDeclaration */ Boolean = js.native
  
  def isImportOrExportSpecifier(node: Node): Boolean = js.native
  def isImportOrExportSpecifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isImportSpecifier(node: Node): /* is .typescript-nn5FuAjk.ts.ImportSpecifier */ Boolean = js.native
  def isImportSpecifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ImportSpecifier */ Boolean = js.native
  
  def isImportTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.ImportTypeNode */ Boolean = js.native
  def isImportTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ImportTypeNode */ Boolean = js.native
  
  def isIndexSignatureDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.IndexSignatureDeclaration */ Boolean = js.native
  def isIndexSignatureDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.IndexSignatureDeclaration */ Boolean = js.native
  
  def isIndexedAccessTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.IndexedAccessTypeNode */ Boolean = js.native
  def isIndexedAccessTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.IndexedAccessTypeNode */ Boolean = js.native
  
  def isInferTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.InferTypeNode */ Boolean = js.native
  def isInferTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.InferTypeNode */ Boolean = js.native
  
  def isInterfaceDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.InterfaceDeclaration */ Boolean = js.native
  def isInterfaceDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.InterfaceDeclaration */ Boolean = js.native
  
  def isIntersectionTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.IntersectionTypeNode */ Boolean = js.native
  def isIntersectionTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.IntersectionTypeNode */ Boolean = js.native
  
  def isIterationStatement(node: Node, lookInLabeledStatements: Boolean): Boolean = js.native
  def isIterationStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, lookInLabeledStatements: Boolean): Boolean = js.native
  @JSName("isIterationStatement")
  def isIterationStatement_false(node: Node, lookInLabeledStatements: `false`): /* is .typescript-nn5FuAjk.ts.IterationStatement */ Boolean = js.native
  @JSName("isIterationStatement")
  def isIterationStatement_false(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, lookInLabeledStatements: `false`): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.IterationStatement */ Boolean = js.native
  
  def isJSDoc(node: Node): /* is .typescript-nn5FuAjk.ts.JSDoc */ Boolean = js.native
  def isJSDoc(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDoc */ Boolean = js.native
  
  def isJSDocAllType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocAllType */ Boolean = js.native
  def isJSDocAllType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocAllType */ Boolean = js.native
  
  def isJSDocAugmentsTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocAugmentsTag */ Boolean = js.native
  def isJSDocAugmentsTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocAugmentsTag */ Boolean = js.native
  
  def isJSDocAuthorTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocAuthorTag */ Boolean = js.native
  def isJSDocAuthorTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocAuthorTag */ Boolean = js.native
  
  def isJSDocCallbackTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocCallbackTag */ Boolean = js.native
  def isJSDocCallbackTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocCallbackTag */ Boolean = js.native
  
  def isJSDocClassTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocClassTag */ Boolean = js.native
  def isJSDocClassTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocClassTag */ Boolean = js.native
  
  /** True if node is of a kind that may contain comment text. */
  def isJSDocCommentContainingNode(node: Node): Boolean = js.native
  /** True if node is of a kind that may contain comment text. */
  def isJSDocCommentContainingNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isJSDocDeprecatedTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocDeprecatedTag */ Boolean = js.native
  def isJSDocDeprecatedTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocDeprecatedTag */ Boolean = js.native
  
  def isJSDocEnumTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocEnumTag */ Boolean = js.native
  def isJSDocEnumTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocEnumTag */ Boolean = js.native
  
  def isJSDocFunctionType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocFunctionType */ Boolean = js.native
  def isJSDocFunctionType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocFunctionType */ Boolean = js.native
  
  def isJSDocImplementsTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocImplementsTag */ Boolean = js.native
  def isJSDocImplementsTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocImplementsTag */ Boolean = js.native
  
  def isJSDocLink(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocLink */ Boolean = js.native
  def isJSDocLink(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocLink */ Boolean = js.native
  
  def isJSDocLinkCode(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocLinkCode */ Boolean = js.native
  def isJSDocLinkCode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocLinkCode */ Boolean = js.native
  
  def isJSDocLinkLike(node: Node): Boolean = js.native
  def isJSDocLinkLike(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isJSDocLinkPlain(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocLinkPlain */ Boolean = js.native
  def isJSDocLinkPlain(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocLinkPlain */ Boolean = js.native
  
  def isJSDocMemberName(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocMemberName */ Boolean = js.native
  def isJSDocMemberName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocMemberName */ Boolean = js.native
  
  def isJSDocNameReference(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocNameReference */ Boolean = js.native
  def isJSDocNameReference(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocNameReference */ Boolean = js.native
  
  def isJSDocNamepathType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocNamepathType */ Boolean = js.native
  def isJSDocNamepathType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocNamepathType */ Boolean = js.native
  
  def isJSDocNonNullableType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocNonNullableType */ Boolean = js.native
  def isJSDocNonNullableType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocNonNullableType */ Boolean = js.native
  
  def isJSDocNullableType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocNullableType */ Boolean = js.native
  def isJSDocNullableType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocNullableType */ Boolean = js.native
  
  def isJSDocOptionalType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocOptionalType */ Boolean = js.native
  def isJSDocOptionalType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocOptionalType */ Boolean = js.native
  
  def isJSDocOverrideTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocOverrideTag */ Boolean = js.native
  def isJSDocOverrideTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocOverrideTag */ Boolean = js.native
  
  def isJSDocParameterTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocParameterTag */ Boolean = js.native
  def isJSDocParameterTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocParameterTag */ Boolean = js.native
  
  def isJSDocPrivateTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocPrivateTag */ Boolean = js.native
  def isJSDocPrivateTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocPrivateTag */ Boolean = js.native
  
  def isJSDocPropertyLikeTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocPropertyLikeTag */ Boolean = js.native
  def isJSDocPropertyLikeTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocPropertyLikeTag */ Boolean = js.native
  
  def isJSDocPropertyTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocPropertyTag */ Boolean = js.native
  def isJSDocPropertyTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocPropertyTag */ Boolean = js.native
  
  def isJSDocProtectedTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocProtectedTag */ Boolean = js.native
  def isJSDocProtectedTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocProtectedTag */ Boolean = js.native
  
  def isJSDocPublicTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocPublicTag */ Boolean = js.native
  def isJSDocPublicTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocPublicTag */ Boolean = js.native
  
  def isJSDocReadonlyTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocReadonlyTag */ Boolean = js.native
  def isJSDocReadonlyTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocReadonlyTag */ Boolean = js.native
  
  def isJSDocReturnTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocReturnTag */ Boolean = js.native
  def isJSDocReturnTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocReturnTag */ Boolean = js.native
  
  def isJSDocSeeTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocSeeTag */ Boolean = js.native
  def isJSDocSeeTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocSeeTag */ Boolean = js.native
  
  def isJSDocSignature(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocSignature */ Boolean = js.native
  def isJSDocSignature(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocSignature */ Boolean = js.native
  
  def isJSDocTemplateTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocTemplateTag */ Boolean = js.native
  def isJSDocTemplateTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocTemplateTag */ Boolean = js.native
  
  def isJSDocThisTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocThisTag */ Boolean = js.native
  def isJSDocThisTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocThisTag */ Boolean = js.native
  
  def isJSDocTypeExpression(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocTypeExpression */ Boolean = js.native
  def isJSDocTypeExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocTypeExpression */ Boolean = js.native
  
  def isJSDocTypeLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocTypeLiteral */ Boolean = js.native
  def isJSDocTypeLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocTypeLiteral */ Boolean = js.native
  
  def isJSDocTypeTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocTypeTag */ Boolean = js.native
  def isJSDocTypeTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocTypeTag */ Boolean = js.native
  
  def isJSDocTypedefTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocTypedefTag */ Boolean = js.native
  def isJSDocTypedefTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocTypedefTag */ Boolean = js.native
  
  def isJSDocUnknownTag(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocUnknownTag */ Boolean = js.native
  def isJSDocUnknownTag(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocUnknownTag */ Boolean = js.native
  
  def isJSDocUnknownType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocUnknownType */ Boolean = js.native
  def isJSDocUnknownType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocUnknownType */ Boolean = js.native
  
  def isJSDocVariadicType(node: Node): /* is .typescript-nn5FuAjk.ts.JSDocVariadicType */ Boolean = js.native
  def isJSDocVariadicType(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JSDocVariadicType */ Boolean = js.native
  
  def isJsxAttribute(node: Node): /* is .typescript-nn5FuAjk.ts.JsxAttribute */ Boolean = js.native
  def isJsxAttribute(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxAttribute */ Boolean = js.native
  
  def isJsxAttributes(node: Node): /* is .typescript-nn5FuAjk.ts.JsxAttributes */ Boolean = js.native
  def isJsxAttributes(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxAttributes */ Boolean = js.native
  
  def isJsxClosingElement(node: Node): /* is .typescript-nn5FuAjk.ts.JsxClosingElement */ Boolean = js.native
  def isJsxClosingElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxClosingElement */ Boolean = js.native
  
  def isJsxClosingFragment(node: Node): /* is .typescript-nn5FuAjk.ts.JsxClosingFragment */ Boolean = js.native
  def isJsxClosingFragment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxClosingFragment */ Boolean = js.native
  
  def isJsxElement(node: Node): /* is .typescript-nn5FuAjk.ts.JsxElement */ Boolean = js.native
  def isJsxElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxElement */ Boolean = js.native
  
  def isJsxExpression(node: Node): /* is .typescript-nn5FuAjk.ts.JsxExpression */ Boolean = js.native
  def isJsxExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxExpression */ Boolean = js.native
  
  def isJsxFragment(node: Node): /* is .typescript-nn5FuAjk.ts.JsxFragment */ Boolean = js.native
  def isJsxFragment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxFragment */ Boolean = js.native
  
  def isJsxOpeningElement(node: Node): /* is .typescript-nn5FuAjk.ts.JsxOpeningElement */ Boolean = js.native
  def isJsxOpeningElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxOpeningElement */ Boolean = js.native
  
  def isJsxOpeningFragment(node: Node): /* is .typescript-nn5FuAjk.ts.JsxOpeningFragment */ Boolean = js.native
  def isJsxOpeningFragment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxOpeningFragment */ Boolean = js.native
  
  def isJsxOpeningLikeElement(node: Node): /* is .typescript-nn5FuAjk.ts.JsxOpeningLikeElement */ Boolean = js.native
  def isJsxOpeningLikeElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxOpeningLikeElement */ Boolean = js.native
  
  def isJsxSelfClosingElement(node: Node): /* is .typescript-nn5FuAjk.ts.JsxSelfClosingElement */ Boolean = js.native
  def isJsxSelfClosingElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxSelfClosingElement */ Boolean = js.native
  
  def isJsxSpreadAttribute(node: Node): /* is .typescript-nn5FuAjk.ts.JsxSpreadAttribute */ Boolean = js.native
  def isJsxSpreadAttribute(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxSpreadAttribute */ Boolean = js.native
  
  def isJsxText(node: Node): /* is .typescript-nn5FuAjk.ts.JsxText */ Boolean = js.native
  def isJsxText(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.JsxText */ Boolean = js.native
  
  def isLabeledStatement(node: Node): /* is .typescript-nn5FuAjk.ts.LabeledStatement */ Boolean = js.native
  def isLabeledStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.LabeledStatement */ Boolean = js.native
  
  def isLineBreak(ch: Double): Boolean = js.native
  
  def isLiteralExpression(node: Node): /* is .typescript-nn5FuAjk.ts.LiteralExpression */ Boolean = js.native
  def isLiteralExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.LiteralExpression */ Boolean = js.native
  
  def isLiteralTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.LiteralTypeNode */ Boolean = js.native
  def isLiteralTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.LiteralTypeNode */ Boolean = js.native
  
  def isMappedTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.MappedTypeNode */ Boolean = js.native
  def isMappedTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MappedTypeNode */ Boolean = js.native
  
  def isMemberName(node: Node): /* is .typescript-nn5FuAjk.ts.MemberName */ Boolean = js.native
  def isMemberName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MemberName */ Boolean = js.native
  
  def isMetaProperty(node: Node): /* is .typescript-nn5FuAjk.ts.MetaProperty */ Boolean = js.native
  def isMetaProperty(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MetaProperty */ Boolean = js.native
  
  def isMethodDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.MethodDeclaration */ Boolean = js.native
  def isMethodDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MethodDeclaration */ Boolean = js.native
  
  def isMethodSignature(node: Node): /* is .typescript-nn5FuAjk.ts.MethodSignature */ Boolean = js.native
  def isMethodSignature(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MethodSignature */ Boolean = js.native
  
  def isMinusToken(node: Node): /* is .typescript-nn5FuAjk.ts.MinusToken */ Boolean = js.native
  def isMinusToken(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MinusToken */ Boolean = js.native
  
  def isMissingDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.MissingDeclaration */ Boolean = js.native
  def isMissingDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.MissingDeclaration */ Boolean = js.native
  
  def isModifier(node: Node): /* is .typescript-nn5FuAjk.ts.Modifier */ Boolean = js.native
  def isModifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.Modifier */ Boolean = js.native
  
  def isModuleBlock(node: Node): /* is .typescript-nn5FuAjk.ts.ModuleBlock */ Boolean = js.native
  def isModuleBlock(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ModuleBlock */ Boolean = js.native
  
  def isModuleDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.ModuleDeclaration */ Boolean = js.native
  def isModuleDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ModuleDeclaration */ Boolean = js.native
  
  def isNamedExportBindings(node: Node): /* is .typescript-nn5FuAjk.ts.NamedExportBindings */ Boolean = js.native
  def isNamedExportBindings(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamedExportBindings */ Boolean = js.native
  
  def isNamedExports(node: Node): /* is .typescript-nn5FuAjk.ts.NamedExports */ Boolean = js.native
  def isNamedExports(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamedExports */ Boolean = js.native
  
  def isNamedImports(node: Node): /* is .typescript-nn5FuAjk.ts.NamedImports */ Boolean = js.native
  def isNamedImports(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamedImports */ Boolean = js.native
  
  def isNamedTupleMember(node: Node): /* is .typescript-nn5FuAjk.ts.NamedTupleMember */ Boolean = js.native
  def isNamedTupleMember(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamedTupleMember */ Boolean = js.native
  
  def isNamespaceExport(node: Node): /* is .typescript-nn5FuAjk.ts.NamespaceExport */ Boolean = js.native
  def isNamespaceExport(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamespaceExport */ Boolean = js.native
  
  def isNamespaceExportDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.NamespaceExportDeclaration */ Boolean = js.native
  def isNamespaceExportDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamespaceExportDeclaration */ Boolean = js.native
  
  def isNamespaceImport(node: Node): /* is .typescript-nn5FuAjk.ts.NamespaceImport */ Boolean = js.native
  def isNamespaceImport(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NamespaceImport */ Boolean = js.native
  
  def isNewExpression(node: Node): /* is .typescript-nn5FuAjk.ts.NewExpression */ Boolean = js.native
  def isNewExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NewExpression */ Boolean = js.native
  
  def isNoSubstitutionTemplateLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.NoSubstitutionTemplateLiteral */ Boolean = js.native
  def isNoSubstitutionTemplateLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NoSubstitutionTemplateLiteral */ Boolean = js.native
  
  def isNonNullChain(node: Node): /* is .typescript-nn5FuAjk.ts.NonNullChain */ Boolean = js.native
  def isNonNullChain(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NonNullChain */ Boolean = js.native
  
  def isNonNullExpression(node: Node): /* is .typescript-nn5FuAjk.ts.NonNullExpression */ Boolean = js.native
  def isNonNullExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NonNullExpression */ Boolean = js.native
  
  def isNotEmittedStatement(node: Node): /* is .typescript-nn5FuAjk.ts.NotEmittedStatement */ Boolean = js.native
  def isNotEmittedStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NotEmittedStatement */ Boolean = js.native
  
  def isNullishCoalesce(node: Node): Boolean = js.native
  def isNullishCoalesce(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isNumericLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.NumericLiteral */ Boolean = js.native
  def isNumericLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.NumericLiteral */ Boolean = js.native
  
  def isObjectBindingPattern(node: Node): /* is .typescript-nn5FuAjk.ts.ObjectBindingPattern */ Boolean = js.native
  def isObjectBindingPattern(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ObjectBindingPattern */ Boolean = js.native
  
  def isObjectLiteralElement(node: Node): /* is .typescript-nn5FuAjk.ts.ObjectLiteralElement */ Boolean = js.native
  def isObjectLiteralElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ObjectLiteralElement */ Boolean = js.native
  
  def isObjectLiteralElementLike(node: Node): /* is .typescript-nn5FuAjk.ts.ObjectLiteralElementLike */ Boolean = js.native
  def isObjectLiteralElementLike(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ObjectLiteralElementLike */ Boolean = js.native
  
  def isObjectLiteralExpression(node: Node): /* is .typescript-nn5FuAjk.ts.ObjectLiteralExpression */ Boolean = js.native
  def isObjectLiteralExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ObjectLiteralExpression */ Boolean = js.native
  
  def isOmittedExpression(node: Node): /* is .typescript-nn5FuAjk.ts.OmittedExpression */ Boolean = js.native
  def isOmittedExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.OmittedExpression */ Boolean = js.native
  
  def isOptionalChain(node: Node): Boolean = js.native
  def isOptionalChain(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isOptionalTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.OptionalTypeNode */ Boolean = js.native
  def isOptionalTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.OptionalTypeNode */ Boolean = js.native
  
  def isParameter(node: Node): /* is .typescript-nn5FuAjk.ts.ParameterDeclaration */ Boolean = js.native
  def isParameter(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ParameterDeclaration */ Boolean = js.native
  
  def isParameterPropertyDeclaration(node: Node, parent: Node): /* is .typescript-nn5FuAjk.ts.ParameterPropertyDeclaration */ Boolean = js.native
  def isParameterPropertyDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    parent: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node
  ): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ParameterPropertyDeclaration */ Boolean = js.native
  
  def isParenthesizedExpression(node: Node): /* is .typescript-nn5FuAjk.ts.ParenthesizedExpression */ Boolean = js.native
  def isParenthesizedExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ParenthesizedExpression */ Boolean = js.native
  
  def isParenthesizedTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.ParenthesizedTypeNode */ Boolean = js.native
  def isParenthesizedTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ParenthesizedTypeNode */ Boolean = js.native
  
  /**
    * Gets a value indicating whether a node originated in the parse tree.
    *
    * @param node The node to test.
    */
  def isParseTreeNode(node: Node): Boolean = js.native
  /**
    * Gets a value indicating whether a node originated in the parse tree.
    *
    * @param node The node to test.
    */
  def isParseTreeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isPartiallyEmittedExpression(node: Node): /* is .typescript-nn5FuAjk.ts.PartiallyEmittedExpression */ Boolean = js.native
  def isPartiallyEmittedExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PartiallyEmittedExpression */ Boolean = js.native
  
  def isPlusToken(node: Node): /* is .typescript-nn5FuAjk.ts.PlusToken */ Boolean = js.native
  def isPlusToken(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PlusToken */ Boolean = js.native
  
  def isPostfixUnaryExpression(node: Node): /* is .typescript-nn5FuAjk.ts.PostfixUnaryExpression */ Boolean = js.native
  def isPostfixUnaryExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PostfixUnaryExpression */ Boolean = js.native
  
  def isPrefixUnaryExpression(node: Node): /* is .typescript-nn5FuAjk.ts.PrefixUnaryExpression */ Boolean = js.native
  def isPrefixUnaryExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PrefixUnaryExpression */ Boolean = js.native
  
  def isPrivateIdentifier(node: Node): /* is .typescript-nn5FuAjk.ts.PrivateIdentifier */ Boolean = js.native
  def isPrivateIdentifier(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PrivateIdentifier */ Boolean = js.native
  
  def isPropertyAccessChain(node: Node): /* is .typescript-nn5FuAjk.ts.PropertyAccessChain */ Boolean = js.native
  def isPropertyAccessChain(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PropertyAccessChain */ Boolean = js.native
  
  def isPropertyAccessExpression(node: Node): /* is .typescript-nn5FuAjk.ts.PropertyAccessExpression */ Boolean = js.native
  def isPropertyAccessExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PropertyAccessExpression */ Boolean = js.native
  
  def isPropertyAccessOrQualifiedName(node: Node): Boolean = js.native
  def isPropertyAccessOrQualifiedName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isPropertyAssignment(node: Node): /* is .typescript-nn5FuAjk.ts.PropertyAssignment */ Boolean = js.native
  def isPropertyAssignment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PropertyAssignment */ Boolean = js.native
  
  def isPropertyDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.PropertyDeclaration */ Boolean = js.native
  def isPropertyDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PropertyDeclaration */ Boolean = js.native
  
  def isPropertyName(node: Node): /* is .typescript-nn5FuAjk.ts.PropertyName */ Boolean = js.native
  def isPropertyName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PropertyName */ Boolean = js.native
  
  def isPropertySignature(node: Node): /* is .typescript-nn5FuAjk.ts.PropertySignature */ Boolean = js.native
  def isPropertySignature(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.PropertySignature */ Boolean = js.native
  
  def isQualifiedName(node: Node): /* is .typescript-nn5FuAjk.ts.QualifiedName */ Boolean = js.native
  def isQualifiedName(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.QualifiedName */ Boolean = js.native
  
  def isRegularExpressionLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.RegularExpressionLiteral */ Boolean = js.native
  def isRegularExpressionLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.RegularExpressionLiteral */ Boolean = js.native
  
  def isRestTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.RestTypeNode */ Boolean = js.native
  def isRestTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.RestTypeNode */ Boolean = js.native
  
  def isReturnStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ReturnStatement */ Boolean = js.native
  def isReturnStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ReturnStatement */ Boolean = js.native
  
  def isSemicolonClassElement(node: Node): /* is .typescript-nn5FuAjk.ts.SemicolonClassElement */ Boolean = js.native
  def isSemicolonClassElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SemicolonClassElement */ Boolean = js.native
  
  def isSetAccessor(node: Node): /* is .typescript-nn5FuAjk.ts.SetAccessorDeclaration */ Boolean = js.native
  def isSetAccessor(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SetAccessorDeclaration */ Boolean = js.native
  
  def isSetAccessorDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.SetAccessorDeclaration */ Boolean = js.native
  def isSetAccessorDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SetAccessorDeclaration */ Boolean = js.native
  
  def isShorthandPropertyAssignment(node: Node): /* is .typescript-nn5FuAjk.ts.ShorthandPropertyAssignment */ Boolean = js.native
  def isShorthandPropertyAssignment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ShorthandPropertyAssignment */ Boolean = js.native
  
  def isSourceFile(node: Node): /* is .typescript-nn5FuAjk.ts.SourceFile */ Boolean = js.native
  def isSourceFile(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SourceFile */ Boolean = js.native
  
  def isSpreadAssignment(node: Node): /* is .typescript-nn5FuAjk.ts.SpreadAssignment */ Boolean = js.native
  def isSpreadAssignment(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SpreadAssignment */ Boolean = js.native
  
  def isSpreadElement(node: Node): /* is .typescript-nn5FuAjk.ts.SpreadElement */ Boolean = js.native
  def isSpreadElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SpreadElement */ Boolean = js.native
  
  def isStringLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.StringLiteral */ Boolean = js.native
  def isStringLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.StringLiteral */ Boolean = js.native
  
  def isStringLiteralLike(node: Node): /* is .typescript-nn5FuAjk.ts.StringLiteralLike */ Boolean = js.native
  def isStringLiteralLike(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.StringLiteralLike */ Boolean = js.native
  
  def isStringTextContainingNode(node: Node): Boolean = js.native
  def isStringTextContainingNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isSwitchStatement(node: Node): /* is .typescript-nn5FuAjk.ts.SwitchStatement */ Boolean = js.native
  def isSwitchStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SwitchStatement */ Boolean = js.native
  
  def isSyntheticExpression(node: Node): /* is .typescript-nn5FuAjk.ts.SyntheticExpression */ Boolean = js.native
  def isSyntheticExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.SyntheticExpression */ Boolean = js.native
  
  def isTaggedTemplateExpression(node: Node): /* is .typescript-nn5FuAjk.ts.TaggedTemplateExpression */ Boolean = js.native
  def isTaggedTemplateExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TaggedTemplateExpression */ Boolean = js.native
  
  def isTemplateExpression(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateExpression */ Boolean = js.native
  def isTemplateExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateExpression */ Boolean = js.native
  
  def isTemplateHead(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateHead */ Boolean = js.native
  def isTemplateHead(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateHead */ Boolean = js.native
  
  def isTemplateLiteral(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateLiteral */ Boolean = js.native
  def isTemplateLiteral(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateLiteral */ Boolean = js.native
  
  def isTemplateLiteralToken(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateLiteralToken */ Boolean = js.native
  def isTemplateLiteralToken(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateLiteralToken */ Boolean = js.native
  
  def isTemplateLiteralTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateLiteralTypeNode */ Boolean = js.native
  def isTemplateLiteralTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateLiteralTypeNode */ Boolean = js.native
  
  def isTemplateLiteralTypeSpan(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateLiteralTypeSpan */ Boolean = js.native
  def isTemplateLiteralTypeSpan(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateLiteralTypeSpan */ Boolean = js.native
  
  def isTemplateMiddle(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateMiddle */ Boolean = js.native
  def isTemplateMiddle(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateMiddle */ Boolean = js.native
  
  def isTemplateMiddleOrTemplateTail(node: Node): Boolean = js.native
  def isTemplateMiddleOrTemplateTail(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  def isTemplateSpan(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateSpan */ Boolean = js.native
  def isTemplateSpan(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateSpan */ Boolean = js.native
  
  def isTemplateTail(node: Node): /* is .typescript-nn5FuAjk.ts.TemplateTail */ Boolean = js.native
  def isTemplateTail(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TemplateTail */ Boolean = js.native
  
  def isThisTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.ThisTypeNode */ Boolean = js.native
  def isThisTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ThisTypeNode */ Boolean = js.native
  
  def isThrowStatement(node: Node): /* is .typescript-nn5FuAjk.ts.ThrowStatement */ Boolean = js.native
  def isThrowStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.ThrowStatement */ Boolean = js.native
  
  /**
    * True if node is of some token syntax kind.
    * For example, this is true for an IfKeyword but not for an IfStatement.
    * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.
    */
  def isToken(n: Node): Boolean = js.native
  /**
    * True if node is of some token syntax kind.
    * For example, this is true for an IfKeyword but not for an IfStatement.
    * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.
    */
  def isToken(n: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): Boolean = js.native
  
  /**
    * True if kind is of some token syntax kind.
    * For example, this is true for an IfKeyword but not for an IfStatement.
    * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.
    */
  def isTokenKind(kind: SyntaxKind): Boolean = js.native
  /**
    * True if kind is of some token syntax kind.
    * For example, this is true for an IfKeyword but not for an IfStatement.
    * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.
    */
  def isTokenKind(kind: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind): Boolean = js.native
  
  def isTryStatement(node: Node): /* is .typescript-nn5FuAjk.ts.TryStatement */ Boolean = js.native
  def isTryStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TryStatement */ Boolean = js.native
  
  def isTupleTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.TupleTypeNode */ Boolean = js.native
  def isTupleTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TupleTypeNode */ Boolean = js.native
  
  def isTypeAliasDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.TypeAliasDeclaration */ Boolean = js.native
  def isTypeAliasDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeAliasDeclaration */ Boolean = js.native
  
  /** @deprecated Use `isTypeAssertionExpression` instead. */
  def isTypeAssertion(node: Node): /* is .typescript-nn5FuAjk.ts.TypeAssertion */ Boolean = js.native
  /** @deprecated Use `isTypeAssertionExpression` instead. */
  def isTypeAssertion(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeAssertion */ Boolean = js.native
  
  def isTypeAssertionExpression(node: Node): /* is .typescript-nn5FuAjk.ts.TypeAssertion */ Boolean = js.native
  def isTypeAssertionExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeAssertion */ Boolean = js.native
  
  def isTypeElement(node: Node): /* is .typescript-nn5FuAjk.ts.TypeElement */ Boolean = js.native
  def isTypeElement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeElement */ Boolean = js.native
  
  def isTypeLiteralNode(node: Node): /* is .typescript-nn5FuAjk.ts.TypeLiteralNode */ Boolean = js.native
  def isTypeLiteralNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeLiteralNode */ Boolean = js.native
  
  /**
    * Node test that determines whether a node is a valid type node.
    * This differs from the `isPartOfTypeNode` function which determines whether a node is *part*
    * of a TypeNode.
    */
  def isTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.TypeNode */ Boolean = js.native
  /**
    * Node test that determines whether a node is a valid type node.
    * This differs from the `isPartOfTypeNode` function which determines whether a node is *part*
    * of a TypeNode.
    */
  def isTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeNode */ Boolean = js.native
  
  def isTypeOfExpression(node: Node): /* is .typescript-nn5FuAjk.ts.TypeOfExpression */ Boolean = js.native
  def isTypeOfExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeOfExpression */ Boolean = js.native
  
  def isTypeOnlyImportOrExportDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.TypeOnlyAliasDeclaration */ Boolean = js.native
  def isTypeOnlyImportOrExportDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeOnlyAliasDeclaration */ Boolean = js.native
  
  def isTypeOperatorNode(node: Node): /* is .typescript-nn5FuAjk.ts.TypeOperatorNode */ Boolean = js.native
  def isTypeOperatorNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeOperatorNode */ Boolean = js.native
  
  def isTypeParameterDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.TypeParameterDeclaration */ Boolean = js.native
  def isTypeParameterDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeParameterDeclaration */ Boolean = js.native
  
  def isTypePredicateNode(node: Node): /* is .typescript-nn5FuAjk.ts.TypePredicateNode */ Boolean = js.native
  def isTypePredicateNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypePredicateNode */ Boolean = js.native
  
  def isTypeQueryNode(node: Node): /* is .typescript-nn5FuAjk.ts.TypeQueryNode */ Boolean = js.native
  def isTypeQueryNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeQueryNode */ Boolean = js.native
  
  def isTypeReferenceNode(node: Node): /* is .typescript-nn5FuAjk.ts.TypeReferenceNode */ Boolean = js.native
  def isTypeReferenceNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.TypeReferenceNode */ Boolean = js.native
  
  def isUnionTypeNode(node: Node): /* is .typescript-nn5FuAjk.ts.UnionTypeNode */ Boolean = js.native
  def isUnionTypeNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.UnionTypeNode */ Boolean = js.native
  
  def isUnparsedNode(node: Node): /* is .typescript-nn5FuAjk.ts.UnparsedNode */ Boolean = js.native
  def isUnparsedNode(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.UnparsedNode */ Boolean = js.native
  
  def isUnparsedPrepend(node: Node): /* is .typescript-nn5FuAjk.ts.UnparsedPrepend */ Boolean = js.native
  def isUnparsedPrepend(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.UnparsedPrepend */ Boolean = js.native
  
  def isUnparsedSource(node: Node): /* is .typescript-nn5FuAjk.ts.UnparsedSource */ Boolean = js.native
  def isUnparsedSource(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.UnparsedSource */ Boolean = js.native
  
  def isUnparsedTextLike(node: Node): /* is .typescript-nn5FuAjk.ts.UnparsedTextLike */ Boolean = js.native
  def isUnparsedTextLike(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.UnparsedTextLike */ Boolean = js.native
  
  def isVariableDeclaration(node: Node): /* is .typescript-nn5FuAjk.ts.VariableDeclaration */ Boolean = js.native
  def isVariableDeclaration(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.VariableDeclaration */ Boolean = js.native
  
  def isVariableDeclarationList(node: Node): /* is .typescript-nn5FuAjk.ts.VariableDeclarationList */ Boolean = js.native
  def isVariableDeclarationList(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.VariableDeclarationList */ Boolean = js.native
  
  def isVariableStatement(node: Node): /* is .typescript-nn5FuAjk.ts.VariableStatement */ Boolean = js.native
  def isVariableStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.VariableStatement */ Boolean = js.native
  
  def isVoidExpression(node: Node): /* is .typescript-nn5FuAjk.ts.VoidExpression */ Boolean = js.native
  def isVoidExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.VoidExpression */ Boolean = js.native
  
  def isWhileStatement(node: Node): /* is .typescript-nn5FuAjk.ts.WhileStatement */ Boolean = js.native
  def isWhileStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.WhileStatement */ Boolean = js.native
  
  def isWhiteSpaceLike(ch: Double): Boolean = js.native
  
  /** Does not include line breaks. For that, see isWhiteSpaceLike. */
  def isWhiteSpaceSingleLine(ch: Double): Boolean = js.native
  
  def isWithStatement(node: Node): /* is .typescript-nn5FuAjk.ts.WithStatement */ Boolean = js.native
  def isWithStatement(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.WithStatement */ Boolean = js.native
  
  def isYieldExpression(node: Node): /* is .typescript-nn5FuAjk.ts.YieldExpression */ Boolean = js.native
  def isYieldExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): /* is .typescript-nn5FuAjk..typescript-nn5FuAjk/lib/tsserverlibrary.d.ts.YieldExpression */ Boolean = js.native
  
  /**
    * Moves matching emit helpers from a source node to a target node.
    */
  def moveEmitHelpers(source: Node, target: Node, predicate: js.Function1[/* helper */ EmitHelper, Boolean]): Unit = js.native
  /**
    * Moves matching emit helpers from a source node to a target node.
    */
  def moveEmitHelpers(
    source: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    target: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    predicate: js.Function1[/* helper */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitHelper, Boolean]
  ): Unit = js.native
  
  def moveSyntheticComments[T /* <: Node */](node: T, original: Node): T = js.native
  def moveSyntheticComments[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, original: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): T = js.native
  
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: ResolvedProjectReference
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    redirectedReference: ResolvedProjectReference
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def nodeModuleNameResolver(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  
  def parseCommandLine(commandLine: Array[String]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine = js.native
  def parseCommandLine(commandLine: Array[String], readFile: js.Function1[/* path */ String, js.UndefOr[String]]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine = js.native
  @JSName("parseCommandLine")
  def parseCommandLine_ParsedCommandLine(commandLine: Array[String]): ParsedCommandLine = js.native
  @JSName("parseCommandLine")
  def parseCommandLine_ParsedCommandLine(commandLine: Array[String], readFile: js.Function1[/* path */ String, js.UndefOr[String]]): ParsedCommandLine = js.native
  
  def parseConfigFileTextToJson(fileName: String, jsonText: String): ConfigError = js.native
  @JSName("parseConfigFileTextToJson")
  def parseConfigFileTextToJson_Config(fileName: String, jsonText: String): Config = js.native
  
  def parseIsolatedEntityName(text: String, languageVersion: ScriptTarget): js.UndefOr[EntityName] = js.native
  def parseIsolatedEntityName(text: String, languageVersion: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ScriptTarget): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName] = js.native
  
  def parseJsonConfigFileContent(
    json: Any,
    host: ParseConfigHost,
    basePath: String,
    existingOptions: js.UndefOr[CompilerOptions],
    configFileName: js.UndefOr[String],
    resolutionStack: js.UndefOr[Array[Path]],
    extraFileExtensions: js.UndefOr[Array[FileExtensionInfo]],
    extendedConfigCache: js.UndefOr[Map[ExtendedConfigCacheEntry]],
    existingWatchOptions: js.UndefOr[WatchOptions]
  ): ParsedCommandLine = js.native
  def parseJsonConfigFileContent(
    json: Any,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigHost,
    basePath: String,
    existingOptions: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions],
    configFileName: js.UndefOr[String],
    resolutionStack: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Path]],
    extraFileExtensions: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]],
    extendedConfigCache: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry]
    ],
    existingWatchOptions: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine = js.native
  
  def parseJsonSourceFileConfigFileContent(
    sourceFile: TsConfigSourceFile,
    host: ParseConfigHost,
    basePath: String,
    existingOptions: js.UndefOr[CompilerOptions],
    configFileName: js.UndefOr[String],
    resolutionStack: js.UndefOr[Array[Path]],
    extraFileExtensions: js.UndefOr[Array[FileExtensionInfo]],
    extendedConfigCache: js.UndefOr[Map[ExtendedConfigCacheEntry]],
    existingWatchOptions: js.UndefOr[WatchOptions]
  ): ParsedCommandLine = js.native
  def parseJsonSourceFileConfigFileContent(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TsConfigSourceFile,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParseConfigHost,
    basePath: String,
    existingOptions: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions],
    configFileName: js.UndefOr[String],
    resolutionStack: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Path]],
    extraFileExtensions: js.UndefOr[Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileExtensionInfo]],
    extendedConfigCache: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Map[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExtendedConfigCacheEntry]
    ],
    existingWatchOptions: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WatchOptions]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParsedCommandLine = js.native
  
  def parseJsonText(fileName: String, sourceText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsonSourceFile = js.native
  @JSName("parseJsonText")
  def parseJsonText_JsonSourceFile(fileName: String, sourceText: String): JsonSourceFile = js.native
  
  def preProcessFile(sourceText: String): PreProcessedFileInfo = js.native
  def preProcessFile(sourceText: String, readImportFiles: Boolean): PreProcessedFileInfo = js.native
  def preProcessFile(sourceText: String, readImportFiles: Boolean, detectJavaScriptImports: Boolean): PreProcessedFileInfo = js.native
  def preProcessFile(sourceText: String, readImportFiles: Unit, detectJavaScriptImports: Boolean): PreProcessedFileInfo = js.native
  @JSName("preProcessFile")
  def preProcessFile_PreProcessedFileInfo(sourceText: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PreProcessedFileInfo = js.native
  @JSName("preProcessFile")
  def preProcessFile_PreProcessedFileInfo(sourceText: String, readImportFiles: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PreProcessedFileInfo = js.native
  @JSName("preProcessFile")
  def preProcessFile_PreProcessedFileInfo(sourceText: String, readImportFiles: Boolean, detectJavaScriptImports: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PreProcessedFileInfo = js.native
  @JSName("preProcessFile")
  def preProcessFile_PreProcessedFileInfo(sourceText: String, readImportFiles: Unit, detectJavaScriptImports: Boolean): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PreProcessedFileInfo = js.native
  
  def readBuilderProgram(compilerOptions: CompilerOptions, host: ReadBuildProgramHost): js.UndefOr[EmitAndSemanticDiagnosticsBuilderProgram] = js.native
  def readBuilderProgram(
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReadBuildProgramHost
  ): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitAndSemanticDiagnosticsBuilderProgram
  ] = js.native
  
  def readConfigFile(fileName: String, readFile: js.Function1[/* path */ String, js.UndefOr[String]]): ConfigError = js.native
  @JSName("readConfigFile")
  def readConfigFile_Config(fileName: String, readFile: js.Function1[/* path */ String, js.UndefOr[String]]): Config = js.native
  
  def readJsonConfigFile(fileName: String, readFile: js.Function1[/* path */ String, js.UndefOr[String]]): TsConfigSourceFile = js.native
  @JSName("readJsonConfigFile")
  def readJsonConfigFile_TsConfigSourceFile(fileName: String, readFile: js.Function1[/* path */ String, js.UndefOr[String]]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TsConfigSourceFile = js.native
  
  def reduceEachLeadingCommentRange[T, U](
    text: String,
    pos: Double,
    cb: js.Function6[
      /* pos */ Double, 
      /* end */ Double, 
      (/* kind */ CommentKind) | (/* kind */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommentKind), 
      /* hasTrailingNewLine */ Boolean, 
      /* state */ T, 
      /* memo */ U, 
      U
    ],
    state: T,
    initial: U
  ): js.UndefOr[U] = js.native
  
  def reduceEachTrailingCommentRange[T, U](
    text: String,
    pos: Double,
    cb: js.Function6[
      /* pos */ Double, 
      /* end */ Double, 
      (/* kind */ CommentKind) | (/* kind */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommentKind), 
      /* hasTrailingNewLine */ Boolean, 
      /* state */ T, 
      /* memo */ U, 
      U
    ],
    state: T,
    initial: U
  ): js.UndefOr[U] = js.native
  
  /**
    * Removes an EmitHelper from a node.
    */
  def removeEmitHelper(node: Node, helper: EmitHelper): Boolean = js.native
  /**
    * Removes an EmitHelper from a node.
    */
  def removeEmitHelper(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node,
    helper: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitHelper
  ): Boolean = js.native
  
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: Unit,
    resolutionMode: CommonJS
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: Unit,
    resolutionMode: ESNext
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: ResolvedProjectReference
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: ResolvedProjectReference,
    resolutionMode: CommonJS
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: Unit,
    redirectedReference: ResolvedProjectReference,
    resolutionMode: ESNext
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    redirectedReference: Unit,
    resolutionMode: CommonJS
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    redirectedReference: Unit,
    resolutionMode: ESNext
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    redirectedReference: ResolvedProjectReference
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    redirectedReference: ResolvedProjectReference,
    resolutionMode: CommonJS
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    redirectedReference: ResolvedProjectReference,
    resolutionMode: ESNext
  ): ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: Unit,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: Unit,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: Unit,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache,
    redirectedReference: Unit,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache,
    redirectedReference: Unit,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  def resolveModuleName(
    moduleName: String,
    containingFile: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    cache: ModuleResolutionCache,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    resolutionMode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations = js.native
  
  def resolveModuleNameFromCache(
    moduleName: String,
    containingFile: String,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache
  ): js.UndefOr[ResolvedModuleWithFailedLookupLocations] = js.native
  def resolveModuleNameFromCache(
    moduleName: String,
    containingFile: String,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    mode: CommonJS
  ): js.UndefOr[ResolvedModuleWithFailedLookupLocations] = js.native
  def resolveModuleNameFromCache(
    moduleName: String,
    containingFile: String,
    cache: typings.typescriptNn5FuAjk.ts.ModuleResolutionCache,
    mode: ESNext
  ): js.UndefOr[ResolvedModuleWithFailedLookupLocations] = js.native
  def resolveModuleNameFromCache(moduleName: String, containingFile: String, cache: ModuleResolutionCache): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations
  ] = js.native
  def resolveModuleNameFromCache(
    moduleName: String,
    containingFile: String,
    cache: ModuleResolutionCache,
    mode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
  ): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations
  ] = js.native
  def resolveModuleNameFromCache(
    moduleName: String,
    containingFile: String,
    cache: ModuleResolutionCache,
    mode: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext
  ): js.UndefOr[
    typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedModuleWithFailedLookupLocations
  ] = js.native
  
  def resolveProjectReferencePath(host: ResolveProjectReferencePathHost, ref: typings.typescriptNn5FuAjk.ts.ProjectReference): ResolvedConfigFileName = js.native
  def resolveProjectReferencePath(
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolveProjectReferencePathHost,
    ref: ProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedConfigFileName = js.native
  def resolveProjectReferencePath(ref: typings.typescriptNn5FuAjk.ts.ProjectReference): ResolvedConfigFileName = js.native
  def resolveProjectReferencePath(ref: ProjectReference): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedConfigFileName = js.native
  
  def resolveTripleslashReference(moduleName: String, containingFile: String): String = js.native
  
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: Unit,
    cache: Unit,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: Unit,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: Unit,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference,
    cache: Unit,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: Unit,
    cache: Unit,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: Unit,
    cache: TypeReferenceDirectiveResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: Unit,
    cache: TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    cache: Unit,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    cache: TypeReferenceDirectiveResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: String,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    cache: TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: Unit,
    cache: Unit,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: Unit,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: Unit,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference,
    cache: Unit,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference: ResolvedProjectReference,
    cache: typings.typescriptNn5FuAjk.ts.TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[ESNext | CommonJS]
  ): ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: Unit,
    cache: Unit,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: Unit,
    cache: TypeReferenceDirectiveResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: Unit,
    cache: TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    cache: Unit,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    cache: TypeReferenceDirectiveResolutionCache
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  def resolveTypeReferenceDirective(
    typeReferenceDirectiveName: String,
    containingFile: Unit,
    options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    host: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleResolutionHost,
    redirectedReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedProjectReference,
    cache: TypeReferenceDirectiveResolutionCache,
    resolutionMode: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.ESNext | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleKind.CommonJS
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ResolvedTypeReferenceDirectiveWithFailedLookupLocations = js.native
  
  val server: Typeofserver = js.native
  
  /** The version of the language service API */
  val servicesVersion: /* "0.8" */ String = js.native
  
  /**
    * Sets a custom text range to use when emitting comments.
    */
  def setCommentRange[T /* <: Node */](node: T, range: TextRange): T = js.native
  /**
    * Sets a custom text range to use when emitting comments.
    */
  def setCommentRange[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, range: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextRange): T = js.native
  
  /**
    * Sets the constant value to emit for an expression.
    */
  def setConstantValue(node: AccessExpression, value: String): AccessExpression = js.native
  def setConstantValue(node: AccessExpression, value: Double): AccessExpression = js.native
  /**
    * Sets the constant value to emit for an expression.
    */
  def setConstantValue(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AccessExpression, value: String): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AccessExpression = js.native
  def setConstantValue(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AccessExpression, value: Double): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AccessExpression = js.native
  
  /**
    * Sets flags that control emit behavior of a node.
    */
  def setEmitFlags[T /* <: Node */](node: T, emitFlags: EmitFlags): T = js.native
  /**
    * Sets flags that control emit behavior of a node.
    */
  def setEmitFlags[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, emitFlags: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EmitFlags): T = js.native
  
  def setOriginalNode[T /* <: Node */](node: T): T = js.native
  def setOriginalNode[T /* <: Node */](node: T, original: Node): T = js.native
  def setOriginalNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, original: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): T = js.native
  @JSName("setOriginalNode")
  def setOriginalNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  
  /**
    * Sets a custom text range to use when emitting source maps.
    */
  def setSourceMapRange[T /* <: Node */](node: T): T = js.native
  def setSourceMapRange[T /* <: Node */](node: T, range: SourceMapRange): T = js.native
  def setSourceMapRange[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, range: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceMapRange): T = js.native
  /**
    * Sets a custom text range to use when emitting source maps.
    */
  @JSName("setSourceMapRange")
  def setSourceMapRange_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  
  def setSyntheticLeadingComments[T /* <: Node */](node: T): T = js.native
  def setSyntheticLeadingComments[T /* <: Node */](node: T, comments: Array[SynthesizedComment]): T = js.native
  @JSName("setSyntheticLeadingComments")
  def setSyntheticLeadingComments_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  @JSName("setSyntheticLeadingComments")
  def setSyntheticLeadingComments_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, comments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SynthesizedComment]): T = js.native
  
  def setSyntheticTrailingComments[T /* <: Node */](node: T): T = js.native
  def setSyntheticTrailingComments[T /* <: Node */](node: T, comments: Array[SynthesizedComment]): T = js.native
  @JSName("setSyntheticTrailingComments")
  def setSyntheticTrailingComments_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  @JSName("setSyntheticTrailingComments")
  def setSyntheticTrailingComments_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, comments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SynthesizedComment]): T = js.native
  
  def setTextRange[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextRange */](range: T): T = js.native
  def setTextRange[T /* <: TextRange */](range: T, location: TextRange): T = js.native
  def setTextRange[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextRange */](range: T, location: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextRange): T = js.native
  @JSName("setTextRange")
  def setTextRange_T_TextRange[T /* <: TextRange */](range: T): T = js.native
  
  /**
    * Sets the TextRange to use for source maps for a token of a node.
    */
  def setTokenSourceMapRange[T /* <: Node */](node: T, token: SyntaxKind): T = js.native
  def setTokenSourceMapRange[T /* <: Node */](node: T, token: SyntaxKind, range: SourceMapRange): T = js.native
  /**
    * Sets the TextRange to use for source maps for a token of a node.
    */
  def setTokenSourceMapRange[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, token: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind): T = js.native
  def setTokenSourceMapRange[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    token: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind,
    range: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceMapRange
  ): T = js.native
  
  def skipPartiallyEmittedExpressions(node: Expression): Expression = js.native
  def skipPartiallyEmittedExpressions(node: Node): Node = js.native
  def skipPartiallyEmittedExpressions(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression = js.native
  def skipPartiallyEmittedExpressions(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node = js.native
  
  def sortAndDeduplicateDiagnostics[T /* <: Diagnostic */](diagnostics: Array[T]): SortedReadonlyArray[T] = js.native
  @JSName("sortAndDeduplicateDiagnostics")
  def sortAndDeduplicateDiagnostics_T_Diagnostic_SortedReadonlyArray[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic */](diagnostics: Array[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SortedReadonlyArray[T] = js.native
  
  def symbolName(symbol: Symbol): String = js.native
  def symbolName(symbol: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Symbol): String = js.native
  
  var sys: System & typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.System = js.native
  
  def textChangeRangeIsUnchanged(range: typings.typescriptNn5FuAjk.ts.TextChangeRange): Boolean = js.native
  def textChangeRangeIsUnchanged(range: TextChangeRange): Boolean = js.native
  
  def textChangeRangeNewSpan(range: typings.typescriptNn5FuAjk.ts.TextChangeRange): TextSpan = js.native
  def textChangeRangeNewSpan(range: TextChangeRange): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan = js.native
  
  def textSpanContainsPosition(span: TextSpan, position: Double): Boolean = js.native
  def textSpanContainsPosition(span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan, position: Double): Boolean = js.native
  
  def textSpanContainsTextSpan(span: TextSpan, other: TextSpan): Boolean = js.native
  def textSpanContainsTextSpan(
    span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan,
    other: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan
  ): Boolean = js.native
  
  def textSpanEnd(span: TextSpan): Double = js.native
  def textSpanEnd(span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan): Double = js.native
  
  def textSpanIntersection(span1: TextSpan, span2: TextSpan): js.UndefOr[TextSpan] = js.native
  def textSpanIntersection(
    span1: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan,
    span2: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan] = js.native
  
  def textSpanIntersectsWith(span: TextSpan, start: Double, length: Double): Boolean = js.native
  def textSpanIntersectsWith(span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan, start: Double, length: Double): Boolean = js.native
  
  def textSpanIntersectsWithPosition(span: TextSpan, position: Double): Boolean = js.native
  def textSpanIntersectsWithPosition(span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan, position: Double): Boolean = js.native
  
  def textSpanIntersectsWithTextSpan(span: TextSpan, other: TextSpan): Boolean = js.native
  def textSpanIntersectsWithTextSpan(
    span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan,
    other: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan
  ): Boolean = js.native
  
  def textSpanIsEmpty(span: TextSpan): Boolean = js.native
  def textSpanIsEmpty(span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan): Boolean = js.native
  
  def textSpanOverlap(span1: TextSpan, span2: TextSpan): js.UndefOr[TextSpan] = js.native
  def textSpanOverlap(
    span1: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan,
    span2: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan] = js.native
  
  def textSpanOverlapsWith(span: TextSpan, other: TextSpan): Boolean = js.native
  def textSpanOverlapsWith(
    span: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan,
    other: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TextSpan
  ): Boolean = js.native
  
  def toEditorSettings(options: EditorOptions): EditorSettings = js.native
  def toEditorSettings(options: EditorSettings): EditorSettings = js.native
  def toEditorSettings(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EditorOptions): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EditorSettings = js.native
  def toEditorSettings(options: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EditorSettings): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EditorSettings = js.native
  
  def tokenToString(t: SyntaxKind): js.UndefOr[String] = js.native
  def tokenToString(t: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SyntaxKind): js.UndefOr[String] = js.native
  
  /**
    * Transform one or more nodes using the supplied transformers.
    * @param source A single `Node` or an array of `Node` objects.
    * @param transformers An array of `TransformerFactory` callbacks used to process the transformation.
    * @param compilerOptions Optional compiler options.
    */
  def transform[T /* <: Node */](source: T, transformers: Array[TransformerFactory[T]]): TransformationResult[T] = js.native
  def transform[T /* <: Node */](source: T, transformers: Array[TransformerFactory[T]], compilerOptions: CompilerOptions): TransformationResult[T] = js.native
  def transform[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    source: T,
    transformers: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformerFactory[T]],
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationResult[T] = js.native
  def transform[T /* <: Node */](source: Array[T], transformers: Array[TransformerFactory[T]]): TransformationResult[T] = js.native
  def transform[T /* <: Node */](source: Array[T], transformers: Array[TransformerFactory[T]], compilerOptions: CompilerOptions): TransformationResult[T] = js.native
  def transform[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    source: Array[T],
    transformers: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformerFactory[T]],
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationResult[T] = js.native
  /**
    * Transform one or more nodes using the supplied transformers.
    * @param source A single `Node` or an array of `Node` objects.
    * @param transformers An array of `TransformerFactory` callbacks used to process the transformation.
    * @param compilerOptions Optional compiler options.
    */
  @JSName("transform")
  def transform_T_Node_TransformationResult[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    source: T,
    transformers: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformerFactory[T]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationResult[T] = js.native
  @JSName("transform")
  def transform_T_Node_TransformationResult[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    source: Array[T],
    transformers: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformerFactory[T]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationResult[T] = js.native
  
  def transpile(input: String): String = js.native
  def transpile(input: String, compilerOptions: Unit, fileName: String): String = js.native
  def transpile(input: String, compilerOptions: Unit, fileName: String, diagnostics: Unit, moduleName: String): String = js.native
  def transpile(
    input: String,
    compilerOptions: Unit,
    fileName: String,
    diagnostics: Array[Diagnostic | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: Unit,
    fileName: String,
    diagnostics: Array[Diagnostic | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic],
    moduleName: String
  ): String = js.native
  def transpile(input: String, compilerOptions: Unit, fileName: Unit, diagnostics: Unit, moduleName: String): String = js.native
  def transpile(
    input: String,
    compilerOptions: Unit,
    fileName: Unit,
    diagnostics: Array[Diagnostic | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: Unit,
    fileName: Unit,
    diagnostics: Array[Diagnostic | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic],
    moduleName: String
  ): String = js.native
  def transpile(input: String, compilerOptions: CompilerOptions): String = js.native
  def transpile(input: String, compilerOptions: CompilerOptions, fileName: String): String = js.native
  def transpile(
    input: String,
    compilerOptions: CompilerOptions,
    fileName: String,
    diagnostics: Unit,
    moduleName: String
  ): String = js.native
  def transpile(input: String, compilerOptions: CompilerOptions, fileName: String, diagnostics: Array[Diagnostic]): String = js.native
  def transpile(
    input: String,
    compilerOptions: CompilerOptions,
    fileName: String,
    diagnostics: Array[Diagnostic],
    moduleName: String
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: CompilerOptions,
    fileName: Unit,
    diagnostics: Unit,
    moduleName: String
  ): String = js.native
  def transpile(input: String, compilerOptions: CompilerOptions, fileName: Unit, diagnostics: Array[Diagnostic]): String = js.native
  def transpile(
    input: String,
    compilerOptions: CompilerOptions,
    fileName: Unit,
    diagnostics: Array[Diagnostic],
    moduleName: String
  ): String = js.native
  def transpile(input: String, compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: String
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: String,
    diagnostics: Unit,
    moduleName: String
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: String,
    diagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: String,
    diagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic],
    moduleName: String
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: Unit,
    diagnostics: Unit,
    moduleName: String
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: Unit,
    diagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): String = js.native
  def transpile(
    input: String,
    compilerOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CompilerOptions,
    fileName: Unit,
    diagnostics: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic],
    moduleName: String
  ): String = js.native
  
  def transpileModule(input: String, transpileOptions: TranspileOptions): TranspileOutput = js.native
  def transpileModule(input: String, transpileOptions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TranspileOptions): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TranspileOutput = js.native
  
  var unchangedTextChangeRange: typings.typescriptNn5FuAjk.ts.TextChangeRange & TextChangeRange = js.native
  
  /**
    * Remove extra underscore from escaped identifier text content.
    *
    * @param identifier The escaped identifier text.
    * @returns The unescaped identifier text.
    */
  def unescapeLeadingUnderscores(
    identifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.String | typings.typescriptNn5FuAjk.ts.String
  ): String = js.native
  
  /** @deprecated Use `factory.updateArrayBindingPattern` or the factory supplied by your transformation context instead. */
  def updateArrayBindingPattern(node: ArrayBindingPattern, elements: Array[ArrayBindingElement]): ArrayBindingPattern = js.native
  /** @deprecated Use `factory.updateArrayBindingPattern` or the factory supplied by your transformation context instead. */
  def updateArrayBindingPattern(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayBindingPattern,
    elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayBindingElement]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayBindingPattern = js.native
  
  /** @deprecated Use `factory.updateArrayLiteralExpression` or the factory supplied by your transformation context instead. */
  def updateArrayLiteral(node: ArrayLiteralExpression, elements: Array[Expression]): ArrayLiteralExpression = js.native
  /** @deprecated Use `factory.updateArrayLiteralExpression` or the factory supplied by your transformation context instead. */
  def updateArrayLiteral(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayLiteralExpression,
    elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayLiteralExpression = js.native
  
  /** @deprecated Use `factory.updateArrayTypeNode` or the factory supplied by your transformation context instead. */
  def updateArrayTypeNode(node: ArrayTypeNode, elementType: TypeNode): ArrayTypeNode = js.native
  /** @deprecated Use `factory.updateArrayTypeNode` or the factory supplied by your transformation context instead. */
  def updateArrayTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayTypeNode,
    elementType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ArrayTypeNode = js.native
  
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  /** @deprecated Use `factory.updateArrowFunction` or the factory supplied by your transformation context instead. */
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  /** @deprecated Use `factory.updateArrowFunction` or the factory supplied by your transformation context instead. */
  def updateArrowFunction(
    node: typings.typescriptNn5FuAjk.ts.ArrowFunction,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: typings.typescriptNn5FuAjk.ts.ConciseBody
  ): typings.typescriptNn5FuAjk.ts.ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: ConciseBody
  ): ArrowFunction = js.native
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  /** @deprecated Use `factory.updateArrowFunction` or the factory supplied by your transformation context instead. */
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: ConciseBody
  ): ArrowFunction = js.native
  /** @deprecated Use `factory.updateArrowFunction` or the factory supplied by your transformation context instead. */
  def updateArrowFunction(
    node: ArrowFunction,
    modifiers: Array[Modifier],
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    equalsGreaterThanToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EqualsGreaterThanToken,
    body: ConciseBody
  ): ArrowFunction = js.native
  
  /** @deprecated Use `factory.updateAsExpression` or the factory supplied by your transformation context instead. */
  def updateAsExpression(node: AsExpression, expression: Expression, `type`: TypeNode): AsExpression = js.native
  /** @deprecated Use `factory.updateAsExpression` or the factory supplied by your transformation context instead. */
  def updateAsExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsExpression = js.native
  
  /** @deprecated Use `factory.updateAwaitExpression` or the factory supplied by your transformation context instead. */
  def updateAwait(node: AwaitExpression, expression: Expression): AwaitExpression = js.native
  /** @deprecated Use `factory.updateAwaitExpression` or the factory supplied by your transformation context instead. */
  def updateAwait(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AwaitExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AwaitExpression = js.native
  
  /** @deprecated Use `factory.updateBinary` or the factory supplied by your transformation context instead. */
  def updateBinary(node: BinaryExpression, left: Expression, right: Expression): BinaryExpression = js.native
  def updateBinary(node: BinaryExpression, left: Expression, right: Expression, operator: BinaryOperator): BinaryExpression = js.native
  def updateBinary(node: BinaryExpression, left: Expression, right: Expression, operator: BinaryOperatorToken): BinaryExpression = js.native
  /** @deprecated Use `factory.updateBinary` or the factory supplied by your transformation context instead. */
  def updateBinary(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression,
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  def updateBinary(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression,
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryOperator
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  def updateBinary(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression,
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    operator: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryOperatorToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BinaryExpression = js.native
  
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: BindingName
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: BindingName,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: Unit,
    propertyName: PropertyName,
    name: BindingName
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: Unit,
    propertyName: PropertyName,
    name: BindingName,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: DotDotDotToken,
    propertyName: Unit,
    name: BindingName
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: DotDotDotToken,
    propertyName: Unit,
    name: BindingName,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  /** @deprecated Use `factory.updateBindingElement` or the factory supplied by your transformation context instead. */
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: DotDotDotToken,
    propertyName: PropertyName,
    name: BindingName
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: typings.typescriptNn5FuAjk.ts.BindingElement,
    dotDotDotToken: DotDotDotToken,
    propertyName: PropertyName,
    name: BindingName,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: Unit,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: Unit,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: Unit,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  /** @deprecated Use `factory.updateBindingElement` or the factory supplied by your transformation context instead. */
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): BindingElement = js.native
  def updateBindingElement(
    node: BindingElement,
    dotDotDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): BindingElement = js.native
  
  /** @deprecated Use `factory.updateBlock` or the factory supplied by your transformation context instead. */
  def updateBlock(node: Block, statements: Array[Statement]): Block = js.native
  /** @deprecated Use `factory.updateBlock` or the factory supplied by your transformation context instead. */
  def updateBlock(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block = js.native
  
  /** @deprecated Use `factory.updateBreakStatement` or the factory supplied by your transformation context instead. */
  def updateBreak(node: BreakStatement): BreakStatement = js.native
  def updateBreak(node: BreakStatement, label: Identifier): BreakStatement = js.native
  /** @deprecated Use `factory.updateBreakStatement` or the factory supplied by your transformation context instead. */
  def updateBreak(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement = js.native
  def updateBreak(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement,
    label: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BreakStatement = js.native
  
  /** @deprecated Use `factory.updateBundle` or the factory supplied by your transformation context instead. */
  def updateBundle(node: Bundle, sourceFiles: Array[SourceFile]): Bundle = js.native
  def updateBundle(node: Bundle, sourceFiles: Array[SourceFile], prepends: Array[UnparsedSource | InputFiles]): Bundle = js.native
  /** @deprecated Use `factory.updateBundle` or the factory supplied by your transformation context instead. */
  def updateBundle(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Bundle,
    sourceFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Bundle = js.native
  def updateBundle(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Bundle,
    sourceFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile],
    prepends: Array[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.UnparsedSource | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InputFiles
    ]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Bundle = js.native
  
  def updateCall(
    node: CallExpression,
    expression: Expression,
    typeArguments: Unit,
    argumentsArray: Array[Expression]
  ): CallExpression = js.native
  /** @deprecated Use `factory.updateCallExpression` or the factory supplied by your transformation context instead. */
  def updateCall(
    node: CallExpression,
    expression: Expression,
    typeArguments: Array[TypeNode],
    argumentsArray: Array[Expression]
  ): CallExpression = js.native
  def updateCall(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  /** @deprecated Use `factory.updateCallExpression` or the factory supplied by your transformation context instead. */
  def updateCall(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallExpression = js.native
  
  def updateCallChain(
    node: CallChain,
    expression: Expression,
    questionDotToken: Unit,
    typeArguments: Unit,
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  def updateCallChain(
    node: CallChain,
    expression: Expression,
    questionDotToken: Unit,
    typeArguments: Array[TypeNode],
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  def updateCallChain(
    node: CallChain,
    expression: Expression,
    questionDotToken: QuestionDotToken,
    typeArguments: Unit,
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  /** @deprecated Use `factory.updateCallChain` or the factory supplied by your transformation context instead. */
  def updateCallChain(
    node: CallChain,
    expression: Expression,
    questionDotToken: QuestionDotToken,
    typeArguments: Array[TypeNode],
    argumentsArray: Array[Expression]
  ): CallChain = js.native
  def updateCallChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def updateCallChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  def updateCallChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  /** @deprecated Use `factory.updateCallChain` or the factory supplied by your transformation context instead. */
  def updateCallChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CallChain = js.native
  
  def updateCallSignature(
    node: typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  def updateCallSignature(
    node: typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  /** @deprecated Use `factory.updateCallSignature` or the factory supplied by your transformation context instead. */
  def updateCallSignature(
    node: typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  def updateCallSignature(
    node: typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.CallSignatureDeclaration = js.native
  def updateCallSignature(
    node: CallSignatureDeclaration,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]
  ): CallSignatureDeclaration = js.native
  def updateCallSignature(
    node: CallSignatureDeclaration,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): CallSignatureDeclaration = js.native
  /** @deprecated Use `factory.updateCallSignature` or the factory supplied by your transformation context instead. */
  def updateCallSignature(
    node: CallSignatureDeclaration,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]
  ): CallSignatureDeclaration = js.native
  def updateCallSignature(
    node: CallSignatureDeclaration,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): CallSignatureDeclaration = js.native
  
  /** @deprecated Use `factory.updateCaseBlock` or the factory supplied by your transformation context instead. */
  def updateCaseBlock(node: CaseBlock, clauses: Array[CaseOrDefaultClause]): CaseBlock = js.native
  /** @deprecated Use `factory.updateCaseBlock` or the factory supplied by your transformation context instead. */
  def updateCaseBlock(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseBlock,
    clauses: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseOrDefaultClause]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseBlock = js.native
  
  /** @deprecated Use `factory.updateCaseClause` or the factory supplied by your transformation context instead. */
  def updateCaseClause(node: CaseClause, expression: Expression, statements: Array[Statement]): CaseClause = js.native
  /** @deprecated Use `factory.updateCaseClause` or the factory supplied by your transformation context instead. */
  def updateCaseClause(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseClause,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseClause = js.native
  
  def updateCatchClause(node: CatchClause, variableDeclaration: Unit, block: Block): CatchClause = js.native
  /** @deprecated Use `factory.updateCatchClause` or the factory supplied by your transformation context instead. */
  def updateCatchClause(node: CatchClause, variableDeclaration: VariableDeclaration, block: Block): CatchClause = js.native
  def updateCatchClause(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause,
    variableDeclaration: Unit,
    block: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause = js.native
  /** @deprecated Use `factory.updateCatchClause` or the factory supplied by your transformation context instead. */
  def updateCatchClause(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause,
    variableDeclaration: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    block: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause = js.native
  
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  /** @deprecated Use `factory.updateClassDeclaration` or the factory supplied by your transformation context instead. */
  def updateClassDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ClassDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  /** @deprecated Use `factory.updateClassDeclaration` or the factory supplied by your transformation context instead. */
  def updateClassDeclaration(
    node: ClassDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassDeclaration = js.native
  
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  /** @deprecated Use `factory.updateClassExpression` or the factory supplied by your transformation context instead. */
  def updateClassExpression(
    node: typings.typescriptNn5FuAjk.ts.ClassExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.ClassElement]
  ): typings.typescriptNn5FuAjk.ts.ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[ClassElement]
  ): ClassExpression = js.native
  /** @deprecated Use `factory.updateClassExpression` or the factory supplied by your transformation context instead. */
  def updateClassExpression(
    node: ClassExpression,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[ClassElement]
  ): ClassExpression = js.native
  
  /** @deprecated Use `factory.updateCommaListExpression` or the factory supplied by your transformation context instead. */
  def updateCommaList(node: CommaListExpression, elements: Array[Expression]): CommaListExpression = js.native
  /** @deprecated Use `factory.updateCommaListExpression` or the factory supplied by your transformation context instead. */
  def updateCommaList(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommaListExpression,
    elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CommaListExpression = js.native
  
  /** @deprecated Use `factory.updateComputedPropertyName` or the factory supplied by your transformation context instead. */
  def updateComputedPropertyName(node: ComputedPropertyName, expression: Expression): ComputedPropertyName = js.native
  /** @deprecated Use `factory.updateComputedPropertyName` or the factory supplied by your transformation context instead. */
  def updateComputedPropertyName(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ComputedPropertyName,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ComputedPropertyName = js.native
  
  /** @deprecated Use `factory.updateConditionalExpression` or the factory supplied by your transformation context instead. */
  def updateConditional(
    node: ConditionalExpression,
    condition: Expression,
    questionToken: QuestionToken,
    whenTrue: Expression,
    colonToken: ColonToken,
    whenFalse: Expression
  ): ConditionalExpression = js.native
  /** @deprecated Use `factory.updateConditionalExpression` or the factory supplied by your transformation context instead. */
  def updateConditional(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalExpression,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    whenTrue: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    colonToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ColonToken,
    whenFalse: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalExpression = js.native
  
  /** @deprecated Use `factory.updateConditionalTypeNode` or the factory supplied by your transformation context instead. */
  def updateConditionalTypeNode(
    node: ConditionalTypeNode,
    checkType: TypeNode,
    extendsType: TypeNode,
    trueType: TypeNode,
    falseType: TypeNode
  ): ConditionalTypeNode = js.native
  /** @deprecated Use `factory.updateConditionalTypeNode` or the factory supplied by your transformation context instead. */
  def updateConditionalTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalTypeNode,
    checkType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    extendsType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    trueType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    falseType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConditionalTypeNode = js.native
  
  def updateConstructSignature(
    node: ConstructSignatureDeclaration,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): ConstructSignatureDeclaration = js.native
  def updateConstructSignature(
    node: ConstructSignatureDeclaration,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructSignatureDeclaration = js.native
  /** @deprecated Use `factory.updateConstructSignature` or the factory supplied by your transformation context instead. */
  def updateConstructSignature(
    node: ConstructSignatureDeclaration,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): ConstructSignatureDeclaration = js.native
  def updateConstructSignature(
    node: ConstructSignatureDeclaration,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructSignatureDeclaration = js.native
  def updateConstructSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  def updateConstructSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  /** @deprecated Use `factory.updateConstructSignature` or the factory supplied by your transformation context instead. */
  def updateConstructSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  def updateConstructSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructSignatureDeclaration = js.native
  
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  /** @deprecated Use `factory.updateConstructorDeclaration` or the factory supplied by your transformation context instead. */
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: typings.typescriptNn5FuAjk.ts.ConstructorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[ParameterDeclaration]
  ): ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration]
  ): ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    parameters: Array[ParameterDeclaration]
  ): ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  /** @deprecated Use `factory.updateConstructorDeclaration` or the factory supplied by your transformation context instead. */
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration]
  ): ConstructorDeclaration = js.native
  def updateConstructor(
    node: ConstructorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): ConstructorDeclaration = js.native
  
  def updateConstructorTypeNode(
    node: ConstructorTypeNode,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructorTypeNode = js.native
  /** @deprecated Use `factory.updateConstructorTypeNode` or the factory supplied by your transformation context instead. */
  def updateConstructorTypeNode(
    node: ConstructorTypeNode,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): ConstructorTypeNode = js.native
  def updateConstructorTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorTypeNode,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorTypeNode = js.native
  /** @deprecated Use `factory.updateConstructorTypeNode` or the factory supplied by your transformation context instead. */
  def updateConstructorTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorTypeNode,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ConstructorTypeNode = js.native
  
  /** @deprecated Use `factory.updateContinueStatement` or the factory supplied by your transformation context instead. */
  def updateContinue(node: ContinueStatement): ContinueStatement = js.native
  def updateContinue(node: ContinueStatement, label: Identifier): ContinueStatement = js.native
  /** @deprecated Use `factory.updateContinueStatement` or the factory supplied by your transformation context instead. */
  def updateContinue(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement = js.native
  def updateContinue(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement,
    label: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ContinueStatement = js.native
  
  /** @deprecated Use `factory.updateDecorator` or the factory supplied by your transformation context instead. */
  def updateDecorator(node: typings.typescriptNn5FuAjk.ts.Decorator, expression: Expression): typings.typescriptNn5FuAjk.ts.Decorator = js.native
  /** @deprecated Use `factory.updateDecorator` or the factory supplied by your transformation context instead. */
  def updateDecorator(node: Decorator, expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression): Decorator = js.native
  
  /** @deprecated Use `factory.updateDefaultClause` or the factory supplied by your transformation context instead. */
  def updateDefaultClause(node: typings.typescriptNn5FuAjk.ts.DefaultClause, statements: Array[Statement]): typings.typescriptNn5FuAjk.ts.DefaultClause = js.native
  /** @deprecated Use `factory.updateDefaultClause` or the factory supplied by your transformation context instead. */
  def updateDefaultClause(node: DefaultClause, statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): DefaultClause = js.native
  
  /** @deprecated Use `factory.updateDeleteExpression` or the factory supplied by your transformation context instead. */
  def updateDelete(node: DeleteExpression, expression: Expression): DeleteExpression = js.native
  /** @deprecated Use `factory.updateDeleteExpression` or the factory supplied by your transformation context instead. */
  def updateDelete(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DeleteExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DeleteExpression = js.native
  
  /** @deprecated Use `factory.updateDoStatement` or the factory supplied by your transformation context instead. */
  def updateDo(node: DoStatement, statement: Statement, expression: Expression): DoStatement = js.native
  /** @deprecated Use `factory.updateDoStatement` or the factory supplied by your transformation context instead. */
  def updateDo(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DoStatement,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DoStatement = js.native
  
  /** @deprecated Use `factory.updateElementAccessExpression` or the factory supplied by your transformation context instead. */
  def updateElementAccess(node: ElementAccessExpression, expression: Expression, argumentExpression: Expression): ElementAccessExpression = js.native
  /** @deprecated Use `factory.updateElementAccessExpression` or the factory supplied by your transformation context instead. */
  def updateElementAccess(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    argumentExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessExpression = js.native
  
  def updateElementAccessChain(
    node: ElementAccessChain,
    expression: Expression,
    questionDotToken: Unit,
    argumentExpression: Expression
  ): ElementAccessChain = js.native
  /** @deprecated Use `factory.updateElementAccessChain` or the factory supplied by your transformation context instead. */
  def updateElementAccessChain(
    node: ElementAccessChain,
    expression: Expression,
    questionDotToken: QuestionDotToken,
    argumentExpression: Expression
  ): ElementAccessChain = js.native
  def updateElementAccessChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    argumentExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain = js.native
  /** @deprecated Use `factory.updateElementAccessChain` or the factory supplied by your transformation context instead. */
  def updateElementAccessChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    argumentExpression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ElementAccessChain = js.native
  
  def updateEnumDeclaration(
    node: EnumDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def updateEnumDeclaration(
    node: EnumDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def updateEnumDeclaration(
    node: EnumDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  /** @deprecated Use `factory.updateEnumDeclaration` or the factory supplied by your transformation context instead. */
  def updateEnumDeclaration(
    node: EnumDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    members: Array[EnumMember]
  ): EnumDeclaration = js.native
  def updateEnumDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  def updateEnumDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  def updateEnumDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  /** @deprecated Use `factory.updateEnumDeclaration` or the factory supplied by your transformation context instead. */
  def updateEnumDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    members: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumDeclaration = js.native
  
  /** @deprecated Use `factory.updateEnumMember` or the factory supplied by your transformation context instead. */
  def updateEnumMember(node: EnumMember, name: PropertyName): EnumMember = js.native
  def updateEnumMember(node: EnumMember, name: PropertyName, initializer: Expression): EnumMember = js.native
  /** @deprecated Use `factory.updateEnumMember` or the factory supplied by your transformation context instead. */
  def updateEnumMember(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember = js.native
  def updateEnumMember(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EnumMember = js.native
  
  def updateExportAssignment(node: ExportAssignment, decorators: Unit, modifiers: Unit, expression: Expression): ExportAssignment = js.native
  def updateExportAssignment(
    node: ExportAssignment,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    expression: Expression
  ): ExportAssignment = js.native
  def updateExportAssignment(
    node: ExportAssignment,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    expression: Expression
  ): ExportAssignment = js.native
  /** @deprecated Use `factory.updateExportAssignment` or the factory supplied by your transformation context instead. */
  def updateExportAssignment(
    node: ExportAssignment,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    expression: Expression
  ): ExportAssignment = js.native
  def updateExportAssignment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment,
    decorators: Unit,
    modifiers: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def updateExportAssignment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment,
    decorators: Unit,
    modifiers: Array[Modifier],
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  def updateExportAssignment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment,
    decorators: Array[Decorator],
    modifiers: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  /** @deprecated Use `factory.updateExportAssignment` or the factory supplied by your transformation context instead. */
  def updateExportAssignment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportAssignment = js.native
  
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: Unit,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  /** @deprecated Use `factory.updateExportDeclaration` or the factory supplied by your transformation context instead. */
  def updateExportDeclaration(
    node: typings.typescriptNn5FuAjk.ts.ExportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    exportClause: NamedExportBindings,
    moduleSpecifier: Expression,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: Unit,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  /** @deprecated Use `factory.updateExportDeclaration` or the factory supplied by your transformation context instead. */
  def updateExportDeclaration(
    node: ExportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    exportClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedExportBindings,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    isTypeOnly: Boolean
  ): ExportDeclaration = js.native
  
  def updateExportSpecifier(node: ExportSpecifier, isTypeOnly: Boolean, propertyName: Unit, name: Identifier): ExportSpecifier = js.native
  /** @deprecated Use `factory.updateExportSpecifier` or the factory supplied by your transformation context instead. */
  def updateExportSpecifier(node: ExportSpecifier, isTypeOnly: Boolean, propertyName: Identifier, name: Identifier): ExportSpecifier = js.native
  def updateExportSpecifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier,
    isTypeOnly: Boolean,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  /** @deprecated Use `factory.updateExportSpecifier` or the factory supplied by your transformation context instead. */
  def updateExportSpecifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier,
    isTypeOnly: Boolean,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier = js.native
  
  /** @deprecated Use `factory.updateExpressionStatement` or the factory supplied by your transformation context instead. */
  def updateExpressionStatement(node: ExpressionStatement, expression: Expression): ExpressionStatement = js.native
  /** @deprecated Use `factory.updateExpressionStatement` or the factory supplied by your transformation context instead. */
  def updateExpressionStatement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionStatement = js.native
  
  def updateExpressionWithTypeArguments(node: ExpressionWithTypeArguments, typeArguments: Unit, expression: Expression): ExpressionWithTypeArguments = js.native
  /** @deprecated Use `factory.updateExpressionWithTypeArguments` or the factory supplied by your transformation context instead. */
  def updateExpressionWithTypeArguments(node: ExpressionWithTypeArguments, typeArguments: Array[TypeNode], expression: Expression): ExpressionWithTypeArguments = js.native
  def updateExpressionWithTypeArguments(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments,
    typeArguments: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments = js.native
  /** @deprecated Use `factory.updateExpressionWithTypeArguments` or the factory supplied by your transformation context instead. */
  def updateExpressionWithTypeArguments(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments = js.native
  
  /** @deprecated Use `factory.updateExternalModuleReference` or the factory supplied by your transformation context instead. */
  def updateExternalModuleReference(node: ExternalModuleReference, expression: Expression): ExternalModuleReference = js.native
  /** @deprecated Use `factory.updateExternalModuleReference` or the factory supplied by your transformation context instead. */
  def updateExternalModuleReference(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExternalModuleReference,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExternalModuleReference = js.native
  
  def updateFor(node: ForStatement, initializer: Unit, condition: Unit, incrementor: Unit, statement: Statement): ForStatement = js.native
  def updateFor(
    node: ForStatement,
    initializer: Unit,
    condition: Unit,
    incrementor: Expression,
    statement: Statement
  ): ForStatement = js.native
  def updateFor(
    node: ForStatement,
    initializer: Unit,
    condition: Expression,
    incrementor: Unit,
    statement: Statement
  ): ForStatement = js.native
  def updateFor(
    node: ForStatement,
    initializer: Unit,
    condition: Expression,
    incrementor: Expression,
    statement: Statement
  ): ForStatement = js.native
  def updateFor(
    node: ForStatement,
    initializer: ForInitializer,
    condition: Unit,
    incrementor: Unit,
    statement: Statement
  ): ForStatement = js.native
  def updateFor(
    node: ForStatement,
    initializer: ForInitializer,
    condition: Unit,
    incrementor: Expression,
    statement: Statement
  ): ForStatement = js.native
  def updateFor(
    node: ForStatement,
    initializer: ForInitializer,
    condition: Expression,
    incrementor: Unit,
    statement: Statement
  ): ForStatement = js.native
  /** @deprecated Use `factory.updateForStatement` or the factory supplied by your transformation context instead. */
  def updateFor(
    node: ForStatement,
    initializer: ForInitializer,
    condition: Expression,
    incrementor: Expression,
    statement: Statement
  ): ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: Unit,
    condition: Unit,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: Unit,
    condition: Unit,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: Unit,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: Unit,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: Unit,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: Unit,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: Unit,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  /** @deprecated Use `factory.updateForStatement` or the factory supplied by your transformation context instead. */
  def updateFor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    condition: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    incrementor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForStatement = js.native
  
  /** @deprecated Use `factory.updateForInStatement` or the factory supplied by your transformation context instead. */
  def updateForIn(node: ForInStatement, initializer: ForInitializer, expression: Expression, statement: Statement): ForInStatement = js.native
  /** @deprecated Use `factory.updateForInStatement` or the factory supplied by your transformation context instead. */
  def updateForIn(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInStatement,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInStatement = js.native
  
  def updateForOf(
    node: ForOfStatement,
    awaitModifier: Unit,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
  ): ForOfStatement = js.native
  /** @deprecated Use `factory.updateForOfStatement` or the factory supplied by your transformation context instead. */
  def updateForOf(
    node: ForOfStatement,
    awaitModifier: AwaitKeyword,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
  ): ForOfStatement = js.native
  def updateForOf(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForOfStatement,
    awaitModifier: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForOfStatement = js.native
  /** @deprecated Use `factory.updateForOfStatement` or the factory supplied by your transformation context instead. */
  def updateForOf(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForOfStatement,
    awaitModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AwaitKeyword,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForInitializer,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ForOfStatement = js.native
  
  /** @deprecated Use `factory.updateFunctionDeclaration` or the factory supplied by your transformation context instead. */
  def updateFunctionDeclaration(
    node: FunctionDeclaration,
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    asteriskToken: js.UndefOr[AsteriskToken],
    name: js.UndefOr[Identifier],
    typeParameters: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: js.UndefOr[TypeNode],
    body: js.UndefOr[Block]
  ): FunctionDeclaration = js.native
  /** @deprecated Use `factory.updateFunctionDeclaration` or the factory supplied by your transformation context instead. */
  def updateFunctionDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionDeclaration,
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    asteriskToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken],
    name: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier],
    typeParameters: js.UndefOr[Array[TypeParameterDeclaration]],
    parameters: Array[ParameterDeclaration],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    body: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionDeclaration = js.native
  
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Unit,
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Unit,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): FunctionExpression = js.native
  /** @deprecated Use `factory.updateFunctionExpression` or the factory supplied by your transformation context instead. */
  def updateFunctionExpression(
    node: FunctionExpression,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    asteriskToken: AsteriskToken,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Unit,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: Unit,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  /** @deprecated Use `factory.updateFunctionExpression` or the factory supplied by your transformation context instead. */
  def updateFunctionExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression,
    modifiers: Array[Modifier],
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionExpression = js.native
  
  def updateFunctionTypeNode(
    node: FunctionTypeNode,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): FunctionTypeNode = js.native
  /** @deprecated Use `factory.updateFunctionTypeNode` or the factory supplied by your transformation context instead. */
  def updateFunctionTypeNode(
    node: FunctionTypeNode,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): FunctionTypeNode = js.native
  def updateFunctionTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionTypeNode,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionTypeNode = js.native
  /** @deprecated Use `factory.updateFunctionTypeNode` or the factory supplied by your transformation context instead. */
  def updateFunctionTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionTypeNode,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionTypeNode = js.native
  
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  /** @deprecated Use `factory.updateGetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: GetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    body: Block
  ): GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  /** @deprecated Use `factory.updateGetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: Unit,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  def updateGetAccessor(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.GetAccessorDeclaration = js.native
  
  /** @deprecated Use `factory.updateHeritageClause` or the factory supplied by your transformation context instead. */
  def updateHeritageClause(node: typings.typescriptNn5FuAjk.ts.HeritageClause, types: Array[ExpressionWithTypeArguments]): typings.typescriptNn5FuAjk.ts.HeritageClause = js.native
  /** @deprecated Use `factory.updateHeritageClause` or the factory supplied by your transformation context instead. */
  def updateHeritageClause(
    node: HeritageClause,
    types: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionWithTypeArguments]
  ): HeritageClause = js.native
  
  /** @deprecated Use `factory.updateIfStatement` or the factory supplied by your transformation context instead. */
  def updateIf(node: IfStatement, expression: Expression, thenStatement: Statement): IfStatement = js.native
  def updateIf(node: IfStatement, expression: Expression, thenStatement: Statement, elseStatement: Statement): IfStatement = js.native
  /** @deprecated Use `factory.updateIfStatement` or the factory supplied by your transformation context instead. */
  def updateIf(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IfStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    thenStatement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IfStatement = js.native
  def updateIf(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IfStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    thenStatement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement,
    elseStatement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IfStatement = js.native
  
  def updateImportClause(
    node: typings.typescriptNn5FuAjk.ts.ImportClause,
    name: Unit,
    namedBindings: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def updateImportClause(
    node: typings.typescriptNn5FuAjk.ts.ImportClause,
    name: Unit,
    namedBindings: NamedImportBindings,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def updateImportClause(
    node: typings.typescriptNn5FuAjk.ts.ImportClause,
    name: Identifier,
    namedBindings: Unit,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  /** @deprecated Use `factory.updateImportClause` or the factory supplied by your transformation context instead. */
  def updateImportClause(
    node: typings.typescriptNn5FuAjk.ts.ImportClause,
    name: Identifier,
    namedBindings: NamedImportBindings,
    isTypeOnly: Boolean
  ): typings.typescriptNn5FuAjk.ts.ImportClause = js.native
  def updateImportClause(node: ImportClause, name: Unit, namedBindings: Unit, isTypeOnly: Boolean): ImportClause = js.native
  def updateImportClause(
    node: ImportClause,
    name: Unit,
    namedBindings: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImportBindings,
    isTypeOnly: Boolean
  ): ImportClause = js.native
  def updateImportClause(
    node: ImportClause,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    namedBindings: Unit,
    isTypeOnly: Boolean
  ): ImportClause = js.native
  /** @deprecated Use `factory.updateImportClause` or the factory supplied by your transformation context instead. */
  def updateImportClause(
    node: ImportClause,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    namedBindings: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamedImportBindings,
    isTypeOnly: Boolean
  ): ImportClause = js.native
  
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: Unit,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  /** @deprecated Use `factory.updateImportDeclaration` or the factory supplied by your transformation context instead. */
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: ImportDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    importClause: typings.typescriptNn5FuAjk.ts.ImportClause,
    moduleSpecifier: Expression,
    assertClause: AssertClause
  ): ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: Unit,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  /** @deprecated Use `factory.updateImportDeclaration` or the factory supplied by your transformation context instead. */
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  def updateImportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    importClause: ImportClause,
    moduleSpecifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    assertClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportDeclaration = js.native
  
  def updateImportEqualsDeclaration(
    node: ImportEqualsDeclaration,
    decorators: Unit,
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def updateImportEqualsDeclaration(
    node: ImportEqualsDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def updateImportEqualsDeclaration(
    node: ImportEqualsDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  /** @deprecated Use `factory.updateImportEqualsDeclaration` or the factory supplied by your transformation context instead. */
  def updateImportEqualsDeclaration(
    node: ImportEqualsDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    isTypeOnly: Boolean,
    name: Identifier,
    moduleReference: ModuleReference
  ): ImportEqualsDeclaration = js.native
  def updateImportEqualsDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration,
    decorators: Unit,
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def updateImportEqualsDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  def updateImportEqualsDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  /** @deprecated Use `factory.updateImportEqualsDeclaration` or the factory supplied by your transformation context instead. */
  def updateImportEqualsDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    isTypeOnly: Boolean,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    moduleReference: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleReference
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportEqualsDeclaration = js.native
  
  def updateImportSpecifier(node: ImportSpecifier, isTypeOnly: Boolean, propertyName: Unit, name: Identifier): ImportSpecifier = js.native
  /** @deprecated Use `factory.updateImportSpecifier` or the factory supplied by your transformation context instead. */
  def updateImportSpecifier(node: ImportSpecifier, isTypeOnly: Boolean, propertyName: Identifier, name: Identifier): ImportSpecifier = js.native
  def updateImportSpecifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier,
    isTypeOnly: Boolean,
    propertyName: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier = js.native
  /** @deprecated Use `factory.updateImportSpecifier` or the factory supplied by your transformation context instead. */
  def updateImportSpecifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier,
    isTypeOnly: Boolean,
    propertyName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier = js.native
  
  /** @deprecated Use `factory.updateImportTypeNode` or the factory supplied by your transformation context instead. */
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[TypeNode]
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, assertions: Unit, qualifier: EntityName): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: Unit,
    qualifier: EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: Unit,
    qualifier: EntityName,
    typeArguments: Array[TypeNode]
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: Unit,
    qualifier: EntityName,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, assertions: ImportTypeAssertionContainer): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[TypeNode]
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName,
    typeArguments: Array[TypeNode]
  ): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    assertions: ImportTypeAssertionContainer,
    qualifier: EntityName,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, qualifier: Unit, typeArguments: Unit, isTypeOf: Boolean): ImportTypeNode = js.native
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, qualifier: Unit, typeArguments: Array[TypeNode]): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    qualifier: Unit,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, qualifier: EntityName): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    qualifier: EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  def updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, qualifier: EntityName, typeArguments: Array[TypeNode]): ImportTypeNode = js.native
  def updateImportTypeNode(
    node: ImportTypeNode,
    argument: TypeNode,
    qualifier: EntityName,
    typeArguments: Array[TypeNode],
    isTypeOf: Boolean
  ): ImportTypeNode = js.native
  /** @deprecated Use `factory.updateImportTypeNode` or the factory supplied by your transformation context instead. */
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: Unit,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    assertions: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeAssertionContainer,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: Unit,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: Unit,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Unit,
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  def updateImportTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode,
    argument: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    qualifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    isTypeOf: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportTypeNode = js.native
  
  def updateIndexSignature(
    node: IndexSignatureDeclaration,
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  def updateIndexSignature(
    node: IndexSignatureDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  def updateIndexSignature(
    node: IndexSignatureDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  /** @deprecated Use `factory.updateIndexSignature` or the factory supplied by your transformation context instead. */
  def updateIndexSignature(
    node: IndexSignatureDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode
  ): IndexSignatureDeclaration = js.native
  def updateIndexSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration,
    decorators: Unit,
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  def updateIndexSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  def updateIndexSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  /** @deprecated Use `factory.updateIndexSignature` or the factory supplied by your transformation context instead. */
  def updateIndexSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    parameters: Array[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexSignatureDeclaration = js.native
  
  /** @deprecated Use `factory.updateIndexedAccessTypeNode` or the factory supplied by your transformation context instead. */
  def updateIndexedAccessTypeNode(node: IndexedAccessTypeNode, objectType: TypeNode, indexType: TypeNode): IndexedAccessTypeNode = js.native
  /** @deprecated Use `factory.updateIndexedAccessTypeNode` or the factory supplied by your transformation context instead. */
  def updateIndexedAccessTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexedAccessTypeNode,
    objectType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    indexType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IndexedAccessTypeNode = js.native
  
  /** @deprecated Use `factory.updateInferTypeNode` or the factory supplied by your transformation context instead. */
  def updateInferTypeNode(node: InferTypeNode, typeParameter: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration): InferTypeNode = js.native
  /** @deprecated Use `factory.updateInferTypeNode` or the factory supplied by your transformation context instead. */
  def updateInferTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InferTypeNode,
    typeParameter: TypeParameterDeclaration
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.InferTypeNode = js.native
  
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  /** @deprecated Use `factory.updateInterfaceDeclaration` or the factory supplied by your transformation context instead. */
  def updateInterfaceDeclaration(
    node: typings.typescriptNn5FuAjk.ts.InterfaceDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    heritageClauses: Array[typings.typescriptNn5FuAjk.ts.HeritageClause],
    members: Array[typings.typescriptNn5FuAjk.ts.TypeElement]
  ): typings.typescriptNn5FuAjk.ts.InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Unit,
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  /** @deprecated Use `factory.updateInterfaceDeclaration` or the factory supplied by your transformation context instead. */
  def updateInterfaceDeclaration(
    node: InterfaceDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    heritageClauses: Array[HeritageClause],
    members: Array[TypeElement]
  ): InterfaceDeclaration = js.native
  
  /** @deprecated Use `factory.updateIntersectionTypeNode` or the factory supplied by your transformation context instead. */
  def updateIntersectionTypeNode(node: typings.typescriptNn5FuAjk.ts.IntersectionTypeNode, types: NodeArray[TypeNode]): typings.typescriptNn5FuAjk.ts.IntersectionTypeNode = js.native
  /** @deprecated Use `factory.updateIntersectionTypeNode` or the factory supplied by your transformation context instead. */
  def updateIntersectionTypeNode(
    node: IntersectionTypeNode,
    types: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): IntersectionTypeNode = js.native
  
  /** @deprecated Use `factory.updateJsxAttribute` or the factory supplied by your transformation context instead. */
  def updateJsxAttribute(node: JsxAttribute, name: Identifier): JsxAttribute = js.native
  def updateJsxAttribute(node: JsxAttribute, name: Identifier, initializer: JsxExpression): JsxAttribute = js.native
  def updateJsxAttribute(node: JsxAttribute, name: Identifier, initializer: StringLiteral): JsxAttribute = js.native
  /** @deprecated Use `factory.updateJsxAttribute` or the factory supplied by your transformation context instead. */
  def updateJsxAttribute(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute = js.native
  def updateJsxAttribute(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute = js.native
  def updateJsxAttribute(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.StringLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxAttribute = js.native
  
  /** @deprecated Use `factory.updateJsxAttributes` or the factory supplied by your transformation context instead. */
  def updateJsxAttributes(
    node: typings.typescriptNn5FuAjk.ts.JsxAttributes,
    properties: Array[typings.typescriptNn5FuAjk.ts.JsxAttributeLike]
  ): typings.typescriptNn5FuAjk.ts.JsxAttributes = js.native
  /** @deprecated Use `factory.updateJsxAttributes` or the factory supplied by your transformation context instead. */
  def updateJsxAttributes(node: JsxAttributes, properties: Array[JsxAttributeLike]): JsxAttributes = js.native
  
  /** @deprecated Use `factory.updateJsxClosingElement` or the factory supplied by your transformation context instead. */
  def updateJsxClosingElement(node: JsxClosingElement, tagName: JsxTagNameExpression): JsxClosingElement = js.native
  /** @deprecated Use `factory.updateJsxClosingElement` or the factory supplied by your transformation context instead. */
  def updateJsxClosingElement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingElement,
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingElement = js.native
  
  /** @deprecated Use `factory.updateJsxElement` or the factory supplied by your transformation context instead. */
  def updateJsxElement(
    node: JsxElement,
    openingElement: JsxOpeningElement,
    children: Array[JsxChild],
    closingElement: JsxClosingElement
  ): JsxElement = js.native
  /** @deprecated Use `factory.updateJsxElement` or the factory supplied by your transformation context instead. */
  def updateJsxElement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxElement,
    openingElement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement,
    children: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxChild],
    closingElement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingElement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxElement = js.native
  
  /** @deprecated Use `factory.updateJsxExpression` or the factory supplied by your transformation context instead. */
  def updateJsxExpression(node: JsxExpression): JsxExpression = js.native
  def updateJsxExpression(node: JsxExpression, expression: Expression): JsxExpression = js.native
  /** @deprecated Use `factory.updateJsxExpression` or the factory supplied by your transformation context instead. */
  def updateJsxExpression(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression = js.native
  def updateJsxExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxExpression = js.native
  
  /** @deprecated Use `factory.updateJsxFragment` or the factory supplied by your transformation context instead. */
  def updateJsxFragment(
    node: JsxFragment,
    openingFragment: JsxOpeningFragment,
    children: Array[JsxChild],
    closingFragment: JsxClosingFragment
  ): JsxFragment = js.native
  /** @deprecated Use `factory.updateJsxFragment` or the factory supplied by your transformation context instead. */
  def updateJsxFragment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxFragment,
    openingFragment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningFragment,
    children: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxChild],
    closingFragment: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxClosingFragment
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxFragment = js.native
  
  def updateJsxOpeningElement(
    node: JsxOpeningElement,
    tagName: JsxTagNameExpression,
    typeArguments: Unit,
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxOpeningElement = js.native
  /** @deprecated Use `factory.updateJsxOpeningElement` or the factory supplied by your transformation context instead. */
  def updateJsxOpeningElement(
    node: JsxOpeningElement,
    tagName: JsxTagNameExpression,
    typeArguments: Array[TypeNode],
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxOpeningElement = js.native
  def updateJsxOpeningElement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement,
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Unit,
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement = js.native
  /** @deprecated Use `factory.updateJsxOpeningElement` or the factory supplied by your transformation context instead. */
  def updateJsxOpeningElement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement,
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxOpeningElement = js.native
  
  def updateJsxSelfClosingElement(
    node: JsxSelfClosingElement,
    tagName: JsxTagNameExpression,
    typeArguments: Unit,
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxSelfClosingElement = js.native
  /** @deprecated Use `factory.updateJsxSelfClosingElement` or the factory supplied by your transformation context instead. */
  def updateJsxSelfClosingElement(
    node: JsxSelfClosingElement,
    tagName: JsxTagNameExpression,
    typeArguments: Array[TypeNode],
    attributes: typings.typescriptNn5FuAjk.ts.JsxAttributes
  ): JsxSelfClosingElement = js.native
  def updateJsxSelfClosingElement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSelfClosingElement,
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Unit,
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSelfClosingElement = js.native
  /** @deprecated Use `factory.updateJsxSelfClosingElement` or the factory supplied by your transformation context instead. */
  def updateJsxSelfClosingElement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSelfClosingElement,
    tagName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxTagNameExpression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    attributes: JsxAttributes
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSelfClosingElement = js.native
  
  /** @deprecated Use `factory.updateJsxSpreadAttribute` or the factory supplied by your transformation context instead. */
  def updateJsxSpreadAttribute(node: JsxSpreadAttribute, expression: Expression): JsxSpreadAttribute = js.native
  /** @deprecated Use `factory.updateJsxSpreadAttribute` or the factory supplied by your transformation context instead. */
  def updateJsxSpreadAttribute(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSpreadAttribute,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.JsxSpreadAttribute = js.native
  
  /** @deprecated Use `factory.updateJsxText` or the factory supplied by your transformation context instead. */
  def updateJsxText(node: typings.typescriptNn5FuAjk.ts.JsxText, text: String): typings.typescriptNn5FuAjk.ts.JsxText = js.native
  def updateJsxText(node: typings.typescriptNn5FuAjk.ts.JsxText, text: String, containsOnlyTriviaWhiteSpaces: Boolean): typings.typescriptNn5FuAjk.ts.JsxText = js.native
  /** @deprecated Use `factory.updateJsxText` or the factory supplied by your transformation context instead. */
  def updateJsxText(node: JsxText, text: String): JsxText = js.native
  def updateJsxText(node: JsxText, text: String, containsOnlyTriviaWhiteSpaces: Boolean): JsxText = js.native
  
  /** @deprecated Use `factory.updateLabelStatement` or the factory supplied by your transformation context instead. */
  def updateLabel(node: LabeledStatement, label: Identifier, statement: Statement): LabeledStatement = js.native
  /** @deprecated Use `factory.updateLabelStatement` or the factory supplied by your transformation context instead. */
  def updateLabel(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LabeledStatement,
    label: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LabeledStatement = js.native
  
  def updateLanguageServiceSourceFile(sourceFile: SourceFile, scriptSnapshot: IScriptSnapshot, version: String): SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: SourceFile,
    scriptSnapshot: IScriptSnapshot,
    version: String,
    textChangeRange: Unit,
    aggressiveChecks: Boolean
  ): SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: SourceFile,
    scriptSnapshot: IScriptSnapshot,
    version: String,
    textChangeRange: typings.typescriptNn5FuAjk.ts.TextChangeRange
  ): SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: SourceFile,
    scriptSnapshot: IScriptSnapshot,
    version: String,
    textChangeRange: typings.typescriptNn5FuAjk.ts.TextChangeRange,
    aggressiveChecks: Boolean
  ): SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    version: String
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    version: String,
    textChangeRange: Unit,
    aggressiveChecks: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    version: String,
    textChangeRange: TextChangeRange
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateLanguageServiceSourceFile(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    scriptSnapshot: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.IScriptSnapshot,
    version: String,
    textChangeRange: TextChangeRange,
    aggressiveChecks: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  
  def updateLiteralTypeNode(node: LiteralTypeNode, literal: BooleanLiteral): LiteralTypeNode = js.native
  /** @deprecated Use `factory.updateLiteralTypeNode` or the factory supplied by your transformation context instead. */
  def updateLiteralTypeNode(node: LiteralTypeNode, literal: LiteralExpression): LiteralTypeNode = js.native
  def updateLiteralTypeNode(node: LiteralTypeNode, literal: NullLiteral): LiteralTypeNode = js.native
  def updateLiteralTypeNode(node: LiteralTypeNode, literal: PrefixUnaryExpression): LiteralTypeNode = js.native
  def updateLiteralTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode,
    literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BooleanLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  /** @deprecated Use `factory.updateLiteralTypeNode` or the factory supplied by your transformation context instead. */
  def updateLiteralTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode,
    literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  def updateLiteralTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode,
    literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NullLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  def updateLiteralTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode,
    literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryExpression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.LiteralTypeNode = js.native
  
  /** @deprecated Use `factory.updateMappedTypeNode` or the factory supplied by your transformation context instead. */
  def updateMappedTypeNode(
    node: MappedTypeNode,
    readonlyToken: js.UndefOr[ReadonlyKeyword | PlusToken | MinusToken],
    typeParameter: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    nameType: js.UndefOr[TypeNode],
    questionToken: js.UndefOr[QuestionToken | PlusToken | MinusToken],
    `type`: js.UndefOr[TypeNode],
    members: js.UndefOr[NodeArray[typings.typescriptNn5FuAjk.ts.TypeElement]]
  ): MappedTypeNode = js.native
  /** @deprecated Use `factory.updateMappedTypeNode` or the factory supplied by your transformation context instead. */
  def updateMappedTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MappedTypeNode,
    readonlyToken: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReadonlyKeyword | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PlusToken | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MinusToken
    ],
    typeParameter: TypeParameterDeclaration,
    nameType: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    questionToken: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PlusToken | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MinusToken
    ],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    members: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeElement]]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MappedTypeNode = js.native
  
  /** @deprecated Use `factory.updateMetaProperty` or the factory supplied by your transformation context instead. */
  def updateMetaProperty(node: MetaProperty, name: Identifier): MetaProperty = js.native
  /** @deprecated Use `factory.updateMetaProperty` or the factory supplied by your transformation context instead. */
  def updateMetaProperty(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MetaProperty,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MetaProperty = js.native
  
  /** @deprecated Use `factory.updateMethodDeclaration` or the factory supplied by your transformation context instead. */
  def updateMethod(
    node: MethodDeclaration,
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    asteriskToken: js.UndefOr[AsteriskToken],
    name: PropertyName,
    questionToken: js.UndefOr[QuestionToken],
    typeParameters: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration]],
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: js.UndefOr[TypeNode],
    body: js.UndefOr[Block]
  ): MethodDeclaration = js.native
  /** @deprecated Use `factory.updateMethodDeclaration` or the factory supplied by your transformation context instead. */
  def updateMethod(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodDeclaration,
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    asteriskToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken],
    typeParameters: js.UndefOr[Array[TypeParameterDeclaration]],
    parameters: Array[ParameterDeclaration],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    body: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodDeclaration = js.native
  
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: Unit,
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: Unit,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  /** @deprecated Use `factory.updateMethodSignature` or the factory supplied by your transformation context instead. */
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: MethodSignature,
    typeParameters: NodeArray[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    parameters: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    `type`: TypeNode,
    name: PropertyName,
    questionToken: QuestionToken
  ): MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: Unit,
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  /** @deprecated Use `factory.updateMethodSignature` or the factory supplied by your transformation context instead. */
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  def updateMethodSignature(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature,
    typeParameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeParameterDeclaration],
    parameters: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MethodSignature = js.native
  
  /** @deprecated Use `factory.updateModuleBlock` or the factory supplied by your transformation context instead. */
  def updateModuleBlock(node: typings.typescriptNn5FuAjk.ts.ModuleBlock, statements: Array[Statement]): typings.typescriptNn5FuAjk.ts.ModuleBlock = js.native
  /** @deprecated Use `factory.updateModuleBlock` or the factory supplied by your transformation context instead. */
  def updateModuleBlock(node: ModuleBlock, statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]): ModuleBlock = js.native
  
  def updateModuleDeclaration(node: ModuleDeclaration, decorators: Unit, modifiers: Unit, name: ModuleName): ModuleDeclaration = js.native
  def updateModuleDeclaration(node: ModuleDeclaration, decorators: Unit, modifiers: Unit, name: ModuleName, body: ModuleBody): ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: ModuleDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName
  ): ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: ModuleDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: ModuleBody
  ): ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: ModuleDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: ModuleName
  ): ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: ModuleDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: ModuleName,
    body: ModuleBody
  ): ModuleDeclaration = js.native
  /** @deprecated Use `factory.updateModuleDeclaration` or the factory supplied by your transformation context instead. */
  def updateModuleDeclaration(
    node: ModuleDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName
  ): ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: ModuleDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: ModuleName,
    body: ModuleBody
  ): ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  /** @deprecated Use `factory.updateModuleDeclaration` or the factory supplied by your transformation context instead. */
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  def updateModuleDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleName,
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleBody
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ModuleDeclaration = js.native
  
  /** @deprecated Use `factory.updateNamedExports` or the factory supplied by your transformation context instead. */
  def updateNamedExports(node: typings.typescriptNn5FuAjk.ts.NamedExports, elements: Array[ExportSpecifier]): typings.typescriptNn5FuAjk.ts.NamedExports = js.native
  /** @deprecated Use `factory.updateNamedExports` or the factory supplied by your transformation context instead. */
  def updateNamedExports(
    node: NamedExports,
    elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExportSpecifier]
  ): NamedExports = js.native
  
  /** @deprecated Use `factory.updateNamedImports` or the factory supplied by your transformation context instead. */
  def updateNamedImports(node: typings.typescriptNn5FuAjk.ts.NamedImports, elements: Array[ImportSpecifier]): typings.typescriptNn5FuAjk.ts.NamedImports = js.native
  /** @deprecated Use `factory.updateNamedImports` or the factory supplied by your transformation context instead. */
  def updateNamedImports(
    node: NamedImports,
    elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ImportSpecifier]
  ): NamedImports = js.native
  
  /** @deprecated Use `factory.updateNamespaceExport` or the factory supplied by your transformation context instead. */
  def updateNamespaceExport(node: NamespaceExport, name: Identifier): NamespaceExport = js.native
  /** @deprecated Use `factory.updateNamespaceExport` or the factory supplied by your transformation context instead. */
  def updateNamespaceExport(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExport,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExport = js.native
  
  /** @deprecated Use `factory.updateNamespaceExportDeclaration` or the factory supplied by your transformation context instead. */
  def updateNamespaceExportDeclaration(node: NamespaceExportDeclaration, name: Identifier): NamespaceExportDeclaration = js.native
  /** @deprecated Use `factory.updateNamespaceExportDeclaration` or the factory supplied by your transformation context instead. */
  def updateNamespaceExportDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExportDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceExportDeclaration = js.native
  
  /** @deprecated Use `factory.updateNamespaceImport` or the factory supplied by your transformation context instead. */
  def updateNamespaceImport(node: NamespaceImport, name: Identifier): NamespaceImport = js.native
  /** @deprecated Use `factory.updateNamespaceImport` or the factory supplied by your transformation context instead. */
  def updateNamespaceImport(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceImport,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NamespaceImport = js.native
  
  /** @deprecated Use `factory.updateNewExpression` or the factory supplied by your transformation context instead. */
  def updateNew(node: NewExpression, expression: Expression): NewExpression = js.native
  def updateNew(
    node: NewExpression,
    expression: Expression,
    typeArguments: Unit,
    argumentsArray: Array[Expression]
  ): NewExpression = js.native
  def updateNew(node: NewExpression, expression: Expression, typeArguments: Array[TypeNode]): NewExpression = js.native
  def updateNew(
    node: NewExpression,
    expression: Expression,
    typeArguments: Array[TypeNode],
    argumentsArray: Array[Expression]
  ): NewExpression = js.native
  /** @deprecated Use `factory.updateNewExpression` or the factory supplied by your transformation context instead. */
  def updateNew(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  def updateNew(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Unit,
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  def updateNew(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  def updateNew(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    argumentsArray: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NewExpression = js.native
  
  /** @deprecated Use `factory.updateNonNullChain` or the factory supplied by your transformation context instead. */
  def updateNonNullChain(node: NonNullChain, expression: Expression): NonNullChain = js.native
  /** @deprecated Use `factory.updateNonNullChain` or the factory supplied by your transformation context instead. */
  def updateNonNullChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonNullChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonNullChain = js.native
  
  /** @deprecated Use `factory.updateNonNullExpression` or the factory supplied by your transformation context instead. */
  def updateNonNullExpression(node: NonNullExpression, expression: Expression): NonNullExpression = js.native
  /** @deprecated Use `factory.updateNonNullExpression` or the factory supplied by your transformation context instead. */
  def updateNonNullExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonNullExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NonNullExpression = js.native
  
  /** @deprecated Use `factory.updateObjectBindingPattern` or the factory supplied by your transformation context instead. */
  def updateObjectBindingPattern(
    node: typings.typescriptNn5FuAjk.ts.ObjectBindingPattern,
    elements: Array[typings.typescriptNn5FuAjk.ts.BindingElement]
  ): typings.typescriptNn5FuAjk.ts.ObjectBindingPattern = js.native
  /** @deprecated Use `factory.updateObjectBindingPattern` or the factory supplied by your transformation context instead. */
  def updateObjectBindingPattern(node: ObjectBindingPattern, elements: Array[BindingElement]): ObjectBindingPattern = js.native
  
  /** @deprecated Use `factory.updateObjectLiteralExpression` or the factory supplied by your transformation context instead. */
  def updateObjectLiteral(node: ObjectLiteralExpression, properties: Array[ObjectLiteralElementLike]): ObjectLiteralExpression = js.native
  /** @deprecated Use `factory.updateObjectLiteralExpression` or the factory supplied by your transformation context instead. */
  def updateObjectLiteral(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralExpression,
    properties: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralElementLike]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ObjectLiteralExpression = js.native
  
  /** @deprecated Use `factory.updateOptionalTypeNode` or the factory supplied by your transformation context instead. */
  def updateOptionalTypeNode(node: OptionalTypeNode, `type`: TypeNode): OptionalTypeNode = js.native
  /** @deprecated Use `factory.updateOptionalTypeNode` or the factory supplied by your transformation context instead. */
  def updateOptionalTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.OptionalTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.OptionalTypeNode = js.native
  
  /** @deprecated Use `factory.updateParameterDeclaration` or the factory supplied by your transformation context instead. */
  def updateParameter(
    node: typings.typescriptNn5FuAjk.ts.ParameterDeclaration,
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    dotDotDotToken: js.UndefOr[DotDotDotToken],
    name: String | BindingName,
    questionToken: js.UndefOr[QuestionToken],
    `type`: js.UndefOr[TypeNode],
    initializer: js.UndefOr[Expression]
  ): typings.typescriptNn5FuAjk.ts.ParameterDeclaration = js.native
  /** @deprecated Use `factory.updateParameterDeclaration` or the factory supplied by your transformation context instead. */
  def updateParameter(
    node: ParameterDeclaration,
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    dotDotDotToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.DotDotDotToken],
    name: String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    questionToken: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    initializer: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): ParameterDeclaration = js.native
  
  /** @deprecated Use `factory.updateParenthesizedExpression` or the factory supplied by your transformation context instead. */
  def updateParen(node: ParenthesizedExpression, expression: Expression): ParenthesizedExpression = js.native
  /** @deprecated Use `factory.updateParenthesizedExpression` or the factory supplied by your transformation context instead. */
  def updateParen(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParenthesizedExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParenthesizedExpression = js.native
  
  /** @deprecated Use `factory.updateParenthesizedType` or the factory supplied by your transformation context instead. */
  def updateParenthesizedType(node: ParenthesizedTypeNode, `type`: TypeNode): ParenthesizedTypeNode = js.native
  /** @deprecated Use `factory.updateParenthesizedType` or the factory supplied by your transformation context instead. */
  def updateParenthesizedType(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParenthesizedTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ParenthesizedTypeNode = js.native
  
  /** @deprecated Use `factory.updatePartiallyEmittedExpression` or the factory supplied by your transformation context instead. */
  def updatePartiallyEmittedExpression(node: PartiallyEmittedExpression, expression: Expression): PartiallyEmittedExpression = js.native
  /** @deprecated Use `factory.updatePartiallyEmittedExpression` or the factory supplied by your transformation context instead. */
  def updatePartiallyEmittedExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PartiallyEmittedExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PartiallyEmittedExpression = js.native
  
  /** @deprecated Use `factory.updatePostfixUnaryExpression` or the factory supplied by your transformation context instead. */
  def updatePostfix(node: PostfixUnaryExpression, operand: Expression): PostfixUnaryExpression = js.native
  /** @deprecated Use `factory.updatePostfixUnaryExpression` or the factory supplied by your transformation context instead. */
  def updatePostfix(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PostfixUnaryExpression,
    operand: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PostfixUnaryExpression = js.native
  
  /** @deprecated Use `factory.updatePrefixExpression` or the factory supplied by your transformation context instead. */
  def updatePrefix(node: PrefixUnaryExpression, operand: Expression): PrefixUnaryExpression = js.native
  /** @deprecated Use `factory.updatePrefixExpression` or the factory supplied by your transformation context instead. */
  def updatePrefix(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryExpression,
    operand: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PrefixUnaryExpression = js.native
  
  /** @deprecated Use `factory.updatePropertyDeclaration` or the factory supplied by your transformation context instead. */
  def updateProperty(
    node: typings.typescriptNn5FuAjk.ts.PropertyDeclaration,
    decorators: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Decorator]],
    modifiers: js.UndefOr[Array[typings.typescriptNn5FuAjk.ts.Modifier]],
    name: String | PropertyName,
    questionOrExclamationToken: js.UndefOr[QuestionToken | typings.typescriptNn5FuAjk.ts.ExclamationToken],
    `type`: js.UndefOr[TypeNode],
    initializer: js.UndefOr[Expression]
  ): typings.typescriptNn5FuAjk.ts.PropertyDeclaration = js.native
  /** @deprecated Use `factory.updatePropertyDeclaration` or the factory supplied by your transformation context instead. */
  def updateProperty(
    node: PropertyDeclaration,
    decorators: js.UndefOr[Array[Decorator]],
    modifiers: js.UndefOr[Array[Modifier]],
    name: String | typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionOrExclamationToken: js.UndefOr[
      typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken | ExclamationToken
    ],
    `type`: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    initializer: js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression]
  ): PropertyDeclaration = js.native
  
  /** @deprecated Use `factory.updatePropertyAccessExpression` or the factory supplied by your transformation context instead. */
  def updatePropertyAccess(node: PropertyAccessExpression, expression: Expression, name: MemberName): PropertyAccessExpression = js.native
  /** @deprecated Use `factory.updatePropertyAccessExpression` or the factory supplied by your transformation context instead. */
  def updatePropertyAccess(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MemberName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessExpression = js.native
  
  def updatePropertyAccessChain(node: PropertyAccessChain, expression: Expression, questionDotToken: Unit, name: MemberName): PropertyAccessChain = js.native
  /** @deprecated Use `factory.updatePropertyAccessChain` or the factory supplied by your transformation context instead. */
  def updatePropertyAccessChain(
    node: PropertyAccessChain,
    expression: Expression,
    questionDotToken: QuestionDotToken,
    name: MemberName
  ): PropertyAccessChain = js.native
  def updatePropertyAccessChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MemberName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain = js.native
  /** @deprecated Use `factory.updatePropertyAccessChain` or the factory supplied by your transformation context instead. */
  def updatePropertyAccessChain(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    questionDotToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionDotToken,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.MemberName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAccessChain = js.native
  
  /** @deprecated Use `factory.updatePropertyAssignment` or the factory supplied by your transformation context instead. */
  def updatePropertyAssignment(node: PropertyAssignment, name: PropertyName, initializer: Expression): PropertyAssignment = js.native
  /** @deprecated Use `factory.updatePropertyAssignment` or the factory supplied by your transformation context instead. */
  def updatePropertyAssignment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAssignment,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyAssignment = js.native
  
  def updatePropertySignature(node: typings.typescriptNn5FuAjk.ts.PropertySignature, modifiers: Unit, name: PropertyName): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: QuestionToken
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Unit,
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  /** @deprecated Use `factory.updatePropertySignature` or the factory supplied by your transformation context instead. */
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: Unit,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: Unit,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: typings.typescriptNn5FuAjk.ts.PropertySignature,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    questionToken: QuestionToken,
    `type`: TypeNode,
    initializer: Expression
  ): typings.typescriptNn5FuAjk.ts.PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  /** @deprecated Use `factory.updatePropertySignature` or the factory supplied by your transformation context instead. */
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): PropertySignature = js.native
  def updatePropertySignature(
    node: PropertySignature,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    questionToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QuestionToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): PropertySignature = js.native
  
  /** @deprecated Use `factory.updateQualifiedName` or the factory supplied by your transformation context instead. */
  def updateQualifiedName(node: QualifiedName, left: EntityName, right: Identifier): QualifiedName = js.native
  /** @deprecated Use `factory.updateQualifiedName` or the factory supplied by your transformation context instead. */
  def updateQualifiedName(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QualifiedName,
    left: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    right: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.QualifiedName = js.native
  
  /** @deprecated Use `factory.updateRestTypeNode` or the factory supplied by your transformation context instead. */
  def updateRestTypeNode(node: RestTypeNode, `type`: TypeNode): RestTypeNode = js.native
  /** @deprecated Use `factory.updateRestTypeNode` or the factory supplied by your transformation context instead. */
  def updateRestTypeNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.RestTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.RestTypeNode = js.native
  
  /** @deprecated Use `factory.updateReturnStatement` or the factory supplied by your transformation context instead. */
  def updateReturn(node: ReturnStatement): ReturnStatement = js.native
  def updateReturn(node: ReturnStatement, expression: Expression): ReturnStatement = js.native
  /** @deprecated Use `factory.updateReturnStatement` or the factory supplied by your transformation context instead. */
  def updateReturn(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReturnStatement): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReturnStatement = js.native
  def updateReturn(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReturnStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ReturnStatement = js.native
  
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  /** @deprecated Use `factory.updateSetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: PropertyName,
    parameters: Array[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    body: Block
  ): typings.typescriptNn5FuAjk.ts.SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  /** @deprecated Use `factory.updateSetAccessorDeclaration` or the factory supplied by your transformation context instead. */
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration]
  ): SetAccessorDeclaration = js.native
  def updateSetAccessor(
    node: SetAccessorDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.PropertyName,
    parameters: Array[ParameterDeclaration],
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): SetAccessorDeclaration = js.native
  
  /** @deprecated Use `factory.updateShorthandPropertyAssignment` or the factory supplied by your transformation context instead. */
  def updateShorthandPropertyAssignment(node: typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment, name: Identifier): typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment = js.native
  def updateShorthandPropertyAssignment(
    node: typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment,
    name: Identifier,
    objectAssignmentInitializer: Expression
  ): typings.typescriptNn5FuAjk.ts.ShorthandPropertyAssignment = js.native
  /** @deprecated Use `factory.updateShorthandPropertyAssignment` or the factory supplied by your transformation context instead. */
  def updateShorthandPropertyAssignment(
    node: ShorthandPropertyAssignment,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): ShorthandPropertyAssignment = js.native
  def updateShorthandPropertyAssignment(
    node: ShorthandPropertyAssignment,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    objectAssignmentInitializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): ShorthandPropertyAssignment = js.native
  
  def updateSourceFile(
    sourceFile: SourceFile,
    newText: String,
    textChangeRange: typings.typescriptNn5FuAjk.ts.TextChangeRange
  ): SourceFile = js.native
  def updateSourceFile(
    sourceFile: SourceFile,
    newText: String,
    textChangeRange: typings.typescriptNn5FuAjk.ts.TextChangeRange,
    aggressiveChecks: Boolean
  ): SourceFile = js.native
  def updateSourceFile(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    newText: String,
    textChangeRange: TextChangeRange
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFile(
    sourceFile: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    newText: String,
    textChangeRange: TextChangeRange,
    aggressiveChecks: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  
  /** @deprecated Use `factory.updateSourceFile` or the factory supplied by your transformation context instead. */
  def updateSourceFileNode(node: SourceFile, statements: Array[Statement]): SourceFile = js.native
  def updateSourceFileNode(node: SourceFile, statements: Array[Statement], isDeclarationFile: Boolean): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  def updateSourceFileNode(
    node: SourceFile,
    statements: Array[Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[FileReference],
    typeReferences: Array[FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[FileReference]
  ): SourceFile = js.native
  /** @deprecated Use `factory.updateSourceFile` or the factory supplied by your transformation context instead. */
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Boolean,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Unit,
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Unit,
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Boolean,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  def updateSourceFileNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile,
    statements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    isDeclarationFile: Unit,
    referencedFiles: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    typeReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference],
    hasNoDefaultLib: Unit,
    libReferences: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FileReference]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SourceFile = js.native
  
  /** @deprecated Use `factory.updateSpreadExpression` or the factory supplied by your transformation context instead. */
  def updateSpread(node: SpreadElement, expression: Expression): SpreadElement = js.native
  /** @deprecated Use `factory.updateSpreadExpression` or the factory supplied by your transformation context instead. */
  def updateSpread(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SpreadElement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SpreadElement = js.native
  
  /** @deprecated Use `factory.updateSpreadAssignment` or the factory supplied by your transformation context instead. */
  def updateSpreadAssignment(node: SpreadAssignment, expression: Expression): SpreadAssignment = js.native
  /** @deprecated Use `factory.updateSpreadAssignment` or the factory supplied by your transformation context instead. */
  def updateSpreadAssignment(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SpreadAssignment,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SpreadAssignment = js.native
  
  /** @deprecated Use `factory.updateExpressionStatement` or the factory supplied by your transformation context instead. */
  def updateStatement(node: ExpressionStatement, expression: Expression): ExpressionStatement = js.native
  /** @deprecated Use `factory.updateExpressionStatement` or the factory supplied by your transformation context instead. */
  def updateStatement(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ExpressionStatement = js.native
  
  /** @deprecated Use `factory.updateSwitchStatement` or the factory supplied by your transformation context instead. */
  def updateSwitch(node: SwitchStatement, expression: Expression, caseBlock: CaseBlock): SwitchStatement = js.native
  /** @deprecated Use `factory.updateSwitchStatement` or the factory supplied by your transformation context instead. */
  def updateSwitch(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SwitchStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    caseBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CaseBlock
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.SwitchStatement = js.native
  
  /** @deprecated Use `factory.updateTaggedTemplate` or the factory supplied by your transformation context instead. */
  def updateTaggedTemplate(node: TaggedTemplateExpression, tag: Expression, template: TemplateLiteral): TaggedTemplateExpression = js.native
  def updateTaggedTemplate(node: TaggedTemplateExpression, tag: Expression, typeArguments: Unit, template: TemplateLiteral): TaggedTemplateExpression = js.native
  /** @deprecated Use `factory.updateTaggedTemplate` or the factory supplied by your transformation context instead. */
  def updateTaggedTemplate(
    node: TaggedTemplateExpression,
    tag: Expression,
    typeArguments: Array[TypeNode],
    template: TemplateLiteral
  ): TaggedTemplateExpression = js.native
  /** @deprecated Use `factory.updateTaggedTemplate` or the factory supplied by your transformation context instead. */
  def updateTaggedTemplate(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression,
    tag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    template: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression = js.native
  def updateTaggedTemplate(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression,
    tag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Unit,
    template: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression = js.native
  /** @deprecated Use `factory.updateTaggedTemplate` or the factory supplied by your transformation context instead. */
  def updateTaggedTemplate(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression,
    tag: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode],
    template: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateLiteral
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TaggedTemplateExpression = js.native
  
  /** @deprecated Use `factory.updateTemplateExpression` or the factory supplied by your transformation context instead. */
  def updateTemplateExpression(node: TemplateExpression, head: TemplateHead, templateSpans: Array[TemplateSpan]): TemplateExpression = js.native
  /** @deprecated Use `factory.updateTemplateExpression` or the factory supplied by your transformation context instead. */
  def updateTemplateExpression(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateExpression,
    head: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateHead,
    templateSpans: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateExpression = js.native
  
  /** @deprecated Use `factory.updateTemplateSpan` or the factory supplied by your transformation context instead. */
  def updateTemplateSpan(node: TemplateSpan, expression: Expression, literal: typings.typescriptNn5FuAjk.ts.TemplateMiddle): TemplateSpan = js.native
  def updateTemplateSpan(node: TemplateSpan, expression: Expression, literal: TemplateTail): TemplateSpan = js.native
  /** @deprecated Use `factory.updateTemplateSpan` or the factory supplied by your transformation context instead. */
  def updateTemplateSpan(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    literal: TemplateMiddle
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan = js.native
  def updateTemplateSpan(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    literal: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateTail
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TemplateSpan = js.native
  
  /** @deprecated Use `factory.updateThrowStatement` or the factory supplied by your transformation context instead. */
  def updateThrow(node: ThrowStatement, expression: Expression): ThrowStatement = js.native
  /** @deprecated Use `factory.updateThrowStatement` or the factory supplied by your transformation context instead. */
  def updateThrow(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThrowStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThrowStatement = js.native
  
  /** @deprecated Use `factory.updateTryStatement` or the factory supplied by your transformation context instead. */
  def updateTry(node: TryStatement, tryBlock: Block): TryStatement = js.native
  def updateTry(node: TryStatement, tryBlock: Block, catchClause: Unit, finallyBlock: Block): TryStatement = js.native
  def updateTry(node: TryStatement, tryBlock: Block, catchClause: CatchClause): TryStatement = js.native
  def updateTry(node: TryStatement, tryBlock: Block, catchClause: CatchClause, finallyBlock: Block): TryStatement = js.native
  /** @deprecated Use `factory.updateTryStatement` or the factory supplied by your transformation context instead. */
  def updateTry(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement,
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  def updateTry(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement,
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    catchClause: Unit,
    finallyBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  def updateTry(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement,
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    catchClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  def updateTry(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement,
    tryBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block,
    catchClause: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.CatchClause,
    finallyBlock: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Block
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TryStatement = js.native
  
  /** @deprecated Use `factory.updateTupleTypeNode` or the factory supplied by your transformation context instead. */
  def updateTupleTypeNode(
    node: typings.typescriptNn5FuAjk.ts.TupleTypeNode,
    elements: Array[TypeNode | typings.typescriptNn5FuAjk.ts.NamedTupleMember]
  ): typings.typescriptNn5FuAjk.ts.TupleTypeNode = js.native
  /** @deprecated Use `factory.updateTupleTypeNode` or the factory supplied by your transformation context instead. */
  def updateTupleTypeNode(
    node: TupleTypeNode,
    elements: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode | NamedTupleMember]
  ): TupleTypeNode = js.native
  
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Unit,
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Unit,
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  /** @deprecated Use `factory.updateTypeAliasDeclaration` or the factory supplied by your transformation context instead. */
  def updateTypeAliasDeclaration(
    node: TypeAliasDeclaration,
    decorators: Array[typings.typescriptNn5FuAjk.ts.Decorator],
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    typeParameters: Array[typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration],
    `type`: TypeNode
  ): TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Unit,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Array[Decorator],
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  /** @deprecated Use `factory.updateTypeAliasDeclaration` or the factory supplied by your transformation context instead. */
  def updateTypeAliasDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration,
    decorators: Array[Decorator],
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    typeParameters: Array[TypeParameterDeclaration],
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAliasDeclaration = js.native
  
  /** @deprecated Use `factory.updateTypeAssertion` or the factory supplied by your transformation context instead. */
  def updateTypeAssertion(node: TypeAssertion, `type`: TypeNode, expression: Expression): TypeAssertion = js.native
  /** @deprecated Use `factory.updateTypeAssertion` or the factory supplied by your transformation context instead. */
  def updateTypeAssertion(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAssertion,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeAssertion = js.native
  
  /** @deprecated Use `factory.updateTypeLiteralNode` or the factory supplied by your transformation context instead. */
  def updateTypeLiteralNode(node: TypeLiteralNode, members: NodeArray[typings.typescriptNn5FuAjk.ts.TypeElement]): TypeLiteralNode = js.native
  /** @deprecated Use `factory.updateTypeLiteralNode` or the factory supplied by your transformation context instead. */
  def updateTypeLiteralNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeLiteralNode,
    members: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[TypeElement]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeLiteralNode = js.native
  
  /** @deprecated Use `factory.updateTypeOfExpression` or the factory supplied by your transformation context instead. */
  def updateTypeOf(node: TypeOfExpression, expression: Expression): TypeOfExpression = js.native
  /** @deprecated Use `factory.updateTypeOfExpression` or the factory supplied by your transformation context instead. */
  def updateTypeOf(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOfExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOfExpression = js.native
  
  /** @deprecated Use `factory.updateTypeOperatorNode` or the factory supplied by your transformation context instead. */
  def updateTypeOperatorNode(node: TypeOperatorNode, `type`: TypeNode): TypeOperatorNode = js.native
  /** @deprecated Use `factory.updateTypeOperatorNode` or the factory supplied by your transformation context instead. */
  def updateTypeOperatorNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOperatorNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeOperatorNode = js.native
  
  def updateTypeParameterDeclaration(node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration, modifiers: Unit, name: Identifier): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Unit,
    name: Identifier,
    constraint: Unit,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Unit,
    name: Identifier,
    constraint: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Unit,
    name: Identifier,
    constraint: TypeNode,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.updateTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    constraint: Unit,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    constraint: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    name: Identifier,
    constraint: TypeNode,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.updateTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  def updateTypeParameterDeclaration(node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration, name: Identifier): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    name: Identifier,
    constraint: Unit,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    name: Identifier,
    constraint: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration,
    name: Identifier,
    constraint: TypeNode,
    defaultType: TypeNode
  ): typings.typescriptNn5FuAjk.ts.TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Unit,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.updateTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    modifiers: Array[Modifier],
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  /** @deprecated Use `factory.updateTypeParameterDeclaration` or the factory supplied by your transformation context instead. */
  def updateTypeParameterDeclaration(node: TypeParameterDeclaration, name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: Unit,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  def updateTypeParameterDeclaration(
    node: TypeParameterDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    constraint: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    defaultType: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): TypeParameterDeclaration = js.native
  
  /** @deprecated Use `factory.updateTypePredicateNode` or the factory supplied by your transformation context instead. */
  def updateTypePredicateNode(node: TypePredicateNode, parameterName: Identifier, `type`: TypeNode): TypePredicateNode = js.native
  def updateTypePredicateNode(node: TypePredicateNode, parameterName: ThisTypeNode, `type`: TypeNode): TypePredicateNode = js.native
  /** @deprecated Use `factory.updateTypePredicateNode` or the factory supplied by your transformation context instead. */
  def updateTypePredicateNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  
  def updateTypePredicateNodeWithModifier(node: TypePredicateNode, assertsModifier: Unit, parameterName: Identifier): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(node: TypePredicateNode, assertsModifier: Unit, parameterName: Identifier, `type`: TypeNode): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(node: TypePredicateNode, assertsModifier: Unit, parameterName: ThisTypeNode): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(node: TypePredicateNode, assertsModifier: Unit, parameterName: ThisTypeNode, `type`: TypeNode): TypePredicateNode = js.native
  /** @deprecated Use `factory.updateTypePredicateNode` or the factory supplied by your transformation context instead. */
  def updateTypePredicateNodeWithModifier(node: TypePredicateNode, assertsModifier: AssertsKeyword, parameterName: Identifier): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: TypePredicateNode,
    assertsModifier: AssertsKeyword,
    parameterName: Identifier,
    `type`: TypeNode
  ): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(node: TypePredicateNode, assertsModifier: AssertsKeyword, parameterName: ThisTypeNode): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: TypePredicateNode,
    assertsModifier: AssertsKeyword,
    parameterName: ThisTypeNode,
    `type`: TypeNode
  ): TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: Unit,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  /** @deprecated Use `factory.updateTypePredicateNode` or the factory supplied by your transformation context instead. */
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Identifier,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  def updateTypePredicateNodeWithModifier(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode,
    assertsModifier: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AssertsKeyword,
    parameterName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.ThisTypeNode,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypePredicateNode = js.native
  
  /** @deprecated Use `factory.updateTypeQueryNode` or the factory supplied by your transformation context instead. */
  def updateTypeQueryNode(node: TypeQueryNode, exprName: EntityName): TypeQueryNode = js.native
  def updateTypeQueryNode(node: TypeQueryNode, exprName: EntityName, typeArguments: Array[TypeNode]): TypeQueryNode = js.native
  /** @deprecated Use `factory.updateTypeQueryNode` or the factory supplied by your transformation context instead. */
  def updateTypeQueryNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeQueryNode,
    exprName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeQueryNode = js.native
  def updateTypeQueryNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeQueryNode,
    exprName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeQueryNode = js.native
  
  /** @deprecated Use `factory.updateTypeReferenceNode` or the factory supplied by your transformation context instead. */
  def updateTypeReferenceNode(node: TypeReferenceNode, typeName: EntityName): TypeReferenceNode = js.native
  def updateTypeReferenceNode(node: TypeReferenceNode, typeName: EntityName, typeArguments: NodeArray[TypeNode]): TypeReferenceNode = js.native
  /** @deprecated Use `factory.updateTypeReferenceNode` or the factory supplied by your transformation context instead. */
  def updateTypeReferenceNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode,
    typeName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode = js.native
  def updateTypeReferenceNode(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode,
    typeName: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.EntityName,
    typeArguments: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeReferenceNode = js.native
  
  /** @deprecated Use `factory.updateUnionTypeNode` or the factory supplied by your transformation context instead. */
  def updateUnionTypeNode(node: typings.typescriptNn5FuAjk.ts.UnionTypeNode, types: NodeArray[TypeNode]): typings.typescriptNn5FuAjk.ts.UnionTypeNode = js.native
  /** @deprecated Use `factory.updateUnionTypeNode` or the factory supplied by your transformation context instead. */
  def updateUnionTypeNode(
    node: UnionTypeNode,
    types: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode]
  ): UnionTypeNode = js.native
  
  /** @deprecated Use `factory.updateVariableDeclaration` or the factory supplied by your transformation context instead. */
  def updateVariableDeclaration(node: VariableDeclaration, name: BindingName): VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: Unit,
    `type`: Unit,
    initializer: Expression
  ): VariableDeclaration = js.native
  def updateVariableDeclaration(node: VariableDeclaration, name: BindingName, exclamationToken: Unit, `type`: TypeNode): VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: Unit,
    `type`: TypeNode,
    initializer: Expression
  ): VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken
  ): VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: Unit,
    initializer: Expression
  ): VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: TypeNode
  ): VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: typings.typescriptNn5FuAjk.ts.ExclamationToken,
    `type`: TypeNode,
    initializer: Expression
  ): VariableDeclaration = js.native
  def updateVariableDeclaration(node: VariableDeclaration, name: BindingName, `type`: Unit, initializer: Expression): VariableDeclaration = js.native
  def updateVariableDeclaration(node: VariableDeclaration, name: BindingName, `type`: TypeNode): VariableDeclaration = js.native
  def updateVariableDeclaration(node: VariableDeclaration, name: BindingName, `type`: TypeNode, initializer: Expression): VariableDeclaration = js.native
  /** @deprecated Use `factory.updateVariableDeclaration` or the factory supplied by your transformation context instead. */
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: Unit,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: Unit,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    exclamationToken: ExclamationToken,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    `type`: Unit,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  def updateVariableDeclaration(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration,
    name: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.BindingName,
    `type`: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TypeNode,
    initializer: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration = js.native
  
  /** @deprecated Use `factory.updateVariableDeclarationList` or the factory supplied by your transformation context instead. */
  def updateVariableDeclarationList(node: VariableDeclarationList, declarations: Array[VariableDeclaration]): VariableDeclarationList = js.native
  /** @deprecated Use `factory.updateVariableDeclarationList` or the factory supplied by your transformation context instead. */
  def updateVariableDeclarationList(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList,
    declarations: Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList = js.native
  
  def updateVariableStatement(
    node: typings.typescriptNn5FuAjk.ts.VariableStatement,
    modifiers: Unit,
    declarationList: VariableDeclarationList
  ): typings.typescriptNn5FuAjk.ts.VariableStatement = js.native
  /** @deprecated Use `factory.updateVariableStatement` or the factory supplied by your transformation context instead. */
  def updateVariableStatement(
    node: typings.typescriptNn5FuAjk.ts.VariableStatement,
    modifiers: Array[typings.typescriptNn5FuAjk.ts.Modifier],
    declarationList: VariableDeclarationList
  ): typings.typescriptNn5FuAjk.ts.VariableStatement = js.native
  def updateVariableStatement(
    node: VariableStatement,
    modifiers: Unit,
    declarationList: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList
  ): VariableStatement = js.native
  /** @deprecated Use `factory.updateVariableStatement` or the factory supplied by your transformation context instead. */
  def updateVariableStatement(
    node: VariableStatement,
    modifiers: Array[Modifier],
    declarationList: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclarationList
  ): VariableStatement = js.native
  
  /** @deprecated Use `factory.updateVoidExpression` or the factory supplied by your transformation context instead. */
  def updateVoid(node: VoidExpression, expression: Expression): VoidExpression = js.native
  /** @deprecated Use `factory.updateVoidExpression` or the factory supplied by your transformation context instead. */
  def updateVoid(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VoidExpression,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VoidExpression = js.native
  
  /** @deprecated Use `factory.updateWhileStatement` or the factory supplied by your transformation context instead. */
  def updateWhile(node: WhileStatement, expression: Expression, statement: Statement): WhileStatement = js.native
  /** @deprecated Use `factory.updateWhileStatement` or the factory supplied by your transformation context instead. */
  def updateWhile(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WhileStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WhileStatement = js.native
  
  /** @deprecated Use `factory.updateWithStatement` or the factory supplied by your transformation context instead. */
  def updateWith(node: WithStatement, expression: Expression, statement: Statement): WithStatement = js.native
  /** @deprecated Use `factory.updateWithStatement` or the factory supplied by your transformation context instead. */
  def updateWith(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WithStatement,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression,
    statement: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.WithStatement = js.native
  
  /** @deprecated Use `factory.updateYieldExpression` or the factory supplied by your transformation context instead. */
  def updateYield(node: YieldExpression): YieldExpression = js.native
  def updateYield(node: YieldExpression, asteriskToken: Unit, expression: Expression): YieldExpression = js.native
  def updateYield(node: YieldExpression, asteriskToken: AsteriskToken): YieldExpression = js.native
  def updateYield(node: YieldExpression, asteriskToken: AsteriskToken, expression: Expression): YieldExpression = js.native
  /** @deprecated Use `factory.updateYieldExpression` or the factory supplied by your transformation context instead. */
  def updateYield(node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  def updateYield(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression,
    asteriskToken: Unit,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  def updateYield(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  def updateYield(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression,
    asteriskToken: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.AsteriskToken,
    expression: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Expression
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.YieldExpression = js.native
  
  /**
    * Checks to see if the locale is in the appropriate format,
    * and if it is, attempts to set the appropriate language.
    */
  def validateLocaleAndSetLanguage(locale: String, sys: FileExists): Unit = js.native
  def validateLocaleAndSetLanguage(locale: String, sys: FileExists, errors: Push[Diagnostic]): Unit = js.native
  def validateLocaleAndSetLanguage(
    locale: String,
    sys: FileExists,
    errors: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Push[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Diagnostic]
  ): Unit = js.native
  
  /** The version of the TypeScript compiler release */
  val version: String = js.native
  
  val versionMajorMinor: /* "4.7" */ String = js.native
  
  /**
    * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.
    *
    * @param node The Node whose children will be visited.
    * @param visitor The callback used to visit each child.
    * @param context A lexical environment context for the visitor.
    */
  def visitEachChild[T /* <: Node */](node: T, visitor: Visitor, context: TransformationContext): T = js.native
  def visitEachChild[T /* <: Node */](
    node: T,
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: Node */](
    node: T,
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any,
    tokenVisitor: Visitor
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: Node */](
    node: T,
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: Unit,
    tokenVisitor: Visitor
  ): js.UndefOr[T] = js.native
  /**
    * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.
    *
    * @param node The Node whose children will be visited.
    * @param visitor The callback used to visit each child.
    * @param context A lexical environment context for the visitor.
    */
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any,
    tokenVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: Unit,
    tokenVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: Node */](node: Unit, visitor: Visitor, context: TransformationContext): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: Node */](
    node: Unit,
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: Node */](
    node: Unit,
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any,
    tokenVisitor: Visitor
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: Node */](
    node: Unit,
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: Unit,
    tokenVisitor: Visitor
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: /* import warning: importer.ImportType#apply Failed type conversion: typeof visitNodes */ js.Any,
    tokenVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor
  ): js.UndefOr[T] = js.native
  def visitEachChild[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: Unit,
    tokenVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor
  ): js.UndefOr[T] = js.native
  /**
    * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.
    *
    * @param node The Node whose children will be visited.
    * @param visitor The callback used to visit each child.
    * @param context A lexical environment context for the visitor.
    */
  @JSName("visitEachChild")
  def visitEachChild_T_Node_T[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): T = js.native
  /**
    * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.
    *
    * @param node The Node whose children will be visited.
    * @param visitor The callback used to visit each child.
    * @param context A lexical environment context for the visitor.
    */
  @JSName("visitEachChild")
  def visitEachChild_T_Node_Union[T /* <: Node */](node: T, visitor: Visitor, context: TransformationContext): js.UndefOr[T] = js.native
  
  def visitFunctionBody(node: Unit, visitor: Visitor, context: TransformationContext): js.UndefOr[FunctionBody] = js.native
  def visitFunctionBody(
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionBody] = js.native
  /**
    * Resumes a suspended lexical environment and visits a concise body, ending the lexical
    * environment and merging hoisted declarations upon completion.
    */
  def visitFunctionBody(node: typings.typescriptNn5FuAjk.ts.ConciseBody, visitor: Visitor, context: TransformationContext): typings.typescriptNn5FuAjk.ts.ConciseBody = js.native
  /**
    * Resumes a suspended lexical environment and visits a function body, ending the lexical
    * environment and merging hoisted declarations upon completion.
    */
  def visitFunctionBody(node: FunctionBody, visitor: Visitor, context: TransformationContext): FunctionBody = js.native
  /**
    * Resumes a suspended lexical environment and visits a concise body, ending the lexical
    * environment and merging hoisted declarations upon completion.
    */
  def visitFunctionBody(
    node: ConciseBody,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): ConciseBody = js.native
  /**
    * Resumes a suspended lexical environment and visits a function body, ending the lexical
    * environment and merging hoisted declarations upon completion.
    */
  def visitFunctionBody(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionBody,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionBody] = js.native
  /**
    * Resumes a suspended lexical environment and visits a function body, ending the lexical
    * environment and merging hoisted declarations upon completion.
    */
  @JSName("visitFunctionBody")
  def visitFunctionBody_FunctionBody(
    node: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionBody,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.FunctionBody = js.native
  /**
    * Resumes a suspended lexical environment and visits a function body, ending the lexical
    * environment and merging hoisted declarations upon completion.
    */
  @JSName("visitFunctionBody")
  def visitFunctionBody_Union(node: FunctionBody, visitor: Visitor, context: TransformationContext): js.UndefOr[FunctionBody] = js.native
  
  /**
    * Visits an iteration body, adding any block-scoped variables required by the transformation.
    */
  def visitIterationBody(body: Statement, visitor: Visitor, context: TransformationContext): Statement = js.native
  /**
    * Visits an iteration body, adding any block-scoped variables required by the transformation.
    */
  def visitIterationBody(
    body: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement = js.native
  
  /**
    * Starts a new lexical environment and visits a statement list, ending the lexical environment
    * and merging hoisted declarations upon completion.
    */
  def visitLexicalEnvironment(statements: NodeArray[Statement], visitor: Visitor, context: TransformationContext): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(statements: NodeArray[Statement], visitor: Visitor, context: TransformationContext, start: Double): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(
    statements: NodeArray[Statement],
    visitor: Visitor,
    context: TransformationContext,
    start: Double,
    ensureUseStrict: Boolean
  ): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(
    statements: NodeArray[Statement],
    visitor: Visitor,
    context: TransformationContext,
    start: Double,
    ensureUseStrict: Boolean,
    nodesVisitor: NodesVisitor
  ): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(
    statements: NodeArray[Statement],
    visitor: Visitor,
    context: TransformationContext,
    start: Double,
    ensureUseStrict: Unit,
    nodesVisitor: NodesVisitor
  ): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(
    statements: NodeArray[Statement],
    visitor: Visitor,
    context: TransformationContext,
    start: Unit,
    ensureUseStrict: Boolean
  ): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(
    statements: NodeArray[Statement],
    visitor: Visitor,
    context: TransformationContext,
    start: Unit,
    ensureUseStrict: Boolean,
    nodesVisitor: NodesVisitor
  ): NodeArray[Statement] = js.native
  def visitLexicalEnvironment(
    statements: NodeArray[Statement],
    visitor: Visitor,
    context: TransformationContext,
    start: Unit,
    ensureUseStrict: Unit,
    nodesVisitor: NodesVisitor
  ): NodeArray[Statement] = js.native
  /**
    * Starts a new lexical environment and visits a statement list, ending the lexical environment
    * and merging hoisted declarations upon completion.
    */
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Double,
    ensureUseStrict: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Double,
    ensureUseStrict: Boolean,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Double,
    ensureUseStrict: Unit,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Unit,
    ensureUseStrict: Boolean
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Unit,
    ensureUseStrict: Boolean,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  def visitLexicalEnvironment(
    statements: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    start: Unit,
    ensureUseStrict: Unit,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Statement] = js.native
  
  /**
    * Visits a Node using the supplied visitor, possibly returning a new Node in its place.
    *
    * @param node The Node to visit.
    * @param visitor The callback used to visit the Node.
    * @param test A callback to execute to verify the Node is valid.
    * @param lift An optional callback to execute to lift a NodeArray into a valid Node.
    */
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](): js.UndefOr[T] = js.native
  /**
    * Visits a Node using the supplied visitor, possibly returning a new Node in its place.
    *
    * @param node The Node to visit.
    * @param visitor The callback used to visit the Node.
    * @param test A callback to execute to verify the Node is valid.
    * @param lift An optional callback to execute to lift a NodeArray into a valid Node.
    */
  def visitNode[T /* <: Node */](node: T): T = js.native
  def visitNode[T /* <: Node */](node: T, visitor: Unit, test: js.Function1[/* node */ Node, Boolean]): T = js.native
  def visitNode[T /* <: Node */](
    node: T,
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    lift: js.Function1[/* node */ Array[Node], T]
  ): T = js.native
  def visitNode[T /* <: Node */](node: T, visitor: Unit, test: Unit, lift: js.Function1[/* node */ Array[Node], T]): T = js.native
  def visitNode[T /* <: Node */](node: T, visitor: Visitor): T = js.native
  def visitNode[T /* <: Node */](node: T, visitor: Visitor, test: js.Function1[/* node */ Node, Boolean]): T = js.native
  def visitNode[T /* <: Node */](
    node: T,
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    lift: js.Function1[/* node */ Array[Node], T]
  ): T = js.native
  def visitNode[T /* <: Node */](node: T, visitor: Visitor, test: Unit, lift: js.Function1[/* node */ Array[Node], T]): T = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[T] = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: Unit,
    test: Unit,
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: Unit, visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor): js.UndefOr[T] = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[T] = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  def visitNode[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  /**
    * Visits a Node using the supplied visitor, possibly returning a new Node in its place.
    *
    * @param node The Node to visit.
    * @param visitor The callback used to visit the Node.
    * @param test A callback to execute to verify the Node is valid.
    * @param lift An optional callback to execute to lift a NodeArray into a valid Node.
    */
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](): js.UndefOr[T] = js.native
  /**
    * Visits a Node using the supplied visitor, possibly returning a new Node in its place.
    *
    * @param node The Node to visit.
    * @param visitor The callback used to visit the Node.
    * @param test A callback to execute to verify the Node is valid.
    * @param lift An optional callback to execute to lift a NodeArray into a valid Node.
    */
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: Unit,
    test: Unit,
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): T = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](node: Unit, visitor: Unit, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](
    node: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    lift: js.Function1[/* node */ Array[Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](node: Unit, visitor: Unit, test: Unit, lift: js.Function1[/* node */ Array[Node], T]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](node: Unit, visitor: Visitor): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](node: Unit, visitor: Visitor, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](
    node: Unit,
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    lift: js.Function1[/* node */ Array[Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node[T /* <: Node */](node: Unit, visitor: Visitor, test: Unit, lift: js.Function1[/* node */ Array[Node], T]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: Unit,
    test: Unit,
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](node: T, visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    node: T,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    lift: js.Function1[/* node */ Array[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](node: T): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](node: T, visitor: Unit, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](
    node: T,
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    lift: js.Function1[/* node */ Array[Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](node: T, visitor: Unit, test: Unit, lift: js.Function1[/* node */ Array[Node], T]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](node: T, visitor: Visitor): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](node: T, visitor: Visitor, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](
    node: T,
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    lift: js.Function1[/* node */ Array[Node], T]
  ): js.UndefOr[T] = js.native
  @JSName("visitNode")
  def visitNode_T_Node_Union_T_Node[T /* <: Node */](node: T, visitor: Visitor, test: Unit, lift: js.Function1[/* node */ Array[Node], T]): js.UndefOr[T] = js.native
  
  /**
    * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.
    *
    * @param nodes The NodeArray to visit.
    * @param visitor The callback used to visit a Node.
    * @param test A node test to execute for each node.
    * @param start An optional value indicating the starting offset at which to start visiting.
    * @param count An optional value indicating the maximum number of nodes to visit.
    */
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](nodes: Unit, visitor: Unit, test: Unit, start: Double): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](nodes: Unit, visitor: Unit, test: Unit, start: Double, count: Double): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](nodes: Unit, visitor: Unit, test: Unit, start: Unit, count: Double): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](nodes: Unit, visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T]): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: js.Function1[/* node */ Node, Boolean], start: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: Unit, start: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: Unit, start: Double, count: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: Unit, start: Unit, count: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: js.Function1[/* node */ Node, Boolean], start: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: Unit, start: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: Unit, start: Double, count: Double): js.UndefOr[NodeArray[T]] = js.native
  def visitNodes[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: Unit, start: Unit, count: Double): js.UndefOr[NodeArray[T]] = js.native
  /**
    * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.
    *
    * @param nodes The NodeArray to visit.
    * @param visitor The callback used to visit a Node.
    * @param test A node test to execute for each node.
    * @param start An optional value indicating the starting offset at which to start visiting.
    * @param count An optional value indicating the maximum number of nodes to visit.
    */
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Unit,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: Unit,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: Unit,
    start: Double,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: Unit,
    start: Unit,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Unit,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Double,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  def visitNodes[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Unit,
    count: Double
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T] = js.native
  /**
    * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.
    *
    * @param nodes The NodeArray to visit.
    * @param visitor The callback used to visit a Node.
    * @param test A node test to execute for each node.
    * @param start An optional value indicating the starting offset at which to start visiting.
    * @param count An optional value indicating the maximum number of nodes to visit.
    */
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Unit, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Unit, test: js.Function1[/* node */ Node, Boolean], start: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](
    nodes: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](
    nodes: Unit,
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Unit, test: Unit, start: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Unit, test: Unit, start: Double, count: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Unit, test: Unit, start: Unit, count: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Visitor): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Visitor, test: js.Function1[/* node */ Node, Boolean]): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Visitor, test: js.Function1[/* node */ Node, Boolean], start: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](
    nodes: Unit,
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](
    nodes: Unit,
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Visitor, test: Unit, start: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Visitor, test: Unit, start: Double, count: Double): js.UndefOr[NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node[T /* <: Node */](nodes: Unit, visitor: Visitor, test: Unit, start: Unit, count: Double): js.UndefOr[NodeArray[T]] = js.native
  /**
    * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.
    *
    * @param nodes The NodeArray to visit.
    * @param visitor The callback used to visit a Node.
    * @param test A node test to execute for each node.
    * @param start An optional value indicating the starting offset at which to start visiting.
    * @param count An optional value indicating the maximum number of nodes to visit.
    */
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T]): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: js.Function1[/* node */ Node, Boolean]): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: js.Function1[/* node */ Node, Boolean], start: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    start: Double,
    count: Double
  ): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ Node, Boolean],
    start: Unit,
    count: Double
  ): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: Unit, start: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: Unit, start: Double, count: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Unit, test: Unit, start: Unit, count: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: js.Function1[/* node */ Node, Boolean]): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: js.Function1[/* node */ Node, Boolean], start: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    start: Double,
    count: Double
  ): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](
    nodes: NodeArray[T],
    visitor: Visitor,
    test: js.Function1[/* node */ Node, Boolean],
    start: Unit,
    count: Double
  ): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: Unit, start: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: Unit, start: Double, count: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_NodeArray[T /* <: Node */](nodes: NodeArray[T], visitor: Visitor, test: Unit, start: Unit, count: Double): NodeArray[T] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: Unit,
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: Unit,
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: Unit,
    test: Unit,
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean]
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: js.Function1[/* node */ typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node, Boolean],
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Double,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  @JSName("visitNodes")
  def visitNodes_T_Node_Union[T /* <: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Node */](
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    test: Unit,
    start: Unit,
    count: Double
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[T]] = js.native
  
  def visitParameterList(nodes: Unit, visitor: Visitor, context: TransformationContext): js.UndefOr[NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]] = js.native
  def visitParameterList(nodes: Unit, visitor: Visitor, context: TransformationContext, nodesVisitor: NodesVisitor): js.UndefOr[NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]] = js.native
  def visitParameterList(
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]] = js.native
  def visitParameterList(
    nodes: Unit,
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]] = js.native
  /**
    * Starts a new lexical environment and visits a parameter list, suspending the lexical
    * environment upon completion.
    */
  def visitParameterList(
    nodes: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    visitor: Visitor,
    context: TransformationContext
  ): NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration] = js.native
  def visitParameterList(
    nodes: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: NodesVisitor
  ): NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration] = js.native
  /**
    * Starts a new lexical environment and visits a parameter list, suspending the lexical
    * environment upon completion.
    */
  def visitParameterList(
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration] = js.native
  def visitParameterList(
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration] = js.native
  @JSName("visitParameterList")
  def visitParameterList_Union(
    nodes: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    visitor: Visitor,
    context: TransformationContext
  ): js.UndefOr[NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]] = js.native
  @JSName("visitParameterList")
  def visitParameterList_Union(
    nodes: NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration],
    visitor: Visitor,
    context: TransformationContext,
    nodesVisitor: NodesVisitor
  ): js.UndefOr[NodeArray[typings.typescriptNn5FuAjk.ts.ParameterDeclaration]] = js.native
  @JSName("visitParameterList")
  def visitParameterList_Union(
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]] = js.native
  @JSName("visitParameterList")
  def visitParameterList_Union(
    nodes: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration],
    visitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.Visitor,
    context: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.TransformationContext,
    nodesVisitor: typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodesVisitor
  ): js.UndefOr[typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.NodeArray[ParameterDeclaration]] = js.native
  
  def walkUpBindingElementsAndPatterns(binding: typings.typescriptNn5FuAjk.ts.BindingElement): VariableDeclaration | typings.typescriptNn5FuAjk.ts.ParameterDeclaration = js.native
  def walkUpBindingElementsAndPatterns(binding: BindingElement): typings.typescriptNn5FuAjk.tsserverlibraryDTsMod.VariableDeclaration | ParameterDeclaration = js.native
}
