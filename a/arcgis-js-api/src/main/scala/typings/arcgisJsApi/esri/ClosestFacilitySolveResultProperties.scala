package typings.arcgisJsApi.esri

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ClosestFacilitySolveResultProperties extends StObject {
  
  /**
    * Direction lines contains a set of line features for each segment of the route.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#directionLines)
    */
  var directionLines: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * Direction points contains a set of point features representing the direction maneuvers such as arriving to or departing from a stop, turning left or right, and other events along your route.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#directionPoints)
    */
  var directionPoints: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * Directions are returned if [ClosestFacilityParameters.returnDirections](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilityParameters.html#returnDirections) is set to `true` and [ClosestFacilityParameters.directionsOutputType](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilityParameters.html#directionsOutputType) is set to `complete`, `complete-no-events`, `instructions-only', `standard` or `summary-only` in a [closestFacility.solve()](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-closestFacility.html#solve) request.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#directions)
    */
  var directions: js.UndefOr[js.Array[DirectionsFeatureSetProperties]] = js.undefined
  
  /**
    * This provides access to the output facilities from a closest facility analysis.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#facilities)
    */
  var facilities: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * This provides access to the locations used as starting or ending points in a closest facility analysis.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#incidents)
    */
  var incidents: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * An array of processing [messages](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-NAMessage.html) generated by the server.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#messages)
    */
  var messages: js.UndefOr[js.Array[NAMessageProperties]] = js.undefined
  
  /**
    * A set of features representing point barriers.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#pointBarriers)
    */
  var pointBarriers: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * A set of features representing polygon barriers.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#polygonBarriers)
    */
  var polygonBarriers: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * A set of features representing polyline barriers.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#polylineBarriers)
    */
  var polylineBarriers: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * A set of features representing routes between the facilities and the incidents.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#routes)
    */
  var routes: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * This provides access to the edges that are traversed while solving a network analysis layer.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#traversedEdges)
    */
  var traversedEdges: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * This provides access to the junctions that are traversed while solving a network analysis layer.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#traversedJunctions)
    */
  var traversedJunctions: js.UndefOr[FeatureSetProperties] = js.undefined
  
  /**
    * This provides access to the turns that are traversed while solving a network analysis layer.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-ClosestFacilitySolveResult.html#traversedTurns)
    */
  var traversedTurns: js.UndefOr[FeatureSetProperties] = js.undefined
}
object ClosestFacilitySolveResultProperties {
  
  inline def apply(): ClosestFacilitySolveResultProperties = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ClosestFacilitySolveResultProperties]
  }
  
  extension [Self <: ClosestFacilitySolveResultProperties](x: Self) {
    
    inline def setDirectionLines(value: FeatureSetProperties): Self = StObject.set(x, "directionLines", value.asInstanceOf[js.Any])
    
    inline def setDirectionLinesUndefined: Self = StObject.set(x, "directionLines", js.undefined)
    
    inline def setDirectionPoints(value: FeatureSetProperties): Self = StObject.set(x, "directionPoints", value.asInstanceOf[js.Any])
    
    inline def setDirectionPointsUndefined: Self = StObject.set(x, "directionPoints", js.undefined)
    
    inline def setDirections(value: js.Array[DirectionsFeatureSetProperties]): Self = StObject.set(x, "directions", value.asInstanceOf[js.Any])
    
    inline def setDirectionsUndefined: Self = StObject.set(x, "directions", js.undefined)
    
    inline def setDirectionsVarargs(value: DirectionsFeatureSetProperties*): Self = StObject.set(x, "directions", js.Array(value*))
    
    inline def setFacilities(value: FeatureSetProperties): Self = StObject.set(x, "facilities", value.asInstanceOf[js.Any])
    
    inline def setFacilitiesUndefined: Self = StObject.set(x, "facilities", js.undefined)
    
    inline def setIncidents(value: FeatureSetProperties): Self = StObject.set(x, "incidents", value.asInstanceOf[js.Any])
    
    inline def setIncidentsUndefined: Self = StObject.set(x, "incidents", js.undefined)
    
    inline def setMessages(value: js.Array[NAMessageProperties]): Self = StObject.set(x, "messages", value.asInstanceOf[js.Any])
    
    inline def setMessagesUndefined: Self = StObject.set(x, "messages", js.undefined)
    
    inline def setMessagesVarargs(value: NAMessageProperties*): Self = StObject.set(x, "messages", js.Array(value*))
    
    inline def setPointBarriers(value: FeatureSetProperties): Self = StObject.set(x, "pointBarriers", value.asInstanceOf[js.Any])
    
    inline def setPointBarriersUndefined: Self = StObject.set(x, "pointBarriers", js.undefined)
    
    inline def setPolygonBarriers(value: FeatureSetProperties): Self = StObject.set(x, "polygonBarriers", value.asInstanceOf[js.Any])
    
    inline def setPolygonBarriersUndefined: Self = StObject.set(x, "polygonBarriers", js.undefined)
    
    inline def setPolylineBarriers(value: FeatureSetProperties): Self = StObject.set(x, "polylineBarriers", value.asInstanceOf[js.Any])
    
    inline def setPolylineBarriersUndefined: Self = StObject.set(x, "polylineBarriers", js.undefined)
    
    inline def setRoutes(value: FeatureSetProperties): Self = StObject.set(x, "routes", value.asInstanceOf[js.Any])
    
    inline def setRoutesUndefined: Self = StObject.set(x, "routes", js.undefined)
    
    inline def setTraversedEdges(value: FeatureSetProperties): Self = StObject.set(x, "traversedEdges", value.asInstanceOf[js.Any])
    
    inline def setTraversedEdgesUndefined: Self = StObject.set(x, "traversedEdges", js.undefined)
    
    inline def setTraversedJunctions(value: FeatureSetProperties): Self = StObject.set(x, "traversedJunctions", value.asInstanceOf[js.Any])
    
    inline def setTraversedJunctionsUndefined: Self = StObject.set(x, "traversedJunctions", js.undefined)
    
    inline def setTraversedTurns(value: FeatureSetProperties): Self = StObject.set(x, "traversedTurns", value.asInstanceOf[js.Any])
    
    inline def setTraversedTurnsUndefined: Self = StObject.set(x, "traversedTurns", js.undefined)
  }
}
