package typings.awsSdk.clientsSecuritylakeMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait CreateDatalakeRequest extends StObject {
  
  /**
    * Specify the Region or Regions that will contribute data to the rollup region.
    */
  var configurations: js.UndefOr[LakeConfigurationRequestMap] = js.undefined
  
  /**
    * Enable Security Lake in all Regions.
    */
  var enableAll: js.UndefOr[Boolean] = js.undefined
  
  /**
    * The Amazon Resource Name (ARN) used to create and update the Glue table. This table contains partitions generated by the ingestion and normalization of Amazon Web Services log sources and custom sources.
    */
  var metaStoreManagerRoleArn: js.UndefOr[RoleArn] = js.undefined
  
  /**
    * Enable Security Lake in the specified Regions. To enable Security Lake in specific Amazon Web Services Regions, such as us-east-1 or ap-northeast-3, provide the Region codes. For a list of Region codes, see Amazon Security Lake endpoints in the Amazon Web Services General Reference.
    */
  var regions: js.UndefOr[RegionSet] = js.undefined
}
object CreateDatalakeRequest {
  
  inline def apply(): CreateDatalakeRequest = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[CreateDatalakeRequest]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: CreateDatalakeRequest] (val x: Self) extends AnyVal {
    
    inline def setConfigurations(value: LakeConfigurationRequestMap): Self = StObject.set(x, "configurations", value.asInstanceOf[js.Any])
    
    inline def setConfigurationsUndefined: Self = StObject.set(x, "configurations", js.undefined)
    
    inline def setEnableAll(value: Boolean): Self = StObject.set(x, "enableAll", value.asInstanceOf[js.Any])
    
    inline def setEnableAllUndefined: Self = StObject.set(x, "enableAll", js.undefined)
    
    inline def setMetaStoreManagerRoleArn(value: RoleArn): Self = StObject.set(x, "metaStoreManagerRoleArn", value.asInstanceOf[js.Any])
    
    inline def setMetaStoreManagerRoleArnUndefined: Self = StObject.set(x, "metaStoreManagerRoleArn", js.undefined)
    
    inline def setRegions(value: RegionSet): Self = StObject.set(x, "regions", value.asInstanceOf[js.Any])
    
    inline def setRegionsUndefined: Self = StObject.set(x, "regions", js.undefined)
    
    inline def setRegionsVarargs(value: Region*): Self = StObject.set(x, "regions", js.Array(value*))
  }
}
