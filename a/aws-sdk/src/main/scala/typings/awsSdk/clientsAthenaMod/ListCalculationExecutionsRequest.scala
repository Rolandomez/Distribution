package typings.awsSdk.clientsAthenaMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ListCalculationExecutionsRequest extends StObject {
  
  /**
    * The maximum number of calculation executions to return.
    */
  var MaxResults: js.UndefOr[MaxCalculationsCount] = js.undefined
  
  /**
    * A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.
    */
  var NextToken: js.UndefOr[SessionManagerToken] = js.undefined
  
  /**
    * The session ID.
    */
  var SessionId: typings.awsSdk.clientsAthenaMod.SessionId
  
  /**
    * A filter for a specific calculation execution state. A description of each state follows.  CREATING - The calculation is in the process of being created.  CREATED - The calculation has been created and is ready to run.  QUEUED - The calculation has been queued for processing.  RUNNING - The calculation is running.  CANCELING - A request to cancel the calculation has been received and the system is working to stop it.  CANCELED - The calculation is no longer running as the result of a cancel request.  COMPLETED - The calculation has completed without error.  FAILED - The calculation failed and is no longer running.
    */
  var StateFilter: js.UndefOr[CalculationExecutionState] = js.undefined
}
object ListCalculationExecutionsRequest {
  
  inline def apply(SessionId: SessionId): ListCalculationExecutionsRequest = {
    val __obj = js.Dynamic.literal(SessionId = SessionId.asInstanceOf[js.Any])
    __obj.asInstanceOf[ListCalculationExecutionsRequest]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: ListCalculationExecutionsRequest] (val x: Self) extends AnyVal {
    
    inline def setMaxResults(value: MaxCalculationsCount): Self = StObject.set(x, "MaxResults", value.asInstanceOf[js.Any])
    
    inline def setMaxResultsUndefined: Self = StObject.set(x, "MaxResults", js.undefined)
    
    inline def setNextToken(value: SessionManagerToken): Self = StObject.set(x, "NextToken", value.asInstanceOf[js.Any])
    
    inline def setNextTokenUndefined: Self = StObject.set(x, "NextToken", js.undefined)
    
    inline def setSessionId(value: SessionId): Self = StObject.set(x, "SessionId", value.asInstanceOf[js.Any])
    
    inline def setStateFilter(value: CalculationExecutionState): Self = StObject.set(x, "StateFilter", value.asInstanceOf[js.Any])
    
    inline def setStateFilterUndefined: Self = StObject.set(x, "StateFilter", js.undefined)
  }
}
