package typings.awsSdk.clientsAthenaMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ListExecutorsRequest extends StObject {
  
  /**
    * A filter for a specific executor state. A description of each state follows.  CREATING - The executor is being started, including acquiring resources.  CREATED - The executor has been started.  REGISTERED - The executor has been registered.  TERMINATING - The executor is in the process of shutting down.  TERMINATED - The executor is no longer running.  FAILED - Due to a failure, the executor is no longer running.
    */
  var ExecutorStateFilter: js.UndefOr[ExecutorState] = js.undefined
  
  /**
    * The maximum number of executors to return.
    */
  var MaxResults: js.UndefOr[MaxListExecutorsCount] = js.undefined
  
  /**
    * A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.
    */
  var NextToken: js.UndefOr[SessionManagerToken] = js.undefined
  
  /**
    * The session ID.
    */
  var SessionId: typings.awsSdk.clientsAthenaMod.SessionId
}
object ListExecutorsRequest {
  
  inline def apply(SessionId: SessionId): ListExecutorsRequest = {
    val __obj = js.Dynamic.literal(SessionId = SessionId.asInstanceOf[js.Any])
    __obj.asInstanceOf[ListExecutorsRequest]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: ListExecutorsRequest] (val x: Self) extends AnyVal {
    
    inline def setExecutorStateFilter(value: ExecutorState): Self = StObject.set(x, "ExecutorStateFilter", value.asInstanceOf[js.Any])
    
    inline def setExecutorStateFilterUndefined: Self = StObject.set(x, "ExecutorStateFilter", js.undefined)
    
    inline def setMaxResults(value: MaxListExecutorsCount): Self = StObject.set(x, "MaxResults", value.asInstanceOf[js.Any])
    
    inline def setMaxResultsUndefined: Self = StObject.set(x, "MaxResults", js.undefined)
    
    inline def setNextToken(value: SessionManagerToken): Self = StObject.set(x, "NextToken", value.asInstanceOf[js.Any])
    
    inline def setNextTokenUndefined: Self = StObject.set(x, "NextToken", js.undefined)
    
    inline def setSessionId(value: SessionId): Self = StObject.set(x, "SessionId", value.asInstanceOf[js.Any])
  }
}
