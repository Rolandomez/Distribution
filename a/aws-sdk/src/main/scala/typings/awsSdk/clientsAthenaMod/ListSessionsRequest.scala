package typings.awsSdk.clientsAthenaMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ListSessionsRequest extends StObject {
  
  /**
    * The maximum number of sessions to return.
    */
  var MaxResults: js.UndefOr[MaxSessionsCount] = js.undefined
  
  /**
    * A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.
    */
  var NextToken: js.UndefOr[SessionManagerToken] = js.undefined
  
  /**
    * A filter for a specific session state. A description of each state follows.  CREATING - The session is being started, including acquiring resources.  CREATED - The session has been started.  IDLE - The session is able to accept a calculation.  BUSY - The session is processing another task and is unable to accept a calculation.  TERMINATING - The session is in the process of shutting down.  TERMINATED - The session and its resources are no longer running.  DEGRADED - The session has no healthy coordinators.  FAILED - Due to a failure, the session and its resources are no longer running.
    */
  var StateFilter: js.UndefOr[SessionState] = js.undefined
  
  /**
    * The workgroup to which the session belongs.
    */
  var WorkGroup: WorkGroupName
}
object ListSessionsRequest {
  
  inline def apply(WorkGroup: WorkGroupName): ListSessionsRequest = {
    val __obj = js.Dynamic.literal(WorkGroup = WorkGroup.asInstanceOf[js.Any])
    __obj.asInstanceOf[ListSessionsRequest]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: ListSessionsRequest] (val x: Self) extends AnyVal {
    
    inline def setMaxResults(value: MaxSessionsCount): Self = StObject.set(x, "MaxResults", value.asInstanceOf[js.Any])
    
    inline def setMaxResultsUndefined: Self = StObject.set(x, "MaxResults", js.undefined)
    
    inline def setNextToken(value: SessionManagerToken): Self = StObject.set(x, "NextToken", value.asInstanceOf[js.Any])
    
    inline def setNextTokenUndefined: Self = StObject.set(x, "NextToken", js.undefined)
    
    inline def setStateFilter(value: SessionState): Self = StObject.set(x, "StateFilter", value.asInstanceOf[js.Any])
    
    inline def setStateFilterUndefined: Self = StObject.set(x, "StateFilter", js.undefined)
    
    inline def setWorkGroup(value: WorkGroupName): Self = StObject.set(x, "WorkGroup", value.asInstanceOf[js.Any])
  }
}
