package typings.awsSdk.redshiftdataMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ExecuteStatementOutput extends StObject {
  
  /**
    * The cluster identifier. 
    */
  var ClusterIdentifier: js.UndefOr[Location] = js.undefined
  
  /**
    * The date and time (UTC) the statement was created. 
    */
  var CreatedAt: js.UndefOr[Timestamp] = js.undefined
  
  /**
    * The name of the database.
    */
  var Database: js.UndefOr[String] = js.undefined
  
  /**
    * The database user name.
    */
  var DbUser: js.UndefOr[String] = js.undefined
  
  /**
    * The identifier of the statement to be run. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API. 
    */
  var Id: js.UndefOr[UUID] = js.undefined
  
  /**
    * The name or ARN of the secret that enables access to the database. 
    */
  var SecretArn: js.UndefOr[typings.awsSdk.redshiftdataMod.SecretArn] = js.undefined
}
object ExecuteStatementOutput {
  
  inline def apply(): ExecuteStatementOutput = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ExecuteStatementOutput]
  }
  
  extension [Self <: ExecuteStatementOutput](x: Self) {
    
    inline def setClusterIdentifier(value: Location): Self = StObject.set(x, "ClusterIdentifier", value.asInstanceOf[js.Any])
    
    inline def setClusterIdentifierUndefined: Self = StObject.set(x, "ClusterIdentifier", js.undefined)
    
    inline def setCreatedAt(value: Timestamp): Self = StObject.set(x, "CreatedAt", value.asInstanceOf[js.Any])
    
    inline def setCreatedAtUndefined: Self = StObject.set(x, "CreatedAt", js.undefined)
    
    inline def setDatabase(value: String): Self = StObject.set(x, "Database", value.asInstanceOf[js.Any])
    
    inline def setDatabaseUndefined: Self = StObject.set(x, "Database", js.undefined)
    
    inline def setDbUser(value: String): Self = StObject.set(x, "DbUser", value.asInstanceOf[js.Any])
    
    inline def setDbUserUndefined: Self = StObject.set(x, "DbUser", js.undefined)
    
    inline def setId(value: UUID): Self = StObject.set(x, "Id", value.asInstanceOf[js.Any])
    
    inline def setIdUndefined: Self = StObject.set(x, "Id", js.undefined)
    
    inline def setSecretArn(value: SecretArn): Self = StObject.set(x, "SecretArn", value.asInstanceOf[js.Any])
    
    inline def setSecretArnUndefined: Self = StObject.set(x, "SecretArn", js.undefined)
  }
}
