package typings.awsSdk.clientsIvschatMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait LoggingConfigurationSummary extends StObject {
  
  /**
    * Logging-configuration ARN.
    */
  var arn: js.UndefOr[LoggingConfigurationArn] = js.undefined
  
  /**
    * Time when the logging configuration was created. This is an ISO 8601 timestamp; note that this is returned as a string.
    */
  var createTime: js.UndefOr[js.Date] = js.undefined
  
  /**
    * A complex type that contains a destination configuration for where chat content will be logged.
    */
  var destinationConfiguration: js.UndefOr[DestinationConfiguration] = js.undefined
  
  /**
    * Logging-configuration ID, generated by the system. This is a relative identifier, the part of the ARN that uniquely identifies the room.
    */
  var id: js.UndefOr[LoggingConfigurationID] = js.undefined
  
  /**
    * Logging-configuration name. The value does not need to be unique.
    */
  var name: js.UndefOr[LoggingConfigurationName] = js.undefined
  
  /**
    * The state of the logging configuration. When this is ACTIVE, the configuration is ready for logging chat content.
    */
  var state: js.UndefOr[LoggingConfigurationState] = js.undefined
  
  /**
    * Tags to attach to the resource. Array of maps, each of the form string:string (key:value). See Tagging AWS Resources for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS Chat has no constraints on tags beyond what is documented there.
    */
  var tags: js.UndefOr[Tags] = js.undefined
  
  /**
    * Time of the logging configurationâ€™s last update. This is an ISO 8601 timestamp; note that this is returned as a string.
    */
  var updateTime: js.UndefOr[js.Date] = js.undefined
}
object LoggingConfigurationSummary {
  
  inline def apply(): LoggingConfigurationSummary = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[LoggingConfigurationSummary]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: LoggingConfigurationSummary] (val x: Self) extends AnyVal {
    
    inline def setArn(value: LoggingConfigurationArn): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
    
    inline def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
    
    inline def setCreateTime(value: js.Date): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    inline def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    inline def setDestinationConfiguration(value: DestinationConfiguration): Self = StObject.set(x, "destinationConfiguration", value.asInstanceOf[js.Any])
    
    inline def setDestinationConfigurationUndefined: Self = StObject.set(x, "destinationConfiguration", js.undefined)
    
    inline def setId(value: LoggingConfigurationID): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setName(value: LoggingConfigurationName): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setState(value: LoggingConfigurationState): Self = StObject.set(x, "state", value.asInstanceOf[js.Any])
    
    inline def setStateUndefined: Self = StObject.set(x, "state", js.undefined)
    
    inline def setTags(value: Tags): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    inline def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    inline def setUpdateTime(value: js.Date): Self = StObject.set(x, "updateTime", value.asInstanceOf[js.Any])
    
    inline def setUpdateTimeUndefined: Self = StObject.set(x, "updateTime", js.undefined)
  }
}
