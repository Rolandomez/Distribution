package typings.awsSdk.clientsMediaconnectMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait GatewayInstance extends StObject {
  
  /**
    * The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be added to this instance.
    */
  var BridgePlacement: typings.awsSdk.clientsMediaconnectMod.BridgePlacement
  
  /**
    * The connection state of the instance.
    */
  var ConnectionStatus: typings.awsSdk.clientsMediaconnectMod.ConnectionStatus
  
  /**
    * The Amazon Resource Name (ARN) of the instance.
    */
  var GatewayArn: string
  
  /**
    * The Amazon Resource Name (ARN) of the gateway.
    */
  var GatewayInstanceArn: string
  
  /**
    * The managed instance ID generated by the SSM install. This will begin with "mi-".
    */
  var InstanceId: string
  
  var InstanceMessages: js.UndefOr[listOfMessageDetail] = js.undefined
  
  /**
    * The status of the instance.
    */
  var InstanceState: typings.awsSdk.clientsMediaconnectMod.InstanceState
  
  /**
    * The running bridge count.
    */
  var RunningBridgeCount: integer
}
object GatewayInstance {
  
  inline def apply(
    BridgePlacement: BridgePlacement,
    ConnectionStatus: ConnectionStatus,
    GatewayArn: string,
    GatewayInstanceArn: string,
    InstanceId: string,
    InstanceState: InstanceState,
    RunningBridgeCount: integer
  ): GatewayInstance = {
    val __obj = js.Dynamic.literal(BridgePlacement = BridgePlacement.asInstanceOf[js.Any], ConnectionStatus = ConnectionStatus.asInstanceOf[js.Any], GatewayArn = GatewayArn.asInstanceOf[js.Any], GatewayInstanceArn = GatewayInstanceArn.asInstanceOf[js.Any], InstanceId = InstanceId.asInstanceOf[js.Any], InstanceState = InstanceState.asInstanceOf[js.Any], RunningBridgeCount = RunningBridgeCount.asInstanceOf[js.Any])
    __obj.asInstanceOf[GatewayInstance]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: GatewayInstance] (val x: Self) extends AnyVal {
    
    inline def setBridgePlacement(value: BridgePlacement): Self = StObject.set(x, "BridgePlacement", value.asInstanceOf[js.Any])
    
    inline def setConnectionStatus(value: ConnectionStatus): Self = StObject.set(x, "ConnectionStatus", value.asInstanceOf[js.Any])
    
    inline def setGatewayArn(value: string): Self = StObject.set(x, "GatewayArn", value.asInstanceOf[js.Any])
    
    inline def setGatewayInstanceArn(value: string): Self = StObject.set(x, "GatewayInstanceArn", value.asInstanceOf[js.Any])
    
    inline def setInstanceId(value: string): Self = StObject.set(x, "InstanceId", value.asInstanceOf[js.Any])
    
    inline def setInstanceMessages(value: listOfMessageDetail): Self = StObject.set(x, "InstanceMessages", value.asInstanceOf[js.Any])
    
    inline def setInstanceMessagesUndefined: Self = StObject.set(x, "InstanceMessages", js.undefined)
    
    inline def setInstanceMessagesVarargs(value: MessageDetail*): Self = StObject.set(x, "InstanceMessages", js.Array(value*))
    
    inline def setInstanceState(value: InstanceState): Self = StObject.set(x, "InstanceState", value.asInstanceOf[js.Any])
    
    inline def setRunningBridgeCount(value: integer): Self = StObject.set(x, "RunningBridgeCount", value.asInstanceOf[js.Any])
  }
}
