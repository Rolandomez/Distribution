package typings.octokitPluginRestEndpointMethods.anon

import typings.octokitPluginRestEndpointMethods.octokitPluginRestEndpointMethodsStrings.baseUrl
import typings.octokitPluginRestEndpointMethods.octokitPluginRestEndpointMethodsStrings.headers
import typings.octokitPluginRestEndpointMethods.octokitPluginRestEndpointMethodsStrings.mediaType
import typings.octokitTypes.distTypesRequestParametersMod.RequestParameters
import typings.std.Omit
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait CreatePrivateVulnerabilityReport extends StObject {
  
  /**
    * Report a security vulnerability to the maintainers of the repository.
    * See "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)" for more information about private vulnerability reporting.
    */
  def createPrivateVulnerabilityReport(): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['POST /repos/{owner}/{repo}/security-advisories/reports']['response'] */ js.Any
  ]
  def createPrivateVulnerabilityReport(
    params: RequestParameters & (Omit[
      /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['POST /repos/{owner}/{repo}/security-advisories/reports']['parameters'] */ js.Any, 
      baseUrl | headers | mediaType
    ])
  ): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['POST /repos/{owner}/{repo}/security-advisories/reports']['response'] */ js.Any
  ]
  /**
    * Report a security vulnerability to the maintainers of the repository.
    * See "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)" for more information about private vulnerability reporting.
    */
  @JSName("createPrivateVulnerabilityReport")
  var createPrivateVulnerabilityReport_Original: `765`
  
  /**
    * Creates a new repository security advisory.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.
    *
    * In order to create a draft repository security advisory, you must be a security manager or administrator of that repository.
    */
  def createRepositoryAdvisory(): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['POST /repos/{owner}/{repo}/security-advisories']['response'] */ js.Any
  ]
  def createRepositoryAdvisory(
    params: RequestParameters & (Omit[
      /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['POST /repos/{owner}/{repo}/security-advisories']['parameters'] */ js.Any, 
      baseUrl | headers | mediaType
    ])
  ): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['POST /repos/{owner}/{repo}/security-advisories']['response'] */ js.Any
  ]
  /**
    * Creates a new repository security advisory.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.
    *
    * In order to create a draft repository security advisory, you must be a security manager or administrator of that repository.
    */
  @JSName("createRepositoryAdvisory")
  var createRepositoryAdvisory_Original: `766`
  
  /**
    * Get a repository security advisory using its GitHub Security Advisory (GHSA) identifier.
    * You can access any published security advisory on a public repository.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:read` permission
    * in order to get a published security advisory in a private repository, or any unpublished security advisory that you have access to.
    *
    * You can access an unpublished security advisory from a repository if you are a security manager or administrator of that repository, or if you are a
    * collaborator on the security advisory.
    */
  def getRepositoryAdvisory(): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}']['response'] */ js.Any
  ]
  def getRepositoryAdvisory(
    params: RequestParameters & (Omit[
      /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}']['parameters'] */ js.Any, 
      baseUrl | headers | mediaType
    ])
  ): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}']['response'] */ js.Any
  ]
  /**
    * Get a repository security advisory using its GitHub Security Advisory (GHSA) identifier.
    * You can access any published security advisory on a public repository.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:read` permission
    * in order to get a published security advisory in a private repository, or any unpublished security advisory that you have access to.
    *
    * You can access an unpublished security advisory from a repository if you are a security manager or administrator of that repository, or if you are a
    * collaborator on the security advisory.
    */
  @JSName("getRepositoryAdvisory")
  var getRepositoryAdvisory_Original: `767`
  
  /**
    * Lists security advisories in a repository.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:read` permission
    * in order to get published security advisories in a private repository, or any unpublished security advisories that you have access to.
    *
    * You can access unpublished security advisories from a repository if you are a security manager or administrator of that repository, or if you are a collaborator on any security advisory.
    */
  def listRepositoryAdvisories(): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['GET /repos/{owner}/{repo}/security-advisories']['response'] */ js.Any
  ]
  def listRepositoryAdvisories(
    params: RequestParameters & (Omit[
      /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['GET /repos/{owner}/{repo}/security-advisories']['parameters'] */ js.Any, 
      baseUrl | headers | mediaType
    ])
  ): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['GET /repos/{owner}/{repo}/security-advisories']['response'] */ js.Any
  ]
  /**
    * Lists security advisories in a repository.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:read` permission
    * in order to get published security advisories in a private repository, or any unpublished security advisories that you have access to.
    *
    * You can access unpublished security advisories from a repository if you are a security manager or administrator of that repository, or if you are a collaborator on any security advisory.
    */
  @JSName("listRepositoryAdvisories")
  var listRepositoryAdvisories_Original: `768`
  
  /**
    * Update a repository security advisory using its GitHub Security Advisory (GHSA) identifier.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.
    *
    * In order to update any security advisory, you must be a security manager or administrator of that repository,
    * or a collaborator on the repository security advisory.
    */
  def updateRepositoryAdvisory(): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}']['response'] */ js.Any
  ]
  def updateRepositoryAdvisory(
    params: RequestParameters & (Omit[
      /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}']['parameters'] */ js.Any, 
      baseUrl | headers | mediaType
    ])
  ): js.Promise[
    /* import warning: importer.ImportType#apply Failed type conversion: @octokit/types.@octokit/types/dist-types/generated/Endpoints.Endpoints['PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}']['response'] */ js.Any
  ]
  /**
    * Update a repository security advisory using its GitHub Security Advisory (GHSA) identifier.
    * You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.
    *
    * In order to update any security advisory, you must be a security manager or administrator of that repository,
    * or a collaborator on the repository security advisory.
    */
  @JSName("updateRepositoryAdvisory")
  var updateRepositoryAdvisory_Original: `769`
}
object CreatePrivateVulnerabilityReport {
  
  inline def apply(
    createPrivateVulnerabilityReport: `765`,
    createRepositoryAdvisory: `766`,
    getRepositoryAdvisory: `767`,
    listRepositoryAdvisories: `768`,
    updateRepositoryAdvisory: `769`
  ): CreatePrivateVulnerabilityReport = {
    val __obj = js.Dynamic.literal(createPrivateVulnerabilityReport = createPrivateVulnerabilityReport.asInstanceOf[js.Any], createRepositoryAdvisory = createRepositoryAdvisory.asInstanceOf[js.Any], getRepositoryAdvisory = getRepositoryAdvisory.asInstanceOf[js.Any], listRepositoryAdvisories = listRepositoryAdvisories.asInstanceOf[js.Any], updateRepositoryAdvisory = updateRepositoryAdvisory.asInstanceOf[js.Any])
    __obj.asInstanceOf[CreatePrivateVulnerabilityReport]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: CreatePrivateVulnerabilityReport] (val x: Self) extends AnyVal {
    
    inline def setCreatePrivateVulnerabilityReport(value: `765`): Self = StObject.set(x, "createPrivateVulnerabilityReport", value.asInstanceOf[js.Any])
    
    inline def setCreateRepositoryAdvisory(value: `766`): Self = StObject.set(x, "createRepositoryAdvisory", value.asInstanceOf[js.Any])
    
    inline def setGetRepositoryAdvisory(value: `767`): Self = StObject.set(x, "getRepositoryAdvisory", value.asInstanceOf[js.Any])
    
    inline def setListRepositoryAdvisories(value: `768`): Self = StObject.set(x, "listRepositoryAdvisories", value.asInstanceOf[js.Any])
    
    inline def setUpdateRepositoryAdvisory(value: `769`): Self = StObject.set(x, "updateRepositoryAdvisory", value.asInstanceOf[js.Any])
  }
}
