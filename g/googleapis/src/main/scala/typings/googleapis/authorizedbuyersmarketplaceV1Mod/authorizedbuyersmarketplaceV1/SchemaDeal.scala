package typings.googleapis.authorizedbuyersmarketplaceV1Mod.authorizedbuyersmarketplaceV1

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaDeal extends StObject {
  
  /**
    * Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : `buyers/{buyerAccountId\}`
    */
  var billedBuyer: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Refers to a buyer in The Realtime-bidding API. Format: `buyers/{buyerAccountId\}`
    */
  var buyer: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Refers to a Client. Format: `buyers/{buyerAccountId\}/clients/{clientAccountid\}`
    */
  var client: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. The time of the deal creation.
    */
  var createTime: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Metadata about the creatives of this deal.
    */
  var creativeRequirements: js.UndefOr[SchemaCreativeRequirements] = js.undefined
  
  /**
    * Output only. Type of deal.
    */
  var dealType: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Specifies the pacing set by the publisher.
    */
  var deliveryControl: js.UndefOr[SchemaDeliveryControl] = js.undefined
  
  /**
    * Output only. Free text description for the deal terms.
    */
  var description: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. The name of the deal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the deal.
    */
  var displayName: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Specified by buyers in request for proposal (RFP) to notify publisher the total estimated spend for the proposal. Publishers will receive this information and send back proposed deals accordingly.
    */
  var estimatedGrossSpend: js.UndefOr[SchemaMoney] = js.undefined
  
  /**
    * Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not necessary for Private Auction deals.
    */
  var flightEndTime: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.
    */
  var flightStartTime: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId\}/proposals/{proposalId\}/deals/{dealId\}
    */
  var name: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The terms for preferred deals.
    */
  var preferredDealTerms: js.UndefOr[SchemaPreferredDealTerms] = js.undefined
  
  /**
    * The terms for private auction deals.
    */
  var privateAuctionTerms: js.UndefOr[SchemaPrivateAuctionTerms] = js.undefined
  
  /**
    * The terms for programmatic guaranteed deals.
    */
  var programmaticGuaranteedTerms: js.UndefOr[SchemaProgrammaticGuaranteedTerms] = js.undefined
  
  /**
    * Output only. The revision number for the proposal and is the same value as proposal.proposal_revision. Each update to deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.
    */
  var proposalRevision: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Immutable. Reference to the seller on the deal. Format: `buyers/{buyerAccountId\}/publisherProfiles/{publisherProfileId\}`
    */
  var publisherProfile: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Time zone of the seller used to mark the boundaries of a day for daypart targeting and CPD billing.
    */
  var sellerTimeZone: js.UndefOr[SchemaTimeZone] = js.undefined
  
  /**
    * Specifies the subset of inventory targeted by the deal. Can be updated by the buyer before the deal is finalized.
    */
  var targeting: js.UndefOr[SchemaMarketplaceTargeting] = js.undefined
  
  /**
    * Output only. The time when the deal was last updated.
    */
  var updateTime: js.UndefOr[String | Null] = js.undefined
}
object SchemaDeal {
  
  inline def apply(): SchemaDeal = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaDeal]
  }
  
  extension [Self <: SchemaDeal](x: Self) {
    
    inline def setBilledBuyer(value: String): Self = StObject.set(x, "billedBuyer", value.asInstanceOf[js.Any])
    
    inline def setBilledBuyerNull: Self = StObject.set(x, "billedBuyer", null)
    
    inline def setBilledBuyerUndefined: Self = StObject.set(x, "billedBuyer", js.undefined)
    
    inline def setBuyer(value: String): Self = StObject.set(x, "buyer", value.asInstanceOf[js.Any])
    
    inline def setBuyerNull: Self = StObject.set(x, "buyer", null)
    
    inline def setBuyerUndefined: Self = StObject.set(x, "buyer", js.undefined)
    
    inline def setClient(value: String): Self = StObject.set(x, "client", value.asInstanceOf[js.Any])
    
    inline def setClientNull: Self = StObject.set(x, "client", null)
    
    inline def setClientUndefined: Self = StObject.set(x, "client", js.undefined)
    
    inline def setCreateTime(value: String): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    inline def setCreateTimeNull: Self = StObject.set(x, "createTime", null)
    
    inline def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    inline def setCreativeRequirements(value: SchemaCreativeRequirements): Self = StObject.set(x, "creativeRequirements", value.asInstanceOf[js.Any])
    
    inline def setCreativeRequirementsUndefined: Self = StObject.set(x, "creativeRequirements", js.undefined)
    
    inline def setDealType(value: String): Self = StObject.set(x, "dealType", value.asInstanceOf[js.Any])
    
    inline def setDealTypeNull: Self = StObject.set(x, "dealType", null)
    
    inline def setDealTypeUndefined: Self = StObject.set(x, "dealType", js.undefined)
    
    inline def setDeliveryControl(value: SchemaDeliveryControl): Self = StObject.set(x, "deliveryControl", value.asInstanceOf[js.Any])
    
    inline def setDeliveryControlUndefined: Self = StObject.set(x, "deliveryControl", js.undefined)
    
    inline def setDescription(value: String): Self = StObject.set(x, "description", value.asInstanceOf[js.Any])
    
    inline def setDescriptionNull: Self = StObject.set(x, "description", null)
    
    inline def setDescriptionUndefined: Self = StObject.set(x, "description", js.undefined)
    
    inline def setDisplayName(value: String): Self = StObject.set(x, "displayName", value.asInstanceOf[js.Any])
    
    inline def setDisplayNameNull: Self = StObject.set(x, "displayName", null)
    
    inline def setDisplayNameUndefined: Self = StObject.set(x, "displayName", js.undefined)
    
    inline def setEstimatedGrossSpend(value: SchemaMoney): Self = StObject.set(x, "estimatedGrossSpend", value.asInstanceOf[js.Any])
    
    inline def setEstimatedGrossSpendUndefined: Self = StObject.set(x, "estimatedGrossSpend", js.undefined)
    
    inline def setFlightEndTime(value: String): Self = StObject.set(x, "flightEndTime", value.asInstanceOf[js.Any])
    
    inline def setFlightEndTimeNull: Self = StObject.set(x, "flightEndTime", null)
    
    inline def setFlightEndTimeUndefined: Self = StObject.set(x, "flightEndTime", js.undefined)
    
    inline def setFlightStartTime(value: String): Self = StObject.set(x, "flightStartTime", value.asInstanceOf[js.Any])
    
    inline def setFlightStartTimeNull: Self = StObject.set(x, "flightStartTime", null)
    
    inline def setFlightStartTimeUndefined: Self = StObject.set(x, "flightStartTime", js.undefined)
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameNull: Self = StObject.set(x, "name", null)
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setPreferredDealTerms(value: SchemaPreferredDealTerms): Self = StObject.set(x, "preferredDealTerms", value.asInstanceOf[js.Any])
    
    inline def setPreferredDealTermsUndefined: Self = StObject.set(x, "preferredDealTerms", js.undefined)
    
    inline def setPrivateAuctionTerms(value: SchemaPrivateAuctionTerms): Self = StObject.set(x, "privateAuctionTerms", value.asInstanceOf[js.Any])
    
    inline def setPrivateAuctionTermsUndefined: Self = StObject.set(x, "privateAuctionTerms", js.undefined)
    
    inline def setProgrammaticGuaranteedTerms(value: SchemaProgrammaticGuaranteedTerms): Self = StObject.set(x, "programmaticGuaranteedTerms", value.asInstanceOf[js.Any])
    
    inline def setProgrammaticGuaranteedTermsUndefined: Self = StObject.set(x, "programmaticGuaranteedTerms", js.undefined)
    
    inline def setProposalRevision(value: String): Self = StObject.set(x, "proposalRevision", value.asInstanceOf[js.Any])
    
    inline def setProposalRevisionNull: Self = StObject.set(x, "proposalRevision", null)
    
    inline def setProposalRevisionUndefined: Self = StObject.set(x, "proposalRevision", js.undefined)
    
    inline def setPublisherProfile(value: String): Self = StObject.set(x, "publisherProfile", value.asInstanceOf[js.Any])
    
    inline def setPublisherProfileNull: Self = StObject.set(x, "publisherProfile", null)
    
    inline def setPublisherProfileUndefined: Self = StObject.set(x, "publisherProfile", js.undefined)
    
    inline def setSellerTimeZone(value: SchemaTimeZone): Self = StObject.set(x, "sellerTimeZone", value.asInstanceOf[js.Any])
    
    inline def setSellerTimeZoneUndefined: Self = StObject.set(x, "sellerTimeZone", js.undefined)
    
    inline def setTargeting(value: SchemaMarketplaceTargeting): Self = StObject.set(x, "targeting", value.asInstanceOf[js.Any])
    
    inline def setTargetingUndefined: Self = StObject.set(x, "targeting", js.undefined)
    
    inline def setUpdateTime(value: String): Self = StObject.set(x, "updateTime", value.asInstanceOf[js.Any])
    
    inline def setUpdateTimeNull: Self = StObject.set(x, "updateTime", null)
    
    inline def setUpdateTimeUndefined: Self = StObject.set(x, "updateTime", js.undefined)
  }
}
