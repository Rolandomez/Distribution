package typings.googleapis.documentaiV1beta3Mod.documentaiV1beta3

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaGoogleCloudDocumentaiUiv1beta3RevisionReference extends StObject {
  
  /**
    * Read the revision generated by the processor version, returns error if it does not exist.
    */
  var latestProcessorVersion: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Read the revision by the predefined case.
    */
  var revisionCase: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Read the revision given by the id, returns error if it does not exist.
    */
  var revisionId: js.UndefOr[String | Null] = js.undefined
}
object SchemaGoogleCloudDocumentaiUiv1beta3RevisionReference {
  
  inline def apply(): SchemaGoogleCloudDocumentaiUiv1beta3RevisionReference = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaGoogleCloudDocumentaiUiv1beta3RevisionReference]
  }
  
  extension [Self <: SchemaGoogleCloudDocumentaiUiv1beta3RevisionReference](x: Self) {
    
    inline def setLatestProcessorVersion(value: String): Self = StObject.set(x, "latestProcessorVersion", value.asInstanceOf[js.Any])
    
    inline def setLatestProcessorVersionNull: Self = StObject.set(x, "latestProcessorVersion", null)
    
    inline def setLatestProcessorVersionUndefined: Self = StObject.set(x, "latestProcessorVersion", js.undefined)
    
    inline def setRevisionCase(value: String): Self = StObject.set(x, "revisionCase", value.asInstanceOf[js.Any])
    
    inline def setRevisionCaseNull: Self = StObject.set(x, "revisionCase", null)
    
    inline def setRevisionCaseUndefined: Self = StObject.set(x, "revisionCase", js.undefined)
    
    inline def setRevisionId(value: String): Self = StObject.set(x, "revisionId", value.asInstanceOf[js.Any])
    
    inline def setRevisionIdNull: Self = StObject.set(x, "revisionId", null)
    
    inline def setRevisionIdUndefined: Self = StObject.set(x, "revisionId", js.undefined)
  }
}
