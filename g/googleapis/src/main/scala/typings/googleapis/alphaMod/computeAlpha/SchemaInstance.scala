package typings.googleapis.alphaMod.computeAlpha

import org.scalablytyped.runtime.StringDictionary
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaInstance extends StObject {
  
  /**
    * Controls for advanced machine-related behavior features.
    */
  var advancedMachineFeatures: js.UndefOr[SchemaAdvancedMachineFeatures] = js.undefined
  
  /**
    * Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
    */
  var canIpForward: js.UndefOr[Boolean | Null] = js.undefined
  
  var confidentialInstanceConfig: js.UndefOr[SchemaConfidentialInstanceConfig] = js.undefined
  
  /**
    * [Output Only] The CPU platform used by this instance.
    */
  var cpuPlatform: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] Creation timestamp in RFC3339 text format.
    */
  var creationTimestamp: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Whether the resource should be protected against deletion.
    */
  var deletionProtection: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * An optional description of this resource. Provide this property when you create the resource.
    */
  var description: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Array of disks associated with this instance. Persistent disks must be created before you can assign them.
    */
  var disks: js.UndefOr[js.Array[SchemaAttachedDisk]] = js.undefined
  
  /**
    * Enables display device for the instance.
    */
  var displayDevice: js.UndefOr[SchemaDisplayDevice] = js.undefined
  
  /**
    * Specifies whether the disks restored from source snapshots or source machine image should erase Windows specific VSS signature.
    */
  var eraseWindowsVssSignature: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
    */
  var fingerprint: js.UndefOr[String | Null] = js.undefined
  
  /**
    * A list of the type and count of accelerator cards attached to the instance.
    */
  var guestAccelerators: js.UndefOr[js.Array[SchemaAcceleratorConfig]] = js.undefined
  
  /**
    * Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
    */
  var hostname: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    */
  var id: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Encrypts or decrypts data for an instance with a customer-supplied encryption key. If you are creating a new instance, this field encrypts the local SSD and in-memory contents of the instance using a key that you provide. If you are restarting an instance protected with a customer-supplied encryption key, you must provide the correct key in order to successfully restart the instance. If you do not provide an encryption key when creating the instance, then the local SSD and in-memory contents will be encrypted using an automatically generated key and you do not need to provide a key to start the instance later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt local SSDs and in-memory content in a managed instance group.
    */
  var instanceEncryptionKey: js.UndefOr[SchemaCustomerEncryptionKey] = js.undefined
  
  /**
    * KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
    */
  var keyRevocationActionType: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] Type of the resource. Always compute#instance for instances.
    */
  var kind: js.UndefOr[String | Null] = js.undefined
  
  /**
    * A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
    */
  var labelFingerprint: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Labels to apply to this instance. These can be later modified by the setLabels method.
    */
  var labels: js.UndefOr[StringDictionary[String] | Null] = js.undefined
  
  /**
    * [Output Only] Last start timestamp in RFC3339 text format.
    */
  var lastStartTimestamp: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] Last stop timestamp in RFC3339 text format.
    */
  var lastStopTimestamp: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] Last suspended timestamp in RFC3339 text format.
    */
  var lastSuspendedTimestamp: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
    */
  var machineType: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
    */
  var metadata: js.UndefOr[SchemaMetadata] = js.undefined
  
  /**
    * Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
    */
  var minCpuPlatform: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    */
  var name: js.UndefOr[String | Null] = js.undefined
  
  /**
    * An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
    */
  var networkInterfaces: js.UndefOr[js.Array[SchemaNetworkInterface]] = js.undefined
  
  var networkPerformanceConfig: js.UndefOr[SchemaNetworkPerformanceConfig] = js.undefined
  
  /**
    * Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
    */
  var params: js.UndefOr[SchemaInstanceParams] = js.undefined
  
  /**
    * PostKeyRevocationActionType of the instance.
    */
  var postKeyRevocationActionType: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Total amount of preserved state for SUSPENDED instances. Read-only in the api.
    */
  var preservedStateSizeGb: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
    */
  var privateIpv6GoogleAccess: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Specifies the reservations that this instance can consume from.
    */
  var reservationAffinity: js.UndefOr[SchemaReservationAffinity] = js.undefined
  
  /**
    * Resource policies applied to this instance.
    */
  var resourcePolicies: js.UndefOr[js.Array[String] | Null] = js.undefined
  
  /**
    * [Output Only] Specifies values set for instance attributes as compared to the values requested by user in the corresponding input only field.
    */
  var resourceStatus: js.UndefOr[SchemaResourceStatus] = js.undefined
  
  /**
    * [Output Only] Reserved for future use.
    */
  var satisfiesPzs: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * Sets the scheduling options for this instance.
    */
  var scheduling: js.UndefOr[SchemaScheduling] = js.undefined
  
  /**
    * [Input Only] Secure tags to apply to this instance. These can be later modified by the update method. Maximum number of secure tags allowed is 50.
    */
  var secureTags: js.UndefOr[js.Array[String] | Null] = js.undefined
  
  /**
    * [Output Only] Server-defined URL for this resource.
    */
  var selfLink: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] Server-defined URL for this resource with the resource id.
    */
  var selfLinkWithId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
    */
  var serviceAccounts: js.UndefOr[js.Array[SchemaServiceAccount]] = js.undefined
  
  var shieldedInstanceConfig: js.UndefOr[SchemaShieldedInstanceConfig] = js.undefined
  
  var shieldedInstanceIntegrityPolicy: js.UndefOr[SchemaShieldedInstanceIntegrityPolicy] = js.undefined
  
  /**
    * Deprecating, please use shielded_instance_config.
    */
  var shieldedVmConfig: js.UndefOr[SchemaShieldedVmConfig] = js.undefined
  
  /**
    * Deprecating, please use shielded_instance_integrity_policy.
    */
  var shieldedVmIntegrityPolicy: js.UndefOr[SchemaShieldedVmIntegrityPolicy] = js.undefined
  
  /**
    * Source machine image
    */
  var sourceMachineImage: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Source machine image encryption key when creating an instance from a machine image.
    */
  var sourceMachineImageEncryptionKey: js.UndefOr[SchemaCustomerEncryptionKey] = js.undefined
  
  /**
    * [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
    */
  var startRestricted: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
    */
  var status: js.UndefOr[String | Null] = js.undefined
  
  /**
    * [Output Only] An optional, human-readable explanation of the status.
    */
  var statusMessage: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the 'tags.items' field.
    */
  var tags: js.UndefOr[SchemaTags] = js.undefined
  
  /**
    * [Output Only] Specifies upcoming maintenance for the instance.
    */
  var upcomingMaintenance: js.UndefOr[SchemaUpcomingMaintenance] = js.undefined
  
  /**
    * [Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
    */
  var zone: js.UndefOr[String | Null] = js.undefined
}
object SchemaInstance {
  
  inline def apply(): SchemaInstance = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaInstance]
  }
  
  extension [Self <: SchemaInstance](x: Self) {
    
    inline def setAdvancedMachineFeatures(value: SchemaAdvancedMachineFeatures): Self = StObject.set(x, "advancedMachineFeatures", value.asInstanceOf[js.Any])
    
    inline def setAdvancedMachineFeaturesUndefined: Self = StObject.set(x, "advancedMachineFeatures", js.undefined)
    
    inline def setCanIpForward(value: Boolean): Self = StObject.set(x, "canIpForward", value.asInstanceOf[js.Any])
    
    inline def setCanIpForwardNull: Self = StObject.set(x, "canIpForward", null)
    
    inline def setCanIpForwardUndefined: Self = StObject.set(x, "canIpForward", js.undefined)
    
    inline def setConfidentialInstanceConfig(value: SchemaConfidentialInstanceConfig): Self = StObject.set(x, "confidentialInstanceConfig", value.asInstanceOf[js.Any])
    
    inline def setConfidentialInstanceConfigUndefined: Self = StObject.set(x, "confidentialInstanceConfig", js.undefined)
    
    inline def setCpuPlatform(value: String): Self = StObject.set(x, "cpuPlatform", value.asInstanceOf[js.Any])
    
    inline def setCpuPlatformNull: Self = StObject.set(x, "cpuPlatform", null)
    
    inline def setCpuPlatformUndefined: Self = StObject.set(x, "cpuPlatform", js.undefined)
    
    inline def setCreationTimestamp(value: String): Self = StObject.set(x, "creationTimestamp", value.asInstanceOf[js.Any])
    
    inline def setCreationTimestampNull: Self = StObject.set(x, "creationTimestamp", null)
    
    inline def setCreationTimestampUndefined: Self = StObject.set(x, "creationTimestamp", js.undefined)
    
    inline def setDeletionProtection(value: Boolean): Self = StObject.set(x, "deletionProtection", value.asInstanceOf[js.Any])
    
    inline def setDeletionProtectionNull: Self = StObject.set(x, "deletionProtection", null)
    
    inline def setDeletionProtectionUndefined: Self = StObject.set(x, "deletionProtection", js.undefined)
    
    inline def setDescription(value: String): Self = StObject.set(x, "description", value.asInstanceOf[js.Any])
    
    inline def setDescriptionNull: Self = StObject.set(x, "description", null)
    
    inline def setDescriptionUndefined: Self = StObject.set(x, "description", js.undefined)
    
    inline def setDisks(value: js.Array[SchemaAttachedDisk]): Self = StObject.set(x, "disks", value.asInstanceOf[js.Any])
    
    inline def setDisksUndefined: Self = StObject.set(x, "disks", js.undefined)
    
    inline def setDisksVarargs(value: SchemaAttachedDisk*): Self = StObject.set(x, "disks", js.Array(value*))
    
    inline def setDisplayDevice(value: SchemaDisplayDevice): Self = StObject.set(x, "displayDevice", value.asInstanceOf[js.Any])
    
    inline def setDisplayDeviceUndefined: Self = StObject.set(x, "displayDevice", js.undefined)
    
    inline def setEraseWindowsVssSignature(value: Boolean): Self = StObject.set(x, "eraseWindowsVssSignature", value.asInstanceOf[js.Any])
    
    inline def setEraseWindowsVssSignatureNull: Self = StObject.set(x, "eraseWindowsVssSignature", null)
    
    inline def setEraseWindowsVssSignatureUndefined: Self = StObject.set(x, "eraseWindowsVssSignature", js.undefined)
    
    inline def setFingerprint(value: String): Self = StObject.set(x, "fingerprint", value.asInstanceOf[js.Any])
    
    inline def setFingerprintNull: Self = StObject.set(x, "fingerprint", null)
    
    inline def setFingerprintUndefined: Self = StObject.set(x, "fingerprint", js.undefined)
    
    inline def setGuestAccelerators(value: js.Array[SchemaAcceleratorConfig]): Self = StObject.set(x, "guestAccelerators", value.asInstanceOf[js.Any])
    
    inline def setGuestAcceleratorsUndefined: Self = StObject.set(x, "guestAccelerators", js.undefined)
    
    inline def setGuestAcceleratorsVarargs(value: SchemaAcceleratorConfig*): Self = StObject.set(x, "guestAccelerators", js.Array(value*))
    
    inline def setHostname(value: String): Self = StObject.set(x, "hostname", value.asInstanceOf[js.Any])
    
    inline def setHostnameNull: Self = StObject.set(x, "hostname", null)
    
    inline def setHostnameUndefined: Self = StObject.set(x, "hostname", js.undefined)
    
    inline def setId(value: String): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdNull: Self = StObject.set(x, "id", null)
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setInstanceEncryptionKey(value: SchemaCustomerEncryptionKey): Self = StObject.set(x, "instanceEncryptionKey", value.asInstanceOf[js.Any])
    
    inline def setInstanceEncryptionKeyUndefined: Self = StObject.set(x, "instanceEncryptionKey", js.undefined)
    
    inline def setKeyRevocationActionType(value: String): Self = StObject.set(x, "keyRevocationActionType", value.asInstanceOf[js.Any])
    
    inline def setKeyRevocationActionTypeNull: Self = StObject.set(x, "keyRevocationActionType", null)
    
    inline def setKeyRevocationActionTypeUndefined: Self = StObject.set(x, "keyRevocationActionType", js.undefined)
    
    inline def setKind(value: String): Self = StObject.set(x, "kind", value.asInstanceOf[js.Any])
    
    inline def setKindNull: Self = StObject.set(x, "kind", null)
    
    inline def setKindUndefined: Self = StObject.set(x, "kind", js.undefined)
    
    inline def setLabelFingerprint(value: String): Self = StObject.set(x, "labelFingerprint", value.asInstanceOf[js.Any])
    
    inline def setLabelFingerprintNull: Self = StObject.set(x, "labelFingerprint", null)
    
    inline def setLabelFingerprintUndefined: Self = StObject.set(x, "labelFingerprint", js.undefined)
    
    inline def setLabels(value: StringDictionary[String]): Self = StObject.set(x, "labels", value.asInstanceOf[js.Any])
    
    inline def setLabelsNull: Self = StObject.set(x, "labels", null)
    
    inline def setLabelsUndefined: Self = StObject.set(x, "labels", js.undefined)
    
    inline def setLastStartTimestamp(value: String): Self = StObject.set(x, "lastStartTimestamp", value.asInstanceOf[js.Any])
    
    inline def setLastStartTimestampNull: Self = StObject.set(x, "lastStartTimestamp", null)
    
    inline def setLastStartTimestampUndefined: Self = StObject.set(x, "lastStartTimestamp", js.undefined)
    
    inline def setLastStopTimestamp(value: String): Self = StObject.set(x, "lastStopTimestamp", value.asInstanceOf[js.Any])
    
    inline def setLastStopTimestampNull: Self = StObject.set(x, "lastStopTimestamp", null)
    
    inline def setLastStopTimestampUndefined: Self = StObject.set(x, "lastStopTimestamp", js.undefined)
    
    inline def setLastSuspendedTimestamp(value: String): Self = StObject.set(x, "lastSuspendedTimestamp", value.asInstanceOf[js.Any])
    
    inline def setLastSuspendedTimestampNull: Self = StObject.set(x, "lastSuspendedTimestamp", null)
    
    inline def setLastSuspendedTimestampUndefined: Self = StObject.set(x, "lastSuspendedTimestamp", js.undefined)
    
    inline def setMachineType(value: String): Self = StObject.set(x, "machineType", value.asInstanceOf[js.Any])
    
    inline def setMachineTypeNull: Self = StObject.set(x, "machineType", null)
    
    inline def setMachineTypeUndefined: Self = StObject.set(x, "machineType", js.undefined)
    
    inline def setMetadata(value: SchemaMetadata): Self = StObject.set(x, "metadata", value.asInstanceOf[js.Any])
    
    inline def setMetadataUndefined: Self = StObject.set(x, "metadata", js.undefined)
    
    inline def setMinCpuPlatform(value: String): Self = StObject.set(x, "minCpuPlatform", value.asInstanceOf[js.Any])
    
    inline def setMinCpuPlatformNull: Self = StObject.set(x, "minCpuPlatform", null)
    
    inline def setMinCpuPlatformUndefined: Self = StObject.set(x, "minCpuPlatform", js.undefined)
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameNull: Self = StObject.set(x, "name", null)
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setNetworkInterfaces(value: js.Array[SchemaNetworkInterface]): Self = StObject.set(x, "networkInterfaces", value.asInstanceOf[js.Any])
    
    inline def setNetworkInterfacesUndefined: Self = StObject.set(x, "networkInterfaces", js.undefined)
    
    inline def setNetworkInterfacesVarargs(value: SchemaNetworkInterface*): Self = StObject.set(x, "networkInterfaces", js.Array(value*))
    
    inline def setNetworkPerformanceConfig(value: SchemaNetworkPerformanceConfig): Self = StObject.set(x, "networkPerformanceConfig", value.asInstanceOf[js.Any])
    
    inline def setNetworkPerformanceConfigUndefined: Self = StObject.set(x, "networkPerformanceConfig", js.undefined)
    
    inline def setParams(value: SchemaInstanceParams): Self = StObject.set(x, "params", value.asInstanceOf[js.Any])
    
    inline def setParamsUndefined: Self = StObject.set(x, "params", js.undefined)
    
    inline def setPostKeyRevocationActionType(value: String): Self = StObject.set(x, "postKeyRevocationActionType", value.asInstanceOf[js.Any])
    
    inline def setPostKeyRevocationActionTypeNull: Self = StObject.set(x, "postKeyRevocationActionType", null)
    
    inline def setPostKeyRevocationActionTypeUndefined: Self = StObject.set(x, "postKeyRevocationActionType", js.undefined)
    
    inline def setPreservedStateSizeGb(value: String): Self = StObject.set(x, "preservedStateSizeGb", value.asInstanceOf[js.Any])
    
    inline def setPreservedStateSizeGbNull: Self = StObject.set(x, "preservedStateSizeGb", null)
    
    inline def setPreservedStateSizeGbUndefined: Self = StObject.set(x, "preservedStateSizeGb", js.undefined)
    
    inline def setPrivateIpv6GoogleAccess(value: String): Self = StObject.set(x, "privateIpv6GoogleAccess", value.asInstanceOf[js.Any])
    
    inline def setPrivateIpv6GoogleAccessNull: Self = StObject.set(x, "privateIpv6GoogleAccess", null)
    
    inline def setPrivateIpv6GoogleAccessUndefined: Self = StObject.set(x, "privateIpv6GoogleAccess", js.undefined)
    
    inline def setReservationAffinity(value: SchemaReservationAffinity): Self = StObject.set(x, "reservationAffinity", value.asInstanceOf[js.Any])
    
    inline def setReservationAffinityUndefined: Self = StObject.set(x, "reservationAffinity", js.undefined)
    
    inline def setResourcePolicies(value: js.Array[String]): Self = StObject.set(x, "resourcePolicies", value.asInstanceOf[js.Any])
    
    inline def setResourcePoliciesNull: Self = StObject.set(x, "resourcePolicies", null)
    
    inline def setResourcePoliciesUndefined: Self = StObject.set(x, "resourcePolicies", js.undefined)
    
    inline def setResourcePoliciesVarargs(value: String*): Self = StObject.set(x, "resourcePolicies", js.Array(value*))
    
    inline def setResourceStatus(value: SchemaResourceStatus): Self = StObject.set(x, "resourceStatus", value.asInstanceOf[js.Any])
    
    inline def setResourceStatusUndefined: Self = StObject.set(x, "resourceStatus", js.undefined)
    
    inline def setSatisfiesPzs(value: Boolean): Self = StObject.set(x, "satisfiesPzs", value.asInstanceOf[js.Any])
    
    inline def setSatisfiesPzsNull: Self = StObject.set(x, "satisfiesPzs", null)
    
    inline def setSatisfiesPzsUndefined: Self = StObject.set(x, "satisfiesPzs", js.undefined)
    
    inline def setScheduling(value: SchemaScheduling): Self = StObject.set(x, "scheduling", value.asInstanceOf[js.Any])
    
    inline def setSchedulingUndefined: Self = StObject.set(x, "scheduling", js.undefined)
    
    inline def setSecureTags(value: js.Array[String]): Self = StObject.set(x, "secureTags", value.asInstanceOf[js.Any])
    
    inline def setSecureTagsNull: Self = StObject.set(x, "secureTags", null)
    
    inline def setSecureTagsUndefined: Self = StObject.set(x, "secureTags", js.undefined)
    
    inline def setSecureTagsVarargs(value: String*): Self = StObject.set(x, "secureTags", js.Array(value*))
    
    inline def setSelfLink(value: String): Self = StObject.set(x, "selfLink", value.asInstanceOf[js.Any])
    
    inline def setSelfLinkNull: Self = StObject.set(x, "selfLink", null)
    
    inline def setSelfLinkUndefined: Self = StObject.set(x, "selfLink", js.undefined)
    
    inline def setSelfLinkWithId(value: String): Self = StObject.set(x, "selfLinkWithId", value.asInstanceOf[js.Any])
    
    inline def setSelfLinkWithIdNull: Self = StObject.set(x, "selfLinkWithId", null)
    
    inline def setSelfLinkWithIdUndefined: Self = StObject.set(x, "selfLinkWithId", js.undefined)
    
    inline def setServiceAccounts(value: js.Array[SchemaServiceAccount]): Self = StObject.set(x, "serviceAccounts", value.asInstanceOf[js.Any])
    
    inline def setServiceAccountsUndefined: Self = StObject.set(x, "serviceAccounts", js.undefined)
    
    inline def setServiceAccountsVarargs(value: SchemaServiceAccount*): Self = StObject.set(x, "serviceAccounts", js.Array(value*))
    
    inline def setShieldedInstanceConfig(value: SchemaShieldedInstanceConfig): Self = StObject.set(x, "shieldedInstanceConfig", value.asInstanceOf[js.Any])
    
    inline def setShieldedInstanceConfigUndefined: Self = StObject.set(x, "shieldedInstanceConfig", js.undefined)
    
    inline def setShieldedInstanceIntegrityPolicy(value: SchemaShieldedInstanceIntegrityPolicy): Self = StObject.set(x, "shieldedInstanceIntegrityPolicy", value.asInstanceOf[js.Any])
    
    inline def setShieldedInstanceIntegrityPolicyUndefined: Self = StObject.set(x, "shieldedInstanceIntegrityPolicy", js.undefined)
    
    inline def setShieldedVmConfig(value: SchemaShieldedVmConfig): Self = StObject.set(x, "shieldedVmConfig", value.asInstanceOf[js.Any])
    
    inline def setShieldedVmConfigUndefined: Self = StObject.set(x, "shieldedVmConfig", js.undefined)
    
    inline def setShieldedVmIntegrityPolicy(value: SchemaShieldedVmIntegrityPolicy): Self = StObject.set(x, "shieldedVmIntegrityPolicy", value.asInstanceOf[js.Any])
    
    inline def setShieldedVmIntegrityPolicyUndefined: Self = StObject.set(x, "shieldedVmIntegrityPolicy", js.undefined)
    
    inline def setSourceMachineImage(value: String): Self = StObject.set(x, "sourceMachineImage", value.asInstanceOf[js.Any])
    
    inline def setSourceMachineImageEncryptionKey(value: SchemaCustomerEncryptionKey): Self = StObject.set(x, "sourceMachineImageEncryptionKey", value.asInstanceOf[js.Any])
    
    inline def setSourceMachineImageEncryptionKeyUndefined: Self = StObject.set(x, "sourceMachineImageEncryptionKey", js.undefined)
    
    inline def setSourceMachineImageNull: Self = StObject.set(x, "sourceMachineImage", null)
    
    inline def setSourceMachineImageUndefined: Self = StObject.set(x, "sourceMachineImage", js.undefined)
    
    inline def setStartRestricted(value: Boolean): Self = StObject.set(x, "startRestricted", value.asInstanceOf[js.Any])
    
    inline def setStartRestrictedNull: Self = StObject.set(x, "startRestricted", null)
    
    inline def setStartRestrictedUndefined: Self = StObject.set(x, "startRestricted", js.undefined)
    
    inline def setStatus(value: String): Self = StObject.set(x, "status", value.asInstanceOf[js.Any])
    
    inline def setStatusMessage(value: String): Self = StObject.set(x, "statusMessage", value.asInstanceOf[js.Any])
    
    inline def setStatusMessageNull: Self = StObject.set(x, "statusMessage", null)
    
    inline def setStatusMessageUndefined: Self = StObject.set(x, "statusMessage", js.undefined)
    
    inline def setStatusNull: Self = StObject.set(x, "status", null)
    
    inline def setStatusUndefined: Self = StObject.set(x, "status", js.undefined)
    
    inline def setTags(value: SchemaTags): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    inline def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    inline def setUpcomingMaintenance(value: SchemaUpcomingMaintenance): Self = StObject.set(x, "upcomingMaintenance", value.asInstanceOf[js.Any])
    
    inline def setUpcomingMaintenanceUndefined: Self = StObject.set(x, "upcomingMaintenance", js.undefined)
    
    inline def setZone(value: String): Self = StObject.set(x, "zone", value.asInstanceOf[js.Any])
    
    inline def setZoneNull: Self = StObject.set(x, "zone", null)
    
    inline def setZoneUndefined: Self = StObject.set(x, "zone", js.undefined)
  }
}
