package typings.googleapis.v21Mod.contentV21

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaRepricingProductReport extends StObject {
  
  /**
    * Total count of Repricer applications. This value captures how many times the rule of this type was applied to this product during this reporting period.
    */
  var applicationCount: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Stats specific to buybox winning rules for product report (deprecated).
    */
  var buyboxWinningProductStats: js.UndefOr[SchemaRepricingProductReportBuyboxWinningProductStats] = js.undefined
  
  /**
    * Date of the stats in this report. The report starts and ends according to the merchant's timezone.
    */
  var date: js.UndefOr[SchemaDate] = js.undefined
  
  /**
    * Maximum displayed price after repriced during this reporting period.
    */
  var highWatermark: js.UndefOr[SchemaPriceAmount] = js.undefined
  
  /**
    * List of all reasons the rule did not apply to the product during the specified reporting period.
    */
  var inapplicabilityDetails: js.UndefOr[js.Array[SchemaInapplicabilityDetails]] = js.undefined
  
  /**
    * Minimum displayed price after repriced during this reporting period.
    */
  var lowWatermark: js.UndefOr[SchemaPriceAmount] = js.undefined
  
  /**
    * Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
    */
  var orderItemCount: js.UndefOr[Double | Null] = js.undefined
  
  /**
    * Ids of the Repricing rule for this report.
    */
  var ruleIds: js.UndefOr[js.Array[String] | Null] = js.undefined
  
  /**
    * Total GMV generated by impacted products while the rule was active on the date of the report. This value includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
    */
  var totalGmv: js.UndefOr[SchemaPriceAmount] = js.undefined
  
  /**
    * Type of the rule.
    */
  var `type`: js.UndefOr[String | Null] = js.undefined
}
object SchemaRepricingProductReport {
  
  inline def apply(): SchemaRepricingProductReport = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaRepricingProductReport]
  }
  
  extension [Self <: SchemaRepricingProductReport](x: Self) {
    
    inline def setApplicationCount(value: String): Self = StObject.set(x, "applicationCount", value.asInstanceOf[js.Any])
    
    inline def setApplicationCountNull: Self = StObject.set(x, "applicationCount", null)
    
    inline def setApplicationCountUndefined: Self = StObject.set(x, "applicationCount", js.undefined)
    
    inline def setBuyboxWinningProductStats(value: SchemaRepricingProductReportBuyboxWinningProductStats): Self = StObject.set(x, "buyboxWinningProductStats", value.asInstanceOf[js.Any])
    
    inline def setBuyboxWinningProductStatsUndefined: Self = StObject.set(x, "buyboxWinningProductStats", js.undefined)
    
    inline def setDate(value: SchemaDate): Self = StObject.set(x, "date", value.asInstanceOf[js.Any])
    
    inline def setDateUndefined: Self = StObject.set(x, "date", js.undefined)
    
    inline def setHighWatermark(value: SchemaPriceAmount): Self = StObject.set(x, "highWatermark", value.asInstanceOf[js.Any])
    
    inline def setHighWatermarkUndefined: Self = StObject.set(x, "highWatermark", js.undefined)
    
    inline def setInapplicabilityDetails(value: js.Array[SchemaInapplicabilityDetails]): Self = StObject.set(x, "inapplicabilityDetails", value.asInstanceOf[js.Any])
    
    inline def setInapplicabilityDetailsUndefined: Self = StObject.set(x, "inapplicabilityDetails", js.undefined)
    
    inline def setInapplicabilityDetailsVarargs(value: SchemaInapplicabilityDetails*): Self = StObject.set(x, "inapplicabilityDetails", js.Array(value*))
    
    inline def setLowWatermark(value: SchemaPriceAmount): Self = StObject.set(x, "lowWatermark", value.asInstanceOf[js.Any])
    
    inline def setLowWatermarkUndefined: Self = StObject.set(x, "lowWatermark", js.undefined)
    
    inline def setOrderItemCount(value: Double): Self = StObject.set(x, "orderItemCount", value.asInstanceOf[js.Any])
    
    inline def setOrderItemCountNull: Self = StObject.set(x, "orderItemCount", null)
    
    inline def setOrderItemCountUndefined: Self = StObject.set(x, "orderItemCount", js.undefined)
    
    inline def setRuleIds(value: js.Array[String]): Self = StObject.set(x, "ruleIds", value.asInstanceOf[js.Any])
    
    inline def setRuleIdsNull: Self = StObject.set(x, "ruleIds", null)
    
    inline def setRuleIdsUndefined: Self = StObject.set(x, "ruleIds", js.undefined)
    
    inline def setRuleIdsVarargs(value: String*): Self = StObject.set(x, "ruleIds", js.Array(value*))
    
    inline def setTotalGmv(value: SchemaPriceAmount): Self = StObject.set(x, "totalGmv", value.asInstanceOf[js.Any])
    
    inline def setTotalGmvUndefined: Self = StObject.set(x, "totalGmv", js.undefined)
    
    inline def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setTypeNull: Self = StObject.set(x, "type", null)
    
    inline def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
  }
}
