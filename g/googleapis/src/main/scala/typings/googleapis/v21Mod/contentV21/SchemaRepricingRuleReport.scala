package typings.googleapis.v21Mod.contentV21

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaRepricingRuleReport extends StObject {
  
  /**
    * Stats specific to buybox winning rules for rule report (deprecated).
    */
  var buyboxWinningRuleStats: js.UndefOr[SchemaRepricingRuleReportBuyboxWinningRuleStats] = js.undefined
  
  /**
    * Date of the stats in this report. The report starts and ends according to the merchant's timezone.
    */
  var date: js.UndefOr[SchemaDate] = js.undefined
  
  /**
    * List of product ids that are impacted by this rule during this reporting period. Out of stock products and products not searched for by customers are examples of non-impacted products.
    */
  var impactedProducts: js.UndefOr[js.Array[String] | Null] = js.undefined
  
  /**
    * List of all reasons the rule did not apply to the inapplicable products during the specified reporting period.
    */
  var inapplicabilityDetails: js.UndefOr[js.Array[SchemaInapplicabilityDetails]] = js.undefined
  
  /**
    * List of product ids that are inapplicable to this rule during this reporting period. To get the inapplicable reason for a specific product, see RepricingProductReport.
    */
  var inapplicableProducts: js.UndefOr[js.Array[String] | Null] = js.undefined
  
  /**
    * Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
    */
  var orderItemCount: js.UndefOr[Double | Null] = js.undefined
  
  /**
    * Id of the Repricing rule for this report.
    */
  var ruleId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Total GMV generated by impacted products while the rule was active on the date of the report. This value includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
    */
  var totalGmv: js.UndefOr[SchemaPriceAmount] = js.undefined
  
  /**
    * Type of the rule.
    */
  var `type`: js.UndefOr[String | Null] = js.undefined
}
object SchemaRepricingRuleReport {
  
  inline def apply(): SchemaRepricingRuleReport = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaRepricingRuleReport]
  }
  
  extension [Self <: SchemaRepricingRuleReport](x: Self) {
    
    inline def setBuyboxWinningRuleStats(value: SchemaRepricingRuleReportBuyboxWinningRuleStats): Self = StObject.set(x, "buyboxWinningRuleStats", value.asInstanceOf[js.Any])
    
    inline def setBuyboxWinningRuleStatsUndefined: Self = StObject.set(x, "buyboxWinningRuleStats", js.undefined)
    
    inline def setDate(value: SchemaDate): Self = StObject.set(x, "date", value.asInstanceOf[js.Any])
    
    inline def setDateUndefined: Self = StObject.set(x, "date", js.undefined)
    
    inline def setImpactedProducts(value: js.Array[String]): Self = StObject.set(x, "impactedProducts", value.asInstanceOf[js.Any])
    
    inline def setImpactedProductsNull: Self = StObject.set(x, "impactedProducts", null)
    
    inline def setImpactedProductsUndefined: Self = StObject.set(x, "impactedProducts", js.undefined)
    
    inline def setImpactedProductsVarargs(value: String*): Self = StObject.set(x, "impactedProducts", js.Array(value*))
    
    inline def setInapplicabilityDetails(value: js.Array[SchemaInapplicabilityDetails]): Self = StObject.set(x, "inapplicabilityDetails", value.asInstanceOf[js.Any])
    
    inline def setInapplicabilityDetailsUndefined: Self = StObject.set(x, "inapplicabilityDetails", js.undefined)
    
    inline def setInapplicabilityDetailsVarargs(value: SchemaInapplicabilityDetails*): Self = StObject.set(x, "inapplicabilityDetails", js.Array(value*))
    
    inline def setInapplicableProducts(value: js.Array[String]): Self = StObject.set(x, "inapplicableProducts", value.asInstanceOf[js.Any])
    
    inline def setInapplicableProductsNull: Self = StObject.set(x, "inapplicableProducts", null)
    
    inline def setInapplicableProductsUndefined: Self = StObject.set(x, "inapplicableProducts", js.undefined)
    
    inline def setInapplicableProductsVarargs(value: String*): Self = StObject.set(x, "inapplicableProducts", js.Array(value*))
    
    inline def setOrderItemCount(value: Double): Self = StObject.set(x, "orderItemCount", value.asInstanceOf[js.Any])
    
    inline def setOrderItemCountNull: Self = StObject.set(x, "orderItemCount", null)
    
    inline def setOrderItemCountUndefined: Self = StObject.set(x, "orderItemCount", js.undefined)
    
    inline def setRuleId(value: String): Self = StObject.set(x, "ruleId", value.asInstanceOf[js.Any])
    
    inline def setRuleIdNull: Self = StObject.set(x, "ruleId", null)
    
    inline def setRuleIdUndefined: Self = StObject.set(x, "ruleId", js.undefined)
    
    inline def setTotalGmv(value: SchemaPriceAmount): Self = StObject.set(x, "totalGmv", value.asInstanceOf[js.Any])
    
    inline def setTotalGmvUndefined: Self = StObject.set(x, "totalGmv", js.undefined)
    
    inline def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setTypeNull: Self = StObject.set(x, "type", null)
    
    inline def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
  }
}
