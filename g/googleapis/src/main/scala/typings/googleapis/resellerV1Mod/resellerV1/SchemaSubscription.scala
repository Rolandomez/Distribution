package typings.googleapis.resellerV1Mod.resellerV1

import typings.googleapis.anon.CommitmentInterval
import typings.googleapis.anon.CurrentLegacySkuId
import typings.googleapis.anon.IsInTrial
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaSubscription extends StObject {
  
  /**
    * Read-only field that returns the current billing method for a subscription.
    */
  var billingMethod: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter.
    */
  var creationTime: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Primary domain name of the customer
    */
  var customerDomain: js.UndefOr[String | Null] = js.undefined
  
  /**
    * This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.
    */
  var customerId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty.
    */
  var dealCode: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Identifies the resource as a Subscription. Value: `reseller#subscription`
    */
  var kind: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API"s payment plans, see the API concepts.
    */
  var plan: js.UndefOr[CommitmentInterval | Null] = js.undefined
  
  /**
    * This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
    */
  var purchaseOrderId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center.
    */
  var renewalSettings: js.UndefOr[SchemaRenewalSettings] = js.undefined
  
  /**
    * URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console.
    */
  var resourceUiUrl: js.UndefOr[String | Null] = js.undefined
  
  /**
    * This is a required property. The number and limit of user seat licenses in the plan.
    */
  var seats: js.UndefOr[SchemaSeats] = js.undefined
  
  /**
    * A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs.
    */
  var skuId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs.
    */
  var skuName: js.UndefOr[String | Null] = js.undefined
  
  /**
    * This is an optional property.
    */
  var status: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions.
    */
  var subscriptionId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise).
    */
  var suspensionReasons: js.UndefOr[js.Array[String] | Null] = js.undefined
  
  /**
    * Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer.
    */
  var transferInfo: js.UndefOr[CurrentLegacySkuId | Null] = js.undefined
  
  /**
    * The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts.
    */
  var trialSettings: js.UndefOr[IsInTrial | Null] = js.undefined
}
object SchemaSubscription {
  
  inline def apply(): SchemaSubscription = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaSubscription]
  }
  
  extension [Self <: SchemaSubscription](x: Self) {
    
    inline def setBillingMethod(value: String): Self = StObject.set(x, "billingMethod", value.asInstanceOf[js.Any])
    
    inline def setBillingMethodNull: Self = StObject.set(x, "billingMethod", null)
    
    inline def setBillingMethodUndefined: Self = StObject.set(x, "billingMethod", js.undefined)
    
    inline def setCreationTime(value: String): Self = StObject.set(x, "creationTime", value.asInstanceOf[js.Any])
    
    inline def setCreationTimeNull: Self = StObject.set(x, "creationTime", null)
    
    inline def setCreationTimeUndefined: Self = StObject.set(x, "creationTime", js.undefined)
    
    inline def setCustomerDomain(value: String): Self = StObject.set(x, "customerDomain", value.asInstanceOf[js.Any])
    
    inline def setCustomerDomainNull: Self = StObject.set(x, "customerDomain", null)
    
    inline def setCustomerDomainUndefined: Self = StObject.set(x, "customerDomain", js.undefined)
    
    inline def setCustomerId(value: String): Self = StObject.set(x, "customerId", value.asInstanceOf[js.Any])
    
    inline def setCustomerIdNull: Self = StObject.set(x, "customerId", null)
    
    inline def setCustomerIdUndefined: Self = StObject.set(x, "customerId", js.undefined)
    
    inline def setDealCode(value: String): Self = StObject.set(x, "dealCode", value.asInstanceOf[js.Any])
    
    inline def setDealCodeNull: Self = StObject.set(x, "dealCode", null)
    
    inline def setDealCodeUndefined: Self = StObject.set(x, "dealCode", js.undefined)
    
    inline def setKind(value: String): Self = StObject.set(x, "kind", value.asInstanceOf[js.Any])
    
    inline def setKindNull: Self = StObject.set(x, "kind", null)
    
    inline def setKindUndefined: Self = StObject.set(x, "kind", js.undefined)
    
    inline def setPlan(value: CommitmentInterval): Self = StObject.set(x, "plan", value.asInstanceOf[js.Any])
    
    inline def setPlanNull: Self = StObject.set(x, "plan", null)
    
    inline def setPlanUndefined: Self = StObject.set(x, "plan", js.undefined)
    
    inline def setPurchaseOrderId(value: String): Self = StObject.set(x, "purchaseOrderId", value.asInstanceOf[js.Any])
    
    inline def setPurchaseOrderIdNull: Self = StObject.set(x, "purchaseOrderId", null)
    
    inline def setPurchaseOrderIdUndefined: Self = StObject.set(x, "purchaseOrderId", js.undefined)
    
    inline def setRenewalSettings(value: SchemaRenewalSettings): Self = StObject.set(x, "renewalSettings", value.asInstanceOf[js.Any])
    
    inline def setRenewalSettingsUndefined: Self = StObject.set(x, "renewalSettings", js.undefined)
    
    inline def setResourceUiUrl(value: String): Self = StObject.set(x, "resourceUiUrl", value.asInstanceOf[js.Any])
    
    inline def setResourceUiUrlNull: Self = StObject.set(x, "resourceUiUrl", null)
    
    inline def setResourceUiUrlUndefined: Self = StObject.set(x, "resourceUiUrl", js.undefined)
    
    inline def setSeats(value: SchemaSeats): Self = StObject.set(x, "seats", value.asInstanceOf[js.Any])
    
    inline def setSeatsUndefined: Self = StObject.set(x, "seats", js.undefined)
    
    inline def setSkuId(value: String): Self = StObject.set(x, "skuId", value.asInstanceOf[js.Any])
    
    inline def setSkuIdNull: Self = StObject.set(x, "skuId", null)
    
    inline def setSkuIdUndefined: Self = StObject.set(x, "skuId", js.undefined)
    
    inline def setSkuName(value: String): Self = StObject.set(x, "skuName", value.asInstanceOf[js.Any])
    
    inline def setSkuNameNull: Self = StObject.set(x, "skuName", null)
    
    inline def setSkuNameUndefined: Self = StObject.set(x, "skuName", js.undefined)
    
    inline def setStatus(value: String): Self = StObject.set(x, "status", value.asInstanceOf[js.Any])
    
    inline def setStatusNull: Self = StObject.set(x, "status", null)
    
    inline def setStatusUndefined: Self = StObject.set(x, "status", js.undefined)
    
    inline def setSubscriptionId(value: String): Self = StObject.set(x, "subscriptionId", value.asInstanceOf[js.Any])
    
    inline def setSubscriptionIdNull: Self = StObject.set(x, "subscriptionId", null)
    
    inline def setSubscriptionIdUndefined: Self = StObject.set(x, "subscriptionId", js.undefined)
    
    inline def setSuspensionReasons(value: js.Array[String]): Self = StObject.set(x, "suspensionReasons", value.asInstanceOf[js.Any])
    
    inline def setSuspensionReasonsNull: Self = StObject.set(x, "suspensionReasons", null)
    
    inline def setSuspensionReasonsUndefined: Self = StObject.set(x, "suspensionReasons", js.undefined)
    
    inline def setSuspensionReasonsVarargs(value: String*): Self = StObject.set(x, "suspensionReasons", js.Array(value*))
    
    inline def setTransferInfo(value: CurrentLegacySkuId): Self = StObject.set(x, "transferInfo", value.asInstanceOf[js.Any])
    
    inline def setTransferInfoNull: Self = StObject.set(x, "transferInfo", null)
    
    inline def setTransferInfoUndefined: Self = StObject.set(x, "transferInfo", js.undefined)
    
    inline def setTrialSettings(value: IsInTrial): Self = StObject.set(x, "trialSettings", value.asInstanceOf[js.Any])
    
    inline def setTrialSettingsNull: Self = StObject.set(x, "trialSettings", null)
    
    inline def setTrialSettingsUndefined: Self = StObject.set(x, "trialSettings", js.undefined)
  }
}
