package typings.googleapis.baremetalsolutionV2Mod.baremetalsolutionV2

import org.scalablytyped.runtime.StringDictionary
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaVolume extends StObject {
  
  /**
    * The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.
    */
  var autoGrownSizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.
    */
  var bootVolume: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.
    */
  var currentSizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.
    */
  var emergencySizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * An identifier for the `Volume`, generated by the backend.
    */
  var id: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Labels as key value pairs.
    */
  var labels: js.UndefOr[StringDictionary[String] | Null] = js.undefined
  
  /**
    * Maximum size volume can be expanded to in case of evergency, in GiB.
    */
  var maxSizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project\}/locations/{location\}/volumes/{volume\}`
    */
  var name: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Originally requested size, in GiB.
    */
  var originallyRequestedSizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Immutable. Pod name.
    */
  var pod: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. Storage protocol for the Volume.
    */
  var protocol: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.
    */
  var remainingSpaceGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The requested size of this storage volume, in GiB.
    */
  var requestedSizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The behavior to use when snapshot reserved space is full.
    */
  var snapshotAutoDeleteBehavior: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Whether snapshots are enabled.
    */
  var snapshotEnabled: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * Details about snapshot space reservation and usage on the storage volume.
    */
  var snapshotReservationDetail: js.UndefOr[SchemaSnapshotReservationDetail] = js.undefined
  
  /**
    * The name of the snapshot schedule policy in use for this volume, if any.
    */
  var snapshotSchedulePolicy: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The state of this storage volume.
    */
  var state: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The storage type for this volume.
    */
  var storageType: js.UndefOr[String | Null] = js.undefined
}
object SchemaVolume {
  
  inline def apply(): SchemaVolume = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaVolume]
  }
  
  extension [Self <: SchemaVolume](x: Self) {
    
    inline def setAutoGrownSizeGib(value: String): Self = StObject.set(x, "autoGrownSizeGib", value.asInstanceOf[js.Any])
    
    inline def setAutoGrownSizeGibNull: Self = StObject.set(x, "autoGrownSizeGib", null)
    
    inline def setAutoGrownSizeGibUndefined: Self = StObject.set(x, "autoGrownSizeGib", js.undefined)
    
    inline def setBootVolume(value: Boolean): Self = StObject.set(x, "bootVolume", value.asInstanceOf[js.Any])
    
    inline def setBootVolumeNull: Self = StObject.set(x, "bootVolume", null)
    
    inline def setBootVolumeUndefined: Self = StObject.set(x, "bootVolume", js.undefined)
    
    inline def setCurrentSizeGib(value: String): Self = StObject.set(x, "currentSizeGib", value.asInstanceOf[js.Any])
    
    inline def setCurrentSizeGibNull: Self = StObject.set(x, "currentSizeGib", null)
    
    inline def setCurrentSizeGibUndefined: Self = StObject.set(x, "currentSizeGib", js.undefined)
    
    inline def setEmergencySizeGib(value: String): Self = StObject.set(x, "emergencySizeGib", value.asInstanceOf[js.Any])
    
    inline def setEmergencySizeGibNull: Self = StObject.set(x, "emergencySizeGib", null)
    
    inline def setEmergencySizeGibUndefined: Self = StObject.set(x, "emergencySizeGib", js.undefined)
    
    inline def setId(value: String): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdNull: Self = StObject.set(x, "id", null)
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setLabels(value: StringDictionary[String]): Self = StObject.set(x, "labels", value.asInstanceOf[js.Any])
    
    inline def setLabelsNull: Self = StObject.set(x, "labels", null)
    
    inline def setLabelsUndefined: Self = StObject.set(x, "labels", js.undefined)
    
    inline def setMaxSizeGib(value: String): Self = StObject.set(x, "maxSizeGib", value.asInstanceOf[js.Any])
    
    inline def setMaxSizeGibNull: Self = StObject.set(x, "maxSizeGib", null)
    
    inline def setMaxSizeGibUndefined: Self = StObject.set(x, "maxSizeGib", js.undefined)
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameNull: Self = StObject.set(x, "name", null)
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setOriginallyRequestedSizeGib(value: String): Self = StObject.set(x, "originallyRequestedSizeGib", value.asInstanceOf[js.Any])
    
    inline def setOriginallyRequestedSizeGibNull: Self = StObject.set(x, "originallyRequestedSizeGib", null)
    
    inline def setOriginallyRequestedSizeGibUndefined: Self = StObject.set(x, "originallyRequestedSizeGib", js.undefined)
    
    inline def setPod(value: String): Self = StObject.set(x, "pod", value.asInstanceOf[js.Any])
    
    inline def setPodNull: Self = StObject.set(x, "pod", null)
    
    inline def setPodUndefined: Self = StObject.set(x, "pod", js.undefined)
    
    inline def setProtocol(value: String): Self = StObject.set(x, "protocol", value.asInstanceOf[js.Any])
    
    inline def setProtocolNull: Self = StObject.set(x, "protocol", null)
    
    inline def setProtocolUndefined: Self = StObject.set(x, "protocol", js.undefined)
    
    inline def setRemainingSpaceGib(value: String): Self = StObject.set(x, "remainingSpaceGib", value.asInstanceOf[js.Any])
    
    inline def setRemainingSpaceGibNull: Self = StObject.set(x, "remainingSpaceGib", null)
    
    inline def setRemainingSpaceGibUndefined: Self = StObject.set(x, "remainingSpaceGib", js.undefined)
    
    inline def setRequestedSizeGib(value: String): Self = StObject.set(x, "requestedSizeGib", value.asInstanceOf[js.Any])
    
    inline def setRequestedSizeGibNull: Self = StObject.set(x, "requestedSizeGib", null)
    
    inline def setRequestedSizeGibUndefined: Self = StObject.set(x, "requestedSizeGib", js.undefined)
    
    inline def setSnapshotAutoDeleteBehavior(value: String): Self = StObject.set(x, "snapshotAutoDeleteBehavior", value.asInstanceOf[js.Any])
    
    inline def setSnapshotAutoDeleteBehaviorNull: Self = StObject.set(x, "snapshotAutoDeleteBehavior", null)
    
    inline def setSnapshotAutoDeleteBehaviorUndefined: Self = StObject.set(x, "snapshotAutoDeleteBehavior", js.undefined)
    
    inline def setSnapshotEnabled(value: Boolean): Self = StObject.set(x, "snapshotEnabled", value.asInstanceOf[js.Any])
    
    inline def setSnapshotEnabledNull: Self = StObject.set(x, "snapshotEnabled", null)
    
    inline def setSnapshotEnabledUndefined: Self = StObject.set(x, "snapshotEnabled", js.undefined)
    
    inline def setSnapshotReservationDetail(value: SchemaSnapshotReservationDetail): Self = StObject.set(x, "snapshotReservationDetail", value.asInstanceOf[js.Any])
    
    inline def setSnapshotReservationDetailUndefined: Self = StObject.set(x, "snapshotReservationDetail", js.undefined)
    
    inline def setSnapshotSchedulePolicy(value: String): Self = StObject.set(x, "snapshotSchedulePolicy", value.asInstanceOf[js.Any])
    
    inline def setSnapshotSchedulePolicyNull: Self = StObject.set(x, "snapshotSchedulePolicy", null)
    
    inline def setSnapshotSchedulePolicyUndefined: Self = StObject.set(x, "snapshotSchedulePolicy", js.undefined)
    
    inline def setState(value: String): Self = StObject.set(x, "state", value.asInstanceOf[js.Any])
    
    inline def setStateNull: Self = StObject.set(x, "state", null)
    
    inline def setStateUndefined: Self = StObject.set(x, "state", js.undefined)
    
    inline def setStorageType(value: String): Self = StObject.set(x, "storageType", value.asInstanceOf[js.Any])
    
    inline def setStorageTypeNull: Self = StObject.set(x, "storageType", null)
    
    inline def setStorageTypeUndefined: Self = StObject.set(x, "storageType", js.undefined)
  }
}
