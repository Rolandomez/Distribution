package typings.googleapis.baremetalsolutionV2Mod.baremetalsolutionV2

import org.scalablytyped.runtime.StringDictionary
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaNfsShare extends StObject {
  
  /**
    * List of allowed access points.
    */
  var allowedClients: js.UndefOr[js.Array[SchemaAllowedClient]] = js.undefined
  
  /**
    * Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.
    */
  var id: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Labels as key value pairs.
    */
  var labels: js.UndefOr[StringDictionary[String] | Null] = js.undefined
  
  /**
    * Output only. The name of the NFS share.
    */
  var name: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
    */
  var nfsShareId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The requested size, in GiB.
    */
  var requestedSizeGib: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The state of the NFS share.
    */
  var state: js.UndefOr[String | Null] = js.undefined
  
  /**
    * The volume containing the share.
    */
  var volume: js.UndefOr[String | Null] = js.undefined
}
object SchemaNfsShare {
  
  inline def apply(): SchemaNfsShare = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaNfsShare]
  }
  
  extension [Self <: SchemaNfsShare](x: Self) {
    
    inline def setAllowedClients(value: js.Array[SchemaAllowedClient]): Self = StObject.set(x, "allowedClients", value.asInstanceOf[js.Any])
    
    inline def setAllowedClientsUndefined: Self = StObject.set(x, "allowedClients", js.undefined)
    
    inline def setAllowedClientsVarargs(value: SchemaAllowedClient*): Self = StObject.set(x, "allowedClients", js.Array(value*))
    
    inline def setId(value: String): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdNull: Self = StObject.set(x, "id", null)
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setLabels(value: StringDictionary[String]): Self = StObject.set(x, "labels", value.asInstanceOf[js.Any])
    
    inline def setLabelsNull: Self = StObject.set(x, "labels", null)
    
    inline def setLabelsUndefined: Self = StObject.set(x, "labels", js.undefined)
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameNull: Self = StObject.set(x, "name", null)
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setNfsShareId(value: String): Self = StObject.set(x, "nfsShareId", value.asInstanceOf[js.Any])
    
    inline def setNfsShareIdNull: Self = StObject.set(x, "nfsShareId", null)
    
    inline def setNfsShareIdUndefined: Self = StObject.set(x, "nfsShareId", js.undefined)
    
    inline def setRequestedSizeGib(value: String): Self = StObject.set(x, "requestedSizeGib", value.asInstanceOf[js.Any])
    
    inline def setRequestedSizeGibNull: Self = StObject.set(x, "requestedSizeGib", null)
    
    inline def setRequestedSizeGibUndefined: Self = StObject.set(x, "requestedSizeGib", js.undefined)
    
    inline def setState(value: String): Self = StObject.set(x, "state", value.asInstanceOf[js.Any])
    
    inline def setStateNull: Self = StObject.set(x, "state", null)
    
    inline def setStateUndefined: Self = StObject.set(x, "state", js.undefined)
    
    inline def setVolume(value: String): Self = StObject.set(x, "volume", value.asInstanceOf[js.Any])
    
    inline def setVolumeNull: Self = StObject.set(x, "volume", null)
    
    inline def setVolumeUndefined: Self = StObject.set(x, "volume", js.undefined)
  }
}
