package typings.googleapis.deploymentmanagerAlphaMod.deploymentmanagerAlpha

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaDeploymentsCancelPreviewRequest extends StObject {
  
  /**
    * Specifies a fingerprint for `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided in `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to cancel a preview, this would prevent one of the requests). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment.
    */
  var fingerprint: js.UndefOr[String | Null] = js.undefined
}
object SchemaDeploymentsCancelPreviewRequest {
  
  inline def apply(): SchemaDeploymentsCancelPreviewRequest = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaDeploymentsCancelPreviewRequest]
  }
  
  extension [Self <: SchemaDeploymentsCancelPreviewRequest](x: Self) {
    
    inline def setFingerprint(value: String): Self = StObject.set(x, "fingerprint", value.asInstanceOf[js.Any])
    
    inline def setFingerprintNull: Self = StObject.set(x, "fingerprint", null)
    
    inline def setFingerprintUndefined: Self = StObject.set(x, "fingerprint", js.undefined)
  }
}
