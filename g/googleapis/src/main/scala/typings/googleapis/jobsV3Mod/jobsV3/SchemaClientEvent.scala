package typings.googleapis.jobsV3Mod.jobsV3

import org.scalablytyped.runtime.StringDictionary
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaClientEvent extends StObject {
  
  /**
    * Required. The timestamp of the event.
    */
  var createTime: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Required. A unique identifier, generated by the client application. This `event_id` is used to establish the relationship between different events (see parent_event_id).
    */
  var eventId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Optional. Extra information about this event. Used for storing information with no matching field in event payload, for example, user application specific context or details. At most 20 keys are supported. The maximum total size of all keys and values is 2 KB.
    */
  var extraInfo: js.UndefOr[StringDictionary[String] | Null] = js.undefined
  
  /**
    * A event issued when a job seeker interacts with the application that implements Cloud Talent Solution.
    */
  var jobEvent: js.UndefOr[SchemaJobEvent] = js.undefined
  
  /**
    * Optional. The event_id of an event that resulted in the current event. For example, a Job view event usually follows a parent impression event: A job seeker first does a search where a list of jobs appears (impression). The job seeker then selects a result and views the description of a particular job (Job view).
    */
  var parentEventId: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Required. A unique ID generated in the API responses. It can be found in ResponseMetadata.request_id.
    */
  var requestId: js.UndefOr[String | Null] = js.undefined
}
object SchemaClientEvent {
  
  inline def apply(): SchemaClientEvent = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaClientEvent]
  }
  
  extension [Self <: SchemaClientEvent](x: Self) {
    
    inline def setCreateTime(value: String): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    inline def setCreateTimeNull: Self = StObject.set(x, "createTime", null)
    
    inline def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    inline def setEventId(value: String): Self = StObject.set(x, "eventId", value.asInstanceOf[js.Any])
    
    inline def setEventIdNull: Self = StObject.set(x, "eventId", null)
    
    inline def setEventIdUndefined: Self = StObject.set(x, "eventId", js.undefined)
    
    inline def setExtraInfo(value: StringDictionary[String]): Self = StObject.set(x, "extraInfo", value.asInstanceOf[js.Any])
    
    inline def setExtraInfoNull: Self = StObject.set(x, "extraInfo", null)
    
    inline def setExtraInfoUndefined: Self = StObject.set(x, "extraInfo", js.undefined)
    
    inline def setJobEvent(value: SchemaJobEvent): Self = StObject.set(x, "jobEvent", value.asInstanceOf[js.Any])
    
    inline def setJobEventUndefined: Self = StObject.set(x, "jobEvent", js.undefined)
    
    inline def setParentEventId(value: String): Self = StObject.set(x, "parentEventId", value.asInstanceOf[js.Any])
    
    inline def setParentEventIdNull: Self = StObject.set(x, "parentEventId", null)
    
    inline def setParentEventIdUndefined: Self = StObject.set(x, "parentEventId", js.undefined)
    
    inline def setRequestId(value: String): Self = StObject.set(x, "requestId", value.asInstanceOf[js.Any])
    
    inline def setRequestIdNull: Self = StObject.set(x, "requestId", null)
    
    inline def setRequestIdUndefined: Self = StObject.set(x, "requestId", js.undefined)
  }
}
