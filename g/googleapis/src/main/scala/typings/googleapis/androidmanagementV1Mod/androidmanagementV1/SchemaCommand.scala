package typings.googleapis.androidmanagementV1Mod.androidmanagementV1

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * A command.
  */
trait SchemaCommand extends StObject {
  
  /**
    * The timestamp at which the command was created. The timestamp is
    * automatically generated by the server.
    */
  var createTime: js.UndefOr[String] = js.undefined
  
  /**
    * The duration for which the command is valid. The command will expire if
    * not executed by the device during this time. The default duration if
    * unspecified is ten minutes. There is no maximum duration.
    */
  var duration: js.UndefOr[String] = js.undefined
  
  /**
    * If the command failed, an error code explaining the failure. This is not
    * set when the command is cancelled by the caller.
    */
  var errorCode: js.UndefOr[String] = js.undefined
  
  /**
    * For commands of type RESET_PASSWORD, optionally specifies the new
    * password.
    */
  var newPassword: js.UndefOr[String] = js.undefined
  
  /**
    * For commands of type RESET_PASSWORD, optionally specifies flags.
    */
  var resetPasswordFlags: js.UndefOr[js.Array[String]] = js.undefined
  
  /**
    * The type of the command.
    */
  var `type`: js.UndefOr[String] = js.undefined
  
  /**
    * The resource name of the user that owns the device in the form
    * enterprises/{enterpriseId}/users/{userId}. This is automatically
    * generated by the server based on the device the command is sent to.
    */
  var userName: js.UndefOr[String] = js.undefined
}
object SchemaCommand {
  
  inline def apply(): SchemaCommand = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaCommand]
  }
  
  extension [Self <: SchemaCommand](x: Self) {
    
    inline def setCreateTime(value: String): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    inline def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    inline def setDuration(value: String): Self = StObject.set(x, "duration", value.asInstanceOf[js.Any])
    
    inline def setDurationUndefined: Self = StObject.set(x, "duration", js.undefined)
    
    inline def setErrorCode(value: String): Self = StObject.set(x, "errorCode", value.asInstanceOf[js.Any])
    
    inline def setErrorCodeUndefined: Self = StObject.set(x, "errorCode", js.undefined)
    
    inline def setNewPassword(value: String): Self = StObject.set(x, "newPassword", value.asInstanceOf[js.Any])
    
    inline def setNewPasswordUndefined: Self = StObject.set(x, "newPassword", js.undefined)
    
    inline def setResetPasswordFlags(value: js.Array[String]): Self = StObject.set(x, "resetPasswordFlags", value.asInstanceOf[js.Any])
    
    inline def setResetPasswordFlagsUndefined: Self = StObject.set(x, "resetPasswordFlags", js.undefined)
    
    inline def setResetPasswordFlagsVarargs(value: String*): Self = StObject.set(x, "resetPasswordFlags", js.Array(value :_*))
    
    inline def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
    
    inline def setUserName(value: String): Self = StObject.set(x, "userName", value.asInstanceOf[js.Any])
    
    inline def setUserNameUndefined: Self = StObject.set(x, "userName", js.undefined)
  }
}
