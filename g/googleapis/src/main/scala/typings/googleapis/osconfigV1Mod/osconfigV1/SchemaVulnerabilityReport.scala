package typings.googleapis.osconfigV1Mod.osconfigV1

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaVulnerabilityReport extends StObject {
  
  /**
    * Output only. The `vulnerabilityReport` API resource name. Format: `projects/{project_number\}/locations/{location\}/instances/{instance_id\}/vulnerabilityReport`
    */
  var name: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. The timestamp for when the last vulnerability report was generated for the VM.
    */
  var updateTime: js.UndefOr[String | Null] = js.undefined
  
  /**
    * Output only. List of vulnerabilities affecting the VM.
    */
  var vulnerabilities: js.UndefOr[js.Array[SchemaVulnerabilityReportVulnerability]] = js.undefined
}
object SchemaVulnerabilityReport {
  
  inline def apply(): SchemaVulnerabilityReport = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaVulnerabilityReport]
  }
  
  extension [Self <: SchemaVulnerabilityReport](x: Self) {
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameNull: Self = StObject.set(x, "name", null)
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setUpdateTime(value: String): Self = StObject.set(x, "updateTime", value.asInstanceOf[js.Any])
    
    inline def setUpdateTimeNull: Self = StObject.set(x, "updateTime", null)
    
    inline def setUpdateTimeUndefined: Self = StObject.set(x, "updateTime", js.undefined)
    
    inline def setVulnerabilities(value: js.Array[SchemaVulnerabilityReportVulnerability]): Self = StObject.set(x, "vulnerabilities", value.asInstanceOf[js.Any])
    
    inline def setVulnerabilitiesUndefined: Self = StObject.set(x, "vulnerabilities", js.undefined)
    
    inline def setVulnerabilitiesVarargs(value: SchemaVulnerabilityReportVulnerability*): Self = StObject.set(x, "vulnerabilities", js.Array(value*))
  }
}
