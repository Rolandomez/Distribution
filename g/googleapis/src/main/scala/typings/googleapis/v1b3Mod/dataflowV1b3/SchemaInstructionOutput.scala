package typings.googleapis.v1b3Mod.dataflowV1b3

import org.scalablytyped.runtime.StringDictionary
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SchemaInstructionOutput extends StObject {
  
  /**
    * The codec to use to encode data being written via this output.
    */
  var codec: js.UndefOr[StringDictionary[Any] | Null] = js.undefined
  
  /**
    * The user-provided name of this output.
    */
  var name: js.UndefOr[String | Null] = js.undefined
  
  /**
    * For system-generated byte and mean byte metrics, certain instructions should only report the key size.
    */
  var onlyCountKeyBytes: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * For system-generated byte and mean byte metrics, certain instructions should only report the value size.
    */
  var onlyCountValueBytes: js.UndefOr[Boolean | Null] = js.undefined
  
  /**
    * System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.
    */
  var originalName: js.UndefOr[String | Null] = js.undefined
  
  /**
    * System-defined name of this output. Unique across the workflow.
    */
  var systemName: js.UndefOr[String | Null] = js.undefined
}
object SchemaInstructionOutput {
  
  inline def apply(): SchemaInstructionOutput = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaInstructionOutput]
  }
  
  extension [Self <: SchemaInstructionOutput](x: Self) {
    
    inline def setCodec(value: StringDictionary[Any]): Self = StObject.set(x, "codec", value.asInstanceOf[js.Any])
    
    inline def setCodecNull: Self = StObject.set(x, "codec", null)
    
    inline def setCodecUndefined: Self = StObject.set(x, "codec", js.undefined)
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameNull: Self = StObject.set(x, "name", null)
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setOnlyCountKeyBytes(value: Boolean): Self = StObject.set(x, "onlyCountKeyBytes", value.asInstanceOf[js.Any])
    
    inline def setOnlyCountKeyBytesNull: Self = StObject.set(x, "onlyCountKeyBytes", null)
    
    inline def setOnlyCountKeyBytesUndefined: Self = StObject.set(x, "onlyCountKeyBytes", js.undefined)
    
    inline def setOnlyCountValueBytes(value: Boolean): Self = StObject.set(x, "onlyCountValueBytes", value.asInstanceOf[js.Any])
    
    inline def setOnlyCountValueBytesNull: Self = StObject.set(x, "onlyCountValueBytes", null)
    
    inline def setOnlyCountValueBytesUndefined: Self = StObject.set(x, "onlyCountValueBytes", js.undefined)
    
    inline def setOriginalName(value: String): Self = StObject.set(x, "originalName", value.asInstanceOf[js.Any])
    
    inline def setOriginalNameNull: Self = StObject.set(x, "originalName", null)
    
    inline def setOriginalNameUndefined: Self = StObject.set(x, "originalName", js.undefined)
    
    inline def setSystemName(value: String): Self = StObject.set(x, "systemName", value.asInstanceOf[js.Any])
    
    inline def setSystemNameNull: Self = StObject.set(x, "systemName", null)
    
    inline def setSystemNameUndefined: Self = StObject.set(x, "systemName", js.undefined)
  }
}
