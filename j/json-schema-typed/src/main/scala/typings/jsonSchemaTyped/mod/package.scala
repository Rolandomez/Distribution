package typings.jsonSchemaTyped

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

package object mod {
  
  @scala.inline
  def JSONSchemaKeys: js.Array[
    typings.jsonSchemaTyped.jsonSchemaTypedStrings.$comment | typings.jsonSchemaTyped.jsonSchemaTypedStrings.$id | typings.jsonSchemaTyped.jsonSchemaTypedStrings.$ref | typings.jsonSchemaTyped.jsonSchemaTypedStrings.$schema | typings.jsonSchemaTyped.jsonSchemaTypedStrings.additionalItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.additionalProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.allOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.anyOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.const | typings.jsonSchemaTyped.jsonSchemaTypedStrings.contains | typings.jsonSchemaTyped.jsonSchemaTypedStrings.contentEncoding | typings.jsonSchemaTyped.jsonSchemaTypedStrings.contentMediaType | typings.jsonSchemaTyped.jsonSchemaTypedStrings.default | typings.jsonSchemaTyped.jsonSchemaTypedStrings.definitions | typings.jsonSchemaTyped.jsonSchemaTypedStrings.dependencies | typings.jsonSchemaTyped.jsonSchemaTypedStrings.description | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`else` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.enum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.examples | typings.jsonSchemaTyped.jsonSchemaTypedStrings.exclusiveMaximum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.exclusiveMinimum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.format | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`if` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.items | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maximum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maxItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maxLength | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maxProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minimum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minLength | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.multipleOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.not | typings.jsonSchemaTyped.jsonSchemaTypedStrings.oneOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.pattern | typings.jsonSchemaTyped.jsonSchemaTypedStrings.patternProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.properties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.propertyNames | typings.jsonSchemaTyped.jsonSchemaTypedStrings.readOnly | typings.jsonSchemaTyped.jsonSchemaTypedStrings.required | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`then` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.title | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`type` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.uniqueItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.writeOnly
  ] = typings.jsonSchemaTyped.mod.^.asInstanceOf[js.Dynamic].selectDynamic("JSONSchemaKeys").asInstanceOf[js.Array[
    typings.jsonSchemaTyped.jsonSchemaTypedStrings.$comment | typings.jsonSchemaTyped.jsonSchemaTypedStrings.$id | typings.jsonSchemaTyped.jsonSchemaTypedStrings.$ref | typings.jsonSchemaTyped.jsonSchemaTypedStrings.$schema | typings.jsonSchemaTyped.jsonSchemaTypedStrings.additionalItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.additionalProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.allOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.anyOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.const | typings.jsonSchemaTyped.jsonSchemaTypedStrings.contains | typings.jsonSchemaTyped.jsonSchemaTypedStrings.contentEncoding | typings.jsonSchemaTyped.jsonSchemaTypedStrings.contentMediaType | typings.jsonSchemaTyped.jsonSchemaTypedStrings.default | typings.jsonSchemaTyped.jsonSchemaTypedStrings.definitions | typings.jsonSchemaTyped.jsonSchemaTypedStrings.dependencies | typings.jsonSchemaTyped.jsonSchemaTypedStrings.description | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`else` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.enum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.examples | typings.jsonSchemaTyped.jsonSchemaTypedStrings.exclusiveMaximum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.exclusiveMinimum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.format | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`if` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.items | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maximum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maxItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maxLength | typings.jsonSchemaTyped.jsonSchemaTypedStrings.maxProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minimum | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minLength | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.minProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.multipleOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.not | typings.jsonSchemaTyped.jsonSchemaTypedStrings.oneOf | typings.jsonSchemaTyped.jsonSchemaTypedStrings.pattern | typings.jsonSchemaTyped.jsonSchemaTypedStrings.patternProperties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.properties | typings.jsonSchemaTyped.jsonSchemaTypedStrings.propertyNames | typings.jsonSchemaTyped.jsonSchemaTypedStrings.readOnly | typings.jsonSchemaTyped.jsonSchemaTypedStrings.required | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`then` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.title | typings.jsonSchemaTyped.jsonSchemaTypedStrings.`type` | typings.jsonSchemaTyped.jsonSchemaTypedStrings.uniqueItems | typings.jsonSchemaTyped.jsonSchemaTypedStrings.writeOnly
  ]]
  
  /* Rewritten from type alias, can be one of: 
    - typings.jsonSchemaTyped.mod.JSONSchemaTypeName
    - typings.jsonSchemaTyped.mod.JSONSchemaType
    - js.Array[
  typings.jsonSchemaTyped.mod.JSONSchemaType | typings.jsonSchemaTyped.mod.JSONSchemaTypeName]
  */
  type JSONSchemaTypeValue = typings.jsonSchemaTyped.mod._JSONSchemaTypeValue | (js.Array[
    typings.jsonSchemaTyped.mod.JSONSchemaType | typings.jsonSchemaTyped.mod.JSONSchemaTypeName
  ])
}
