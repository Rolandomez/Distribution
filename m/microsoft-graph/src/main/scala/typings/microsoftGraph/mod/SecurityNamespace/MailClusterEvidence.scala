package typings.microsoftGraph.mod.SecurityNamespace

import typings.microsoftGraph.mod.NullableOption
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait MailClusterEvidence
  extends StObject
     with AlertEvidence {
  
  // The clustering logic of the emails inside the cluster.
  var clusterBy: js.UndefOr[NullableOption[String]] = js.undefined
  
  // The value utilized to cluster the similar emails.
  var clusterByValue: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Count of emails in the email cluster.
  var emailCount: js.UndefOr[NullableOption[Double]] = js.undefined
  
  // Unique identifiers for the emails in the cluster, generated by Microsoft 365.
  var networkMessageIds: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  // The query used to identify the email cluster.
  var query: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Uniform resource name (URN) of the automated investigation where the cluster was identified.
  var urn: js.UndefOr[NullableOption[String]] = js.undefined
}
object MailClusterEvidence {
  
  inline def apply(): MailClusterEvidence = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[MailClusterEvidence]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: MailClusterEvidence] (val x: Self) extends AnyVal {
    
    inline def setClusterBy(value: NullableOption[String]): Self = StObject.set(x, "clusterBy", value.asInstanceOf[js.Any])
    
    inline def setClusterByNull: Self = StObject.set(x, "clusterBy", null)
    
    inline def setClusterByUndefined: Self = StObject.set(x, "clusterBy", js.undefined)
    
    inline def setClusterByValue(value: NullableOption[String]): Self = StObject.set(x, "clusterByValue", value.asInstanceOf[js.Any])
    
    inline def setClusterByValueNull: Self = StObject.set(x, "clusterByValue", null)
    
    inline def setClusterByValueUndefined: Self = StObject.set(x, "clusterByValue", js.undefined)
    
    inline def setEmailCount(value: NullableOption[Double]): Self = StObject.set(x, "emailCount", value.asInstanceOf[js.Any])
    
    inline def setEmailCountNull: Self = StObject.set(x, "emailCount", null)
    
    inline def setEmailCountUndefined: Self = StObject.set(x, "emailCount", js.undefined)
    
    inline def setNetworkMessageIds(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "networkMessageIds", value.asInstanceOf[js.Any])
    
    inline def setNetworkMessageIdsNull: Self = StObject.set(x, "networkMessageIds", null)
    
    inline def setNetworkMessageIdsUndefined: Self = StObject.set(x, "networkMessageIds", js.undefined)
    
    inline def setNetworkMessageIdsVarargs(value: String*): Self = StObject.set(x, "networkMessageIds", js.Array(value*))
    
    inline def setQuery(value: NullableOption[String]): Self = StObject.set(x, "query", value.asInstanceOf[js.Any])
    
    inline def setQueryNull: Self = StObject.set(x, "query", null)
    
    inline def setQueryUndefined: Self = StObject.set(x, "query", js.undefined)
    
    inline def setUrn(value: NullableOption[String]): Self = StObject.set(x, "urn", value.asInstanceOf[js.Any])
    
    inline def setUrnNull: Self = StObject.set(x, "urn", null)
    
    inline def setUrnUndefined: Self = StObject.set(x, "urn", js.undefined)
  }
}
