package typings.puppeteer.mod

import typings.std.Element
import typings.std.Map
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait JSHandle[T]
  extends StObject
     with JSEvalable[T] {
  
  /**
    * Returns a ElementHandle
    */
  def asElement(): ElementHandle[Element] | Null = js.native
  
  /**
    * Stops referencing the element handle.
    */
  def dispose(): js.Promise[Unit] = js.native
  
  /**
    * Gets the execution context.
    */
  def executionContext(): ExecutionContext = js.native
  
  /**
    * Returns a map with property names as keys and JSHandle instances for the property values.
    */
  def getProperties(): js.Promise[Map[String, JSHandle[js.Any]]] = js.native
  
  /**
    * Fetches a single property from the objectHandle.
    * @param propertyName The property to get.
    */
  def getProperty(propertyName: String): js.Promise[JSHandle[js.Any]] = js.native
  
  /**
    * Returns a JSON representation of the object.
    * The JSON is generated by running JSON.stringify on the object in page and consequent JSON.parse in puppeteer.
    * @throws The method will throw if the referenced object is not stringifiable.
    */
  def jsonValue(): js.Promise[js.Any] = js.native
}
