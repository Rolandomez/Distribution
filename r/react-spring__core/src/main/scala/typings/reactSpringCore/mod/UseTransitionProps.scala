package typings.reactSpringCore.mod

import typings.reactSpringTypes.mod.Falsy
import typings.reactSpringTypes.mod.Lookup
import typings.reactSpringTypes.mod.UnknownProps
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/* Inlined @react-spring/types.@react-spring/types.Merge<@react-spring/core.@react-spring/core.Omit<@react-spring/core.@react-spring/core.ControllerProps<@react-spring/types.@react-spring/types.UnknownProps, Item>, 'onResolve'>, {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.AnimationProps<any>['config'] | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined}> */
trait UseTransitionProps[Item] extends StObject {
  
  var default: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'default' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : boolean | @react-spring/core.@react-spring/core.SpringProps<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var cancel: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'cancel' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var config: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'config' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? @react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined : @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<@react-spring/types.@react-spring/types.UnknownProps>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined */ js.Any
  ] = js.undefined
  
  var delay: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'delay' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : number | (key : @react-spring/core.@react-spring/core.StringKeys<@react-spring/types.@react-spring/types.UnknownProps>): number | undefined | undefined */ js.Any
  ] = js.undefined
  
  var enter: js.UndefOr[TransitionTo[Item, Lookup[scala.Any]]] = js.undefined
  
  var exitBeforeEnter: js.UndefOr[Boolean] = js.undefined
  
  var expires: js.UndefOr[Boolean | Double | (js.Function1[/* item */ Item, Boolean | Double])] = js.undefined
  
  var from: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'from' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? @react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined : @react-spring/core.@react-spring/core.GoalValues<@react-spring/types.@react-spring/types.UnknownProps> | @react-spring/types.@react-spring/types.Falsy | undefined | undefined */ js.Any
  ] = js.undefined
  
  var immediate: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'immediate' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var initial: js.UndefOr[TransitionFrom[Item]] = js.undefined
  
  var keys: js.UndefOr[ItemKeys[Item]] = js.undefined
  
  var leave: js.UndefOr[TransitionTo[Item, Lookup[scala.Any]]] = js.undefined
  
  var loop: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'loop' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.LoopProp<@react-spring/core.@react-spring/core.ControllerUpdate<@react-spring/types.@react-spring/types.Lookup<any>, undefined>> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var onChange: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'onChange' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnChange<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnChange<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
  ] = js.undefined
  
  var onDestroyed: js.UndefOr[js.Function2[/* item */ Item, /* key */ Key, Unit]] = js.undefined
  
  var onPause: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'onPause' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnPause<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnPause<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
  ] = js.undefined
  
  var onProps: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'onProps' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnProps<@react-spring/types.@react-spring/types.UnknownProps> | / * Inlined {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnProps<any | undefined>} * /
  {} | undefined | undefined */ js.Any
  ] = js.undefined
  
  var onRest: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'onRest' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnRest<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnRest<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
  ] = js.undefined
  
  var onResume: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'onResume' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnResume<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnResume<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
  ] = js.undefined
  
  var onStart: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'onStart' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnStart<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnStart<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
  ] = js.undefined
  
  var pause: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'pause' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var ref: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'ref' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? @react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined : @react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var reset: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'reset' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
  ] = js.undefined
  
  var reverse: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: 'reverse' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : boolean | undefined | undefined */ js.Any
  ] = js.undefined
  
  var sort: js.UndefOr[js.Function2[/* a */ Item, /* b */ Item, Double]] = js.undefined
  
  var trail: js.UndefOr[Double] = js.undefined
  
  var update: js.UndefOr[TransitionTo[Item, Lookup[scala.Any]]] = js.undefined
}
object UseTransitionProps {
  
  inline def apply[Item](): UseTransitionProps[Item] = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[UseTransitionProps[Item]]
  }
  
  @scala.inline
  implicit open class MutableBuilder[Self <: UseTransitionProps[?], Item] (val x: Self & UseTransitionProps[Item]) extends AnyVal {
    
    inline def setCancel(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'cancel' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "cancel", value.asInstanceOf[js.Any])
    
    inline def setCancelUndefined: Self = StObject.set(x, "cancel", js.undefined)
    
    inline def setConfig(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'config' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? @react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined : @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<@react-spring/types.@react-spring/types.UnknownProps>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "config", value.asInstanceOf[js.Any])
    
    inline def setConfigUndefined: Self = StObject.set(x, "config", js.undefined)
    
    inline def setDefault(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'default' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : boolean | @react-spring/core.@react-spring/core.SpringProps<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "default", value.asInstanceOf[js.Any])
    
    inline def setDefaultUndefined: Self = StObject.set(x, "default", js.undefined)
    
    inline def setDelay(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'delay' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : number | (key : @react-spring/core.@react-spring/core.StringKeys<@react-spring/types.@react-spring/types.UnknownProps>): number | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "delay", value.asInstanceOf[js.Any])
    
    inline def setDelayUndefined: Self = StObject.set(x, "delay", js.undefined)
    
    inline def setEnter(value: TransitionTo[Item, Lookup[scala.Any]]): Self = StObject.set(x, "enter", value.asInstanceOf[js.Any])
    
    inline def setEnterFunction2(
      value: (Item, /* index */ Double) => (ControllerUpdate[Lookup[scala.Any], Item]) | SpringChain[Lookup[scala.Any]] | SpringToFn[Lookup[scala.Any]] | Falsy
    ): Self = StObject.set(x, "enter", js.Any.fromFunction2(value))
    
    inline def setEnterNull: Self = StObject.set(x, "enter", null)
    
    inline def setEnterUndefined: Self = StObject.set(x, "enter", js.undefined)
    
    inline def setEnterVarargs(value: (ControllerUpdate[Lookup[scala.Any], Item])*): Self = StObject.set(x, "enter", js.Array(value*))
    
    inline def setExitBeforeEnter(value: Boolean): Self = StObject.set(x, "exitBeforeEnter", value.asInstanceOf[js.Any])
    
    inline def setExitBeforeEnterUndefined: Self = StObject.set(x, "exitBeforeEnter", js.undefined)
    
    inline def setExpires(value: Boolean | Double | (js.Function1[/* item */ Item, Boolean | Double])): Self = StObject.set(x, "expires", value.asInstanceOf[js.Any])
    
    inline def setExpiresFunction1(value: /* item */ Item => Boolean | Double): Self = StObject.set(x, "expires", js.Any.fromFunction1(value))
    
    inline def setExpiresUndefined: Self = StObject.set(x, "expires", js.undefined)
    
    inline def setFrom(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'from' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? @react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined : @react-spring/core.@react-spring/core.GoalValues<@react-spring/types.@react-spring/types.UnknownProps> | @react-spring/types.@react-spring/types.Falsy | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "from", value.asInstanceOf[js.Any])
    
    inline def setFromUndefined: Self = StObject.set(x, "from", js.undefined)
    
    inline def setImmediate(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'immediate' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "immediate", value.asInstanceOf[js.Any])
    
    inline def setImmediateUndefined: Self = StObject.set(x, "immediate", js.undefined)
    
    inline def setInitial(value: TransitionFrom[Item]): Self = StObject.set(x, "initial", value.asInstanceOf[js.Any])
    
    inline def setInitialFunction2(value: (Item, /* index */ Double) => GoalProp[UnknownProps] | Falsy): Self = StObject.set(x, "initial", js.Any.fromFunction2(value))
    
    inline def setInitialNull: Self = StObject.set(x, "initial", null)
    
    inline def setInitialUndefined: Self = StObject.set(x, "initial", js.undefined)
    
    inline def setKeys(value: ItemKeys[Item]): Self = StObject.set(x, "keys", value.asInstanceOf[js.Any])
    
    inline def setKeysFunction1(value: Item => Key): Self = StObject.set(x, "keys", js.Any.fromFunction1(value))
    
    inline def setKeysNull: Self = StObject.set(x, "keys", null)
    
    inline def setKeysUndefined: Self = StObject.set(x, "keys", js.undefined)
    
    inline def setKeysVarargs(value: Key*): Self = StObject.set(x, "keys", js.Array(value*))
    
    inline def setLeave(value: TransitionTo[Item, Lookup[scala.Any]]): Self = StObject.set(x, "leave", value.asInstanceOf[js.Any])
    
    inline def setLeaveFunction2(
      value: (Item, /* index */ Double) => (ControllerUpdate[Lookup[scala.Any], Item]) | SpringChain[Lookup[scala.Any]] | SpringToFn[Lookup[scala.Any]] | Falsy
    ): Self = StObject.set(x, "leave", js.Any.fromFunction2(value))
    
    inline def setLeaveNull: Self = StObject.set(x, "leave", null)
    
    inline def setLeaveUndefined: Self = StObject.set(x, "leave", js.undefined)
    
    inline def setLeaveVarargs(value: (ControllerUpdate[Lookup[scala.Any], Item])*): Self = StObject.set(x, "leave", js.Array(value*))
    
    inline def setLoop(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'loop' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.LoopProp<@react-spring/core.@react-spring/core.ControllerUpdate<@react-spring/types.@react-spring/types.Lookup<any>, undefined>> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "loop", value.asInstanceOf[js.Any])
    
    inline def setLoopUndefined: Self = StObject.set(x, "loop", js.undefined)
    
    inline def setOnChange(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'onChange' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnChange<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnChange<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "onChange", value.asInstanceOf[js.Any])
    
    inline def setOnChangeUndefined: Self = StObject.set(x, "onChange", js.undefined)
    
    inline def setOnDestroyed(value: (/* item */ Item, /* key */ Key) => Unit): Self = StObject.set(x, "onDestroyed", js.Any.fromFunction2(value))
    
    inline def setOnDestroyedUndefined: Self = StObject.set(x, "onDestroyed", js.undefined)
    
    inline def setOnPause(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'onPause' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnPause<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnPause<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "onPause", value.asInstanceOf[js.Any])
    
    inline def setOnPauseUndefined: Self = StObject.set(x, "onPause", js.undefined)
    
    inline def setOnProps(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'onProps' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnProps<@react-spring/types.@react-spring/types.UnknownProps> | / * Inlined {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnProps<any | undefined>} * /
    {} | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "onProps", value.asInstanceOf[js.Any])
    
    inline def setOnPropsUndefined: Self = StObject.set(x, "onProps", js.undefined)
    
    inline def setOnRest(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'onRest' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnRest<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnRest<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "onRest", value.asInstanceOf[js.Any])
    
    inline def setOnRestUndefined: Self = StObject.set(x, "onRest", js.undefined)
    
    inline def setOnResume(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'onResume' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnResume<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnResume<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "onResume", value.asInstanceOf[js.Any])
    
    inline def setOnResumeUndefined: Self = StObject.set(x, "onResume", js.undefined)
    
    inline def setOnStart(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'onStart' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.OnStart<@react-spring/core.@react-spring/core.SpringValue<@react-spring/types.@react-spring/types.UnknownProps>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item> | {[ P in keyof @react-spring/types.@react-spring/types.UnknownProps ]:? @react-spring/core.@react-spring/core.OnStart<@react-spring/core.@react-spring/core.SpringValue<any | undefined>, @react-spring/core.@react-spring/core.Controller<@react-spring/types.@react-spring/types.UnknownProps>, Item>} | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "onStart", value.asInstanceOf[js.Any])
    
    inline def setOnStartUndefined: Self = StObject.set(x, "onStart", js.undefined)
    
    inline def setPause(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'pause' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "pause", value.asInstanceOf[js.Any])
    
    inline def setPauseUndefined: Self = StObject.set(x, "pause", js.undefined)
    
    inline def setRef(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'ref' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? @react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined : @react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "ref", value.asInstanceOf[js.Any])
    
    inline def setRefUndefined: Self = StObject.set(x, "ref", js.undefined)
    
    inline def setReset(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'reset' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : @react-spring/core.@react-spring/core.MatchProp<@react-spring/types.@react-spring/types.UnknownProps> | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "reset", value.asInstanceOf[js.Any])
    
    inline def setResetUndefined: Self = StObject.set(x, "reset", js.undefined)
    
    inline def setReverse(
      value: /* import warning: importer.ImportType#apply Failed type conversion: 'reverse' extends keyof {  from :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   initial :@react-spring/core.@react-spring/core.TransitionFrom<Item> | undefined,   enter :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   update :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   leave :@react-spring/core.@react-spring/core.TransitionTo<Item, @react-spring/types.@react-spring/types.Lookup<any>> | undefined,   keys :@react-spring/core.@react-spring/core.ItemKeys<Item> | undefined,   sort :(a : Item, b : Item): number | undefined,   trail :number | undefined,   exitBeforeEnter :boolean | undefined,   expires :boolean | number | (item : Item): boolean | number | undefined,   config :@react-spring/core.@react-spring/core.SpringConfig | (item : Item, index : number, state : @react-spring/core.@react-spring/core.TransitionPhase): @react-spring/core.@react-spring/core.SpringConfig | (key : @react-spring/core.@react-spring/core.StringKeys<any>): @react-spring/core.@react-spring/core.SpringConfig | undefined | undefined,   onDestroyed :(item : Item, key : @react-spring/core.@react-spring/core.Key): void | undefined,   ref :@react-spring/core.@react-spring/core.SpringRef<@react-spring/types.@react-spring/types.Lookup<any>> | undefined} ? any | undefined : boolean | undefined | undefined */ js.Any
    ): Self = StObject.set(x, "reverse", value.asInstanceOf[js.Any])
    
    inline def setReverseUndefined: Self = StObject.set(x, "reverse", js.undefined)
    
    inline def setSort(value: (/* a */ Item, /* b */ Item) => Double): Self = StObject.set(x, "sort", js.Any.fromFunction2(value))
    
    inline def setSortUndefined: Self = StObject.set(x, "sort", js.undefined)
    
    inline def setTrail(value: Double): Self = StObject.set(x, "trail", value.asInstanceOf[js.Any])
    
    inline def setTrailUndefined: Self = StObject.set(x, "trail", js.undefined)
    
    inline def setUpdate(value: TransitionTo[Item, Lookup[scala.Any]]): Self = StObject.set(x, "update", value.asInstanceOf[js.Any])
    
    inline def setUpdateFunction2(
      value: (Item, /* index */ Double) => (ControllerUpdate[Lookup[scala.Any], Item]) | SpringChain[Lookup[scala.Any]] | SpringToFn[Lookup[scala.Any]] | Falsy
    ): Self = StObject.set(x, "update", js.Any.fromFunction2(value))
    
    inline def setUpdateNull: Self = StObject.set(x, "update", null)
    
    inline def setUpdateUndefined: Self = StObject.set(x, "update", js.undefined)
    
    inline def setUpdateVarargs(value: (ControllerUpdate[Lookup[scala.Any], Item])*): Self = StObject.set(x, "update", js.Array(value*))
  }
}
